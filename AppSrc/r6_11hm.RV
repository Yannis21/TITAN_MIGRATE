//AB/ Project r6_11hm:kinhseis pelaton hmgio
//AB/ Object prj is a Report_Project
//AB/     Set ProjectName to "r6_11hm:kinhseis pelaton hmgio"
//AB/     Set ProjectFileName to "r6_11hm.RV"

// Project Object Structure
//   r6_11hm is a ReportViewSub
//     Company_DD is a DataDictionary
//     Branch_DD is a DataDictionary
//     GroupSub1 is a GroupSub
//       F_CODE_APO is a FormSub
//       F_CODE_EOS is a FormSub
//       TextBoxSub1 is a TextBoxSub
//       TextBoxSub2 is a TextBoxSub
//       FormSub3 is a FormSub
//       FormSub4 is a FormSub
//     GroupSub4 is a GroupSub
//       F_HME_APO is a FormSub
//       F_HME_EOS is a FormSub
//       Textbox3 is a Textbox
//       Textbox4 is a Textbox
//       axiastatus is a CheckBoxSub
//       e_status is a CheckBoxSub
//     GroupSub5 is a GroupSub
//       TextBoxSub25 is a TextBoxSub
//       FormSub1 is a FormSub
//       FormSub6 is a FormSub
//     dblstBranch is a dbListSub
//     DestRadio is a RadioGroup
//       WindowRadio is a Radio
//       PrinterRadio is a Radio
//       FileRadio is a Radio
//     dbRadioGroupSub1 is a dbRadioGroupSub
//       Radio1 is a RadioSub
//       Radio2 is a RadioSub
//       Radio3 is a RadioSub
//     FileTypeGroup is a Group
//       FileNameForm is a Form
//         New_dialog is a SaveAsdialog
//       TypeCombo is a ComboForm
//       ApplyExtCheckBox is a CheckBox
//       TextBoxSub23 is a TextBoxSub
//       TextBoxSub24 is a TextBoxSub
//     ButtonSub1 is a Button
//     ButtonSub2 is a ButtonSub
//     Textbox7 is a Textbox
//     Form3 is a Form
//     Form4 is a Form
//     cmovesWQLReport is a CrystalReportSubSQL

// Register all objects
Register_Object ApplyExtCheckBox
Register_Object axiastatus
Register_Object Branch_DD
Register_Object ButtonSub1
Register_Object ButtonSub2
Register_Object Company_DD
Register_Object cmovesWQLReport
Register_Object DestRadio
Register_Object dblstBranch
Register_Object dbRadioGroupSub1
Register_Object e_status
Register_Object F_CODE_APO
Register_Object F_CODE_EOS
Register_Object F_HME_APO
Register_Object F_HME_EOS
Register_Object FileNameForm
Register_Object FileRadio
Register_Object FileTypeGroup
Register_Object Form3
Register_Object Form4
Register_Object FormSub1
Register_Object FormSub3
Register_Object FormSub4
Register_Object FormSub6
Register_Object GroupSub1
Register_Object GroupSub4
Register_Object GroupSub5
Register_Object New_dialog
Register_Object PrinterRadio
Register_Object Radio1
Register_Object Radio2
Register_Object Radio3
Register_Object r6_11hm
Register_Object TextBoxSub1
Register_Object TextBoxSub2
Register_Object TextBoxSub23
Register_Object TextBoxSub24
Register_Object TextBoxSub25
Register_Object Textbox3
Register_Object Textbox4
Register_Object Textbox7
Register_Object TypeCombo
Register_Object WindowRadio


//AB/ Report View


//AB-StoreTopStart
Use dfallrpt
open hmctyp
OPEN syscurxr
Use sl100.sl
use hmgio.sl
use slrep.sl
open sysrep
open nomisma
//AB-StoreTopEnd

//AB-IgnoreStart

Use Rptvw.Sub
Use DFAllEnt.pkg
Use Group.Sub
Use Form.Sub
Use Txtbox.Sub
Use Chkbox.Sub
Use dbList.Sub
Use dbRgroup.Sub
Use Radio.Sub
Use Button.Sub

Use COMPANY.DD
Use BRANCH.DD

//AB-IgnoreEnd

ACTIVATE_VIEW Activate_r6_11hm FOR r6_11hm

Object r6_11hm is a ReportViewSub

    //AB-StoreTopStart
    property integer    epil public 0
    Property String     psModule  ""
    property string     psbranch public ''
    property integer    piwhat public 0
    property integer    pipol public 0
    property string     psrep public ''
    //AB-StoreTopEnd

    Set Label to "Ñ°´Áß‡©û â†§„©ú‡§ èú¢ò´È§"
    Set Size to 290 293
    Set Location to 1 91

    //AB-DDOStart

    Object Company_DD is a Company_DataDictionary
    End_Object    // Company_DD

    Object Branch_DD is a Branch_DataDictionary
        Set DDO_Server to (Company_DD(self))
    End_Object    // Branch_DD


    //AB-DDOEnd

    Object GroupSub1 is a GroupSub
        Set Label to "Ñß†¢¶ö„ î¶®‚‡§"
        Set Size to 42 283
        Set Location to 1 1
        Object F_CODE_APO is a FormSub

            //AB-StoreTopStart
                                                                                                                
            //AB-StoreTopEnd

            Set Size to 13 61
            Set Location to 10 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Prompt_Button_Mode to pb_PromptOn
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
                                                                                                                
            Set Prompt_Object to (SL100(Current_object))
            Procedure Prompt_Callback integer hPrompt
                set Export_Column of hPrompt to 0
                Set Initial_Column of hPrompt to 0
            end_procedure
            
            procedure onchange
                string sclient
                get value item 0 to sclient
                Move (fsclient(Self,sclient)) to sclient
                set value of (formsub3(self)) to sclient
            end_procedure
            
            procedure prompt
                Set psModule Of (sl100(Self)) to (psModule(Self))
                Forward Send Prompt
            end_procedure
            
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_CODE_APO

        Object F_CODE_EOS is a FormSub

            //AB-StoreTopStart
                                                                                                                
            //AB-StoreTopEnd

            Set Size to 13 61
            Set Location to 26 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Prompt_Button_Mode to pb_PromptOn
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
                                                                                                                
            Set Prompt_Object to (SL100(Current_object))
            Procedure Prompt_Callback integer hPrompt
                set Export_Column of hPrompt to 0
                Set Initial_Column of hPrompt to 0
            end_procedure
            
            procedure onchange
                string sclient
                get value item 0 to sclient
                Move (fsclient(Self,sclient)) to sclient
                set value of (formsub4(self)) to sclient
            end_procedure
            
            procedure prompt
                Set psModule Of (sl100(Self)) to (psModule(Self))
                Forward Send Prompt
            end_procedure
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_CODE_EOS

        Object TextBoxSub1 is a TextBoxSub
            Set Label to "ÄßÊ â‡õ†°Ê :"
            Set Auto_Size_State to FALSE
            Set FontSize to 4 0
            Set Location to 11 5
            Set Size to 10 44
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub1

        Object TextBoxSub2 is a TextBoxSub
            Set Label to "Ñ‡™ â‡õ†°Ê :"
            Set Auto_Size_State to FALSE
            Set FontSize to 4 0
            Set Location to 26 5
            Set Size to 13 47
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub2

        Object FormSub3 is a FormSub
            Set Size to 13 155
            Set Location to 10 124
            Set Label_Col_Offset to 2
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
            set enabled_state to false
            //AB-StoreEnd

        End_Object    // FormSub3

        Object FormSub4 is a FormSub
            Set Size to 13 155
            Set Location to 26 124
            Set Label_Col_Offset to 2
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
            set enabled_state to false
            //AB-StoreEnd

        End_Object    // FormSub4


        //AB-StoreStart
        Function StartNumber Returns string
            Function_return (Value(f_code_apo(Current_object), 0))
        End_function
        
        Function EndNumber Returns string
            Function_return (Value(f_code_eos(Current_object), 0))
        End_function
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // GroupSub1

    Object GroupSub4 is a GroupSub
        Set Label to "Ñß†¢¶ö„ Ü£ú®/§Âò™ â†§„©ú‡§"
        Set Size to 40 283
        Set Location to 43 1
        Object F_HME_APO is a FormSub
            Set Size to 13 69
            Set Location to 8 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Form_Datatype Item 0 to Mask_Date_Window
            Set Prompt_Button_Mode to pb_PromptOn
            Set Form_Mask Item 0 to "d/M/yyyy"
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
            set prompt_object to (ocalendar(self))
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_HME_APO

        Object F_HME_EOS is a FormSub
            Set Size to 13 69
            Set Location to 24 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Form_Datatype Item 0 to Mask_Date_Window
            Set Prompt_Button_Mode to pb_PromptOn
            Set Form_Mask Item 0 to "d/M/yyyy"
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
            set prompt_object to (ocalendar(self))
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_HME_EOS

        Object Textbox3 is a Textbox
            Set Label to "ÄßÊ Ü£/§Âò :"
            Set Location to 10 6
            Set Size to 10 47
            Set TypeFace to "MS Sans Serif"
        End_Object    // Textbox3

        Object Textbox4 is a Textbox
            Set Label to "Ñ‡™ Ü£§Âò  :"
            Set Location to 24 5
            Set Size to 12 45
            Set TypeFace to "MS Sans Serif"
        End_Object    // Textbox4

        Object axiastatus is a CheckBoxSub
            Set Label to "ãÊ§¶ Ä•Âú™"
            Set Size to 10 55
            Set Location to 10 157
            Set Checked_State to TRUE

            //AB-StoreStart
                                                                                                                
            //AB-StoreEnd

        End_Object    // axiastatus

        Object e_status is a CheckBoxSub
            Set Label to "Ä§·¢¨©û èò®ò©´ò´†°¶Á"
            Set Size to 10 96
            Set Location to 26 157
        End_Object    // e_status


        //AB-StoreStart
        Function Starthme Returns string
            Function_return (Value(f_hme_apo(Current_object), 0))
        End_function
        
        Function Endhme Returns string
            Function_return (Value(f_hme_eos(Current_object), 0))
        End_function
        
        
        Function analstat Returns integer
            Function_return (Select_state(e_status(Current_object), 0))
        End_function
        
        Function axiastat Returns integer
            Function_return (Select_state(axiastatus(Current_object), 0))
        End_function
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // GroupSub4

    Object GroupSub5 is a GroupSub
        Set Label to "Ñß†¢¶ö„ Ü£ú®¶¢¶öÂ¶¨"
        Set Size to 29 281
        Set Location to 85 1
        Object TextBoxSub25 is a TextBoxSub
            Set Label to "Ü£ú®¶¢Êö†¶"
            Set Location to 14 5
            Set Size to 10 44
            Set TypeFace to "MS Sans Serif"
        End_Object    // TextBoxSub25

        Object FormSub1 is a FormSub
            Set Size to 13 49
            Set Location to 12 60
            Set Label_Col_Offset to 2
            Set Prompt_Button_Mode to pb_PromptOn
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
            Set Prompt_Object to (hmgio(Current_object))
            Set Numeric_Mask Item 0 to 2 0 '*, '
            Procedure Prompt_Callback integer hPrompt
                set Export_Column of hPrompt to 0
                Set Initial_Column of hPrompt to 0
            end_procedure
            
            procedure onchange
                string whmgio
                get value item 0 to whmgio
                move whmgio to hmgio.hmgio_code
                find eq hmgio by index.1
                if (found);
                    set value of (formsub6(self)) to hmgio.hmgio_descr
                else;
                    set value of (formsub6(self)) to ''
            end_procedure
            
            
            procedure prompt
                set psmodule of (hmgio(self)) to (psmodule(self))
                forward send prompt
            end_procedure
            
            
            //AB-StoreEnd

        End_Object    // FormSub1

        Object FormSub6 is a FormSub
            Set Size to 13 165
            Set Location to 12 111
            Set Label_Col_Offset to 2
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
            set enabled_state to false
            //AB-StoreEnd

        End_Object    // FormSub6


        //AB-StoreStart
        Function Starttypkin Returns String
            Function_return (Value(formsub1(Current_object), 0))
        End_function
        
        
        
        
        //AB-StoreEnd

    End_Object    // GroupSub5

    Object dblstBranch is a dbListSub
        Set Main_File to Branch.File_Number
        Set Server to (Branch_DD(self))
        Set Size to 71 199
        Set Location to 116 84
        Set Color to 15263976
        Set CurrentCellColor to 14205112
        Set Highlight_Row_State to FALSE
        Set Auto_Index_State to FALSE
        Set Auto_Column_State to FALSE
        Set Move_Value_Out_State to FALSE
        Set Auto_Export_State to FALSE
        Set Auto_Shadow_State to FALSE
        Set Find_Search_State to FALSE
        Set Select_Mode to Multi_Select

        Begin_Row
            Entry_Item ('')
            Entry_Item Branch.Branch_code
            Entry_Item Branch.Branch_name
        End_Row

        Set Form_Width    item 0 to 15
        Set Header_Label  item 0 to ""
        
        Set Form_Width    item 1 to 42
        Set Header_Label  item 1 to "â‡õ†°Ê™"
        
        Set Form_Width    item 2 to 135
        Set Header_Label  item 2 to "ìß¶°ò´·©´û£ò"
        

        //AB-StoreStart
                                                                    
        Set Select_Mode                     to Multi_Select
        Set Column_Option           item 0  to Noenter False
        Set Column_checkBox_state   item 0  to true
        Set Auto_Shadow_State               to False
        Set Auto_Index_State                to False
        Set Popup_Search_State              to True
        Set Find_Search_State               to False
        
        Set Color                           to 15263976
        Set TextColor                       to clWindowText
        Set CurrentRowColor                 to 14205112
        Set Highlight_row_color             to 14205112
        Set CurrentRowTextColor             to clWindowText
        Set CurrentCellColor                to 14205112
        Set CurrentCellTextColor            to clBtnText
        
        
        Procedure Toggle_Select
            Local integer iBase iOffset iCol
            Move 0 to iOffset
            Get Base_Item to iBase
            Get Current_Col to iCol
            Forward Send Toggle_Select
            Send DoDisplayCheckBox (iBase+iOffset) (Select_State(self,iBase))
            Set Dynamic_Update_State to true
            Set Dynamic_Update_State to true
        End_Procedure  //Toggle_Select
        
        Procedure Entry_Display Integer i1 Integer i2
            Local integer iBase iOffset iSelItemsID bState
            Get base_Item to iBase
            move 0 to iOffset
            move (Selected_Items(self)) to iSelItemsID
            Forward Send Entry_Display i1 i2
            Get find_element of iSelItemsID branch.recnum to bState
            Send DoDisplayCheckBox (iBase+iOffset) (bState<>-1)
        End_Procedure // Entry_Display
        
        
        
        
        
        
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // dblstBranch

    Object DestRadio is a RadioGroup

        //AB-StoreTopStart
                                                
        //AB-StoreTopEnd

        Set Label to "Ñ°´Á&ß‡©û"
        Set Size to 60 49
        Set Location to 188 3
        Object WindowRadio is a Radio
            Set Size to 13 30
            Set Location to 12 12
            Set Bitmap to "screen4.bmp"
        End_Object    // WindowRadio

        Object PrinterRadio is a Radio
            Set Size to 10 31
            Set Location to 30 12
            Set Bitmap to "PRINT_M1.BMP"
        End_Object    // PrinterRadio

        Object FileRadio is a Radio
            Set Size to 10 29
            Set Location to 47 12
            Set Bitmap to "FILE16.BMP"
        End_Object    // FileRadio


        //AB-StoreStart
                                                
        Procedure Notify_Select_State  Integer iNewItem  Integer iOldItem
            Forward Send Notify_Select_State  iNewItem  iOldItem
            If iNewItem Eq 0 ;
                Set Output_Device_Mode To WQL_PRINT_TO_WINDOW
            Else If iNewItem Eq 1;
                Set Output_Device_Mode To WQL_PRINT_TO_PRINTER
            Else If iNewItem Eq 2 ;
                Set Output_Device_Mode To WQL_PRINT_TO_FILE
            Send AdjustFileTypeShadow (iNewItem < 2)
        End_Procedure
        
        //AB-StoreEnd

    End_Object    // DestRadio

    Object dbRadioGroupSub1 is a dbRadioGroupSub
        Set Size to 50 61
        Set Location to 125 10
        Object Radio1 is a RadioSub
            Set Label to "åÊ£†©£ò 1"
            Set Size to 10 46
            Set Location to 10 5

            //AB-StoreStart
            set label to syscurxr.c_code0
            //AB-StoreEnd

        End_Object    // Radio1

        Object Radio2 is a RadioSub
            Set Label to "åÊ£†©£ò 2"
            Set Size to 10 46
            Set Location to 23 5

            //AB-StoreStart
            set label to syscurxr.c_code00
            //AB-StoreEnd

        End_Object    // Radio2

        Object Radio3 is a RadioSub
            Set Label to "åÊ£†©£ò 3"
            Set Size to 10 46
            Set Location to 36 5

            //AB-StoreStart
            set label to syscurxr.c_coder
            //AB-StoreEnd

        End_Object    // Radio3


        //AB-StoreStart
        Procedure Notify_Select_State  Integer iNewItem  Integer iOldItem
            string snom1 snom2 snom3
            Clear Nomisma
            move syscurxr.c_code0 to nomisma.nomisma_code
            Find eq Nomisma By Index.1 // Nomisma:Index.1:Nomisma_Code
            move nomisma.dekadika to snom1
            Clear Nomisma
            move syscurxr.c_code00 to nomisma.nomisma_code
            Find eq Nomisma By Index.1 // Nomisma:Index.1:Nomisma_Code
            move nomisma.dekadika to snom2
            clear nomisma
            move syscurxr.c_coder to nomisma.nomisma_code
            Find eq Nomisma By Index.1 // Nomisma:Index.1:Nomisma_Code
            move nomisma.dekadika to snom3
            Forward Send Notify_Select_State  iNewItem  iOldItem
            If iNewItem Eq 0;
                Set epil to snom1
            Else If iNewItem Eq 1;
                Set epil to snom2
            Else If iNewItem Eq 2 ;
                Set epil to snom3
            If iNewItem Eq 0;
                Set piwhat to 1
            Else If iNewItem Eq 1;
                Set piwhat to 2
            Else If iNewItem Eq 2 ;
                Set piwhat to 3
        
        End_Procedure
        
        //AB-StoreEnd

    End_Object    // dbRadioGroupSub1

    Object FileTypeGroup is a Group

        //AB-StoreTopStart
                                                
        //AB-StoreTopEnd

        Set Label to "Ä§ò≠¶®· Ä®ÆúÂ¶¨"
        Set Size to 60 169
        Set Location to 189 53
        Object FileNameForm is a Form

            //AB-StoreTopStart
                                                                                                                
            //AB-StoreTopEnd

            Set Size to 13 133
            Set Location to 10 33
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Prompt_Button_Mode to pb_PromptOn

            //AB-StoreStart
            //*** Default item value
            Set Value item 0 to "cmoves.doc"
            
            Procedure Prompt
                Local String  SelectedFile
                Local String  Extension
                Local String  Filter
                Local Integer Type
                Local Integer Selected
            
                //*** Setup initial file name
                Get Value Item 0 To SelectedFile
                If SelectedFile Eq "" Begin
                    Get WQLFileExt To Extension
                    Move ("cmoves" + Extension) To SelectedFile
                End
            
                //*** Create a filter for the save as dialog
                Move "" To Filter
                Get WQLFileTYpe To Type
                If Type Eq WQL_WordWinType ;
                    Append Filter "Word for Windows (*.doc)|*.doc"
                If ((Type Eq WQL_Xls2Type) Or (Type Eq WQL_Xls3Type) Or (Type Eq WQL_Xls4Type) Or (Type Eq WQL_Xls5Type)) ;
                    Append Filter "Excel (*.xls)|*.xls"
                If Type Eq WQL_RichTextFormatType ;
                    Append Filter "Rich Text (*.rtf)|*.rtf"
                If Type Eq WQL_TextType ;
                    Append Filter "Text (*.txt)|*.txt"
                If Type Eq WQL_RecordType ;
                    Append Filter "Record Style (*.rec)|*.rec"
                If Type Eq WQL_CommaSeparatedType ;
                    Append Filter "Comma Separated Values (*.csv)|*.csv"
                If Type Eq WQL_DIFType ;
                    Append Filter "Data Interchange Format (*.dif)|*.dif"
                Append Filter "|All Files|*.*"
            
                //*** Create a save as dialog
                Object New_dialog Is A SaveAsdialog
                    //*** Setup title
                    Set Dialog_Caption        To "Item report export to disk, give file name"
                    Set Filter_String         To Filter
                    Set Hidereadonly_State    To True
                    Set Overwriteprompt_State To True
                    Set Showfiletitle_State   To True
                    Set File_Title            To SelectedFile
                End_object // New_dialog
            
                //*** Start the save as dialog
                Get Show_Dialog Of (New_dialog(Current_object)) To Selected
                If Selected Begin
                    Get File_Name Of (New_Dialog(Current_object)) To SelectedFile
                    Set Value Item 0 To SelectedFile
                End
            
                //*** Destroy the save as dialog
                Send Request_Destroy_object To (New_dialog(Current_object))
            End_procedure // Start_Prompt
            
            //***
            //*** Function: FileName
            //*** Purpose : Returns the name of the file to export to
            //***
            
            Function FileName Returns String
                Local String  SelectedFile
            
                //*** Get file name
                Get Value Item 0 To SelectedFile
                If SelectedFile Eq "" ;
                    Move "cmoves.doc" To SelectedFile
            
                Function_return SelectedFile
            End_function // FileName
            
            
            
            
            
            
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // FileNameForm

        Object TypeCombo is a ComboForm

            //AB-StoreTopStart
                                                                    
            //AB-StoreTopEnd

            Set Size to 13 133
            Set Location to 29 33
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right

            //AB-StoreStart
            Set Entry_state Item 0 To False
            Set Combo_Sort_State To False
            
            Procedure Combo_Fill_List
                Send Combo_Add_item "Word for Windows"
                Send Combo_Add_Item "Excel 2.1"
                Send Combo_Add_Item "Excel 3.0"
                Send Combo_Add_Item "Excel 4.0"
                Send Combo_Add_Item "Excel 5.0"
                Send Combo_Add_Item "Rich Text"
                Send Combo_Add_Item "Text"
                Send Combo_Add_Item "Record Style"
                Send Combo_Add_Item "Comma Separated"
                Send Combo_Add_Item "Data Interchage Format (DIF)"
            End_procedure // Combo_Fill_List
            
            Function FileType Returns Integer
                Local String  FileTypeName
                Local Integer FileTypeValue
                Local Integer SelectedItem
            
                Get Value Item 0 To FileTypeName
                Get Combo_Item_Matching FileTypeName To SelectedItem
                Move WQL_TextType To FileTypeValue
                If SelectedItem Ne -1 Begin
                    If SelectedItem Eq 0 Move WQL_WordWinType        To FileTypeValue
                    If SelectedItem Eq 1 Move WQL_Xls2Type           To FileTypeValue
                    If SelectedItem Eq 2 Move WQL_Xls3Type           To FileTypeValue
                    If SelectedItem Eq 3 Move WQL_Xls4Type           To FileTypeValue
                    If SelectedItem Eq 4 Move WQL_Xls5Type           To FileTypeValue
                    If SelectedItem Eq 5 Move WQL_RichTextFormatType To FileTypeValue
                    If SelectedItem Eq 6 Move WQL_TextType           To FileTypeValue
                    If SelectedItem Eq 7 Move WQL_RecordType         To FileTypeValue
                    If SelectedItem Eq 8 Move WQL_CommaSeparatedType To FileTypeValue
                    If SelectedItem Eq 9 Move WQL_DIFType            To FileTypeValue
                End
            
                Function_return FileTypeValue
            End_function // FileType
            
            Function FileExt Returns String
                Local String  FileTypeExt
                Local Integer FileTypeValue
            
                Get FileType To FileTypeValue
                If FileTypeValue Eq WQL_WordWinType        Move ".doc" To FileTypeExt
                If FileTypeValue Eq WQL_Xls2Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_Xls3Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_Xls4Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_Xls5Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_RichTextFormatType Move ".rtf" To FileTypeExt
                If FileTypeValue Eq WQL_TextType           Move ".txt" To FileTypeExt
                If FileTypeValue Eq WQL_RecordType         Move ".rec" To FileTypeExt
                If FileTypeValue Eq WQL_CommaSeparatedType Move ".csv" To FileTypeExt
                If FileTypeValue Eq WQL_DIFType            Move ".dif" To FileTypeExt
            
                Function_return FileTypeExt
            End_function // FileExt
            
            Procedure OnChange
                Local String  OldName
                Local String  Extension
                Local Integer ChangeExt
            
                Get ChangeExtension To ChangeExt
                If ChangeExt Begin
                    Get WQLFileName To OldName
                    Get FileExt To Extension
                    Set WQLFileName To (Left(OldName, (Pos(".", Oldname) - 1)) + Extension)
                End
            End_procedure // OnChange
            
            
            //AB-StoreEnd

        End_Object    // TypeCombo

        Object ApplyExtCheckBox is a CheckBox

            //AB-StoreTopStart
                                                                                                                
            //AB-StoreTopEnd

            Set Label to "Apply combo extension"
            Set Size to 10 89
            Set Location to 47 33

            //AB-StoreStart
            //*** Apply extensions by default
            Set Select_state Item 0 To True
            //AB-StoreEnd

        End_Object    // ApplyExtCheckBox

        Object TextBoxSub23 is a TextBoxSub
            Set Label to "é§¶£ò"
            Set FontSize to 4 0
            Set Location to 10 6
            Set Size to 10 25
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub23

        Object TextBoxSub24 is a TextBoxSub
            Set Label to "íÁß¶™"
            Set FontSize to 4 0
            Set Location to 30 5
            Set Size to 10 23
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub24


        //AB-StoreStart
        Function WQLFileName Returns String
            Function_return (FileName(FileNameForm(Current_object)))
        End_function // WQLFIleName
        
        Procedure Set WQLFileName String NewName
            Set Value Of (FileNameForm(Current_object)) Item 0 To NewName
        End_procedure // Set WQLFIleName
        
        Function WQLFileType Returns Integer
            Function_return (FileType(TypeCombo(Current_object)))
        End_function // WQLFIleType
        
        Function WQLFileExt Returns Integer
            Function_return (FileExt(TypeCombo(Current_object)))
        End_function // WQLFIleExt
        
        Function ChangeExtension Returns Integer
            Function_return (Select_state(ApplyExtCheckBox(Current_object), 0))
        End_function // ChangeExtension
        
        //AB-StoreEnd

    End_Object    // FileTypeGroup

    Object ButtonSub1 is a Button

        //AB-StoreTopStart
                                                
        //AB-StoreTopEnd

        Set Bitmap to "RUNPROG.BMP"
        Set Size to 18 28
        Set Location to 199 231

        //AB-StoreStart
        Procedure OnClick
           string dateapo dateeos datehh datemm dateyy  msgstr
           integer epil listatus ihmgio
           Get Starthme To dateapo
           Get Endhme   To dateeos
           Get value of (formsub1(GroupSub5(Self)))  item 0 to ihmgio
           if (ihmgio = 0) begin
              send info_box "É‚§ Ñß†¢‚•ò´ú Ü£ú®¶¢Êö†¶ !!" "è¢û®¶≠¶®Âò"
              procedure_return
            end
           if dateeos eq "" begin
             move 31 to datehh
             move 12 to datemm
             move syscurxr.year_year to dateyy
             Append dateeos datehh
             append dateeos datemm
             append dateeos dateyy
            end
        
            if dateapo eq "" begin
              move 01 to datehh
              move 01 to datemm
              move syscurxr.year_year to dateyy
              append dateapo datehh
              append dateapo "/"
              append dateapo datemm
              append dateapo "/"
              append dateapo dateyy
        
           end
            move 0 to listatus
                 if (dateapo ne "") begin
                   if ((dateapo<syscurxr.year_xrhshfrom) or (dateapo>syscurxr.year_xrhshto)) begin
                      move "" to msgstr
                      move 1 to listatus
                      move "Ü£/§Âú™ Ñß†¢¶ö„™ Ñ°´Ê™ é®Â‡§ ï®„©û™" to msgstr
                      error 999 msgstr
        
                   end
                 end
        
                  if (dateeos ne "") begin
                   if ((dateeos<syscurxr.year_xrhshfrom) or (dateeos>syscurxr.year_xrhshto)) begin
                      move "" to msgstr
                       move 1 to listatus
                      move "Ü£/§Âú™ Ñß†¢¶ö„™ Ñ°´Ê™ é®Â‡§ ï®„©û™" to msgstr
                      error 999 msgstr
                   end
                  end
           if (listatus = 0) begin
                Send RuncmovesReport To (cmovesWQLReport(Current_Object))
           end
        End_Procedure
        
        //AB-StoreEnd

    End_Object    // ButtonSub1

    Object ButtonSub2 is a ButtonSub

        //AB-StoreTopStart
                                                                                
        //AB-StoreTopEnd

        Set Bitmap to "CANCEL.BMP"
        Set Size to 18 28
        Set Location to 222 231
        Set Form_TypeFace Item 0 to "MS Sans Serif"

        //AB-StoreStart
        Procedure OnClick
            Send Request_Cancel
        End_Procedure
        
        
        
        
        //AB-StoreEnd

    End_Object    // ButtonSub2

    Object Textbox7 is a Textbox
        Set Label to "Ñß†¢¶ö„ ú°´Áß‡©û™ "
        Set Location to 249 7
        Set Size to 10 69
        Set TypeFace to "MS Sans Serif"
    End_Object    // Textbox7

    Object Form3 is a Form
        Set Size to 13 65
        Set Location to 261 6
        Set Prompt_Button_Mode to pb_PromptOn

        //AB-StoreStart
                                                                                
        Set Prompt_Object to (SLrep(Current_object))
        procedure prompt
            Set pskathg Of (slrep(Self)) to 'r6_11hm.rv'
            Forward Send Prompt
        end_procedure
        
        procedure onchange
            string skathg
            get value item 0 to skathg
            clear sysrep
            move 'r6_11hm.rv' to sysrep.view
            move skathg to sysrep.name
            find eq sysrep by index.1
            if (psmodule(self)='02')  set value of (form4(self)) to sysrep.descr1
            else                      set value of (form4(self)) to sysrep.descr
            set psrep to sysrep.name
        end_procedure
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // Form3

    Object Form4 is a Form
        Set Size to 13 213
        Set Location to 261 74

        //AB-StoreStart
        set enabled_state to false
        //AB-StoreEnd

    End_Object    // Form4


    //AB-StoreStart
    
    Procedure Activate_View Returns Integer
        String sStr sModule StrDisp rval scompany
        Integer iInt icheck
        set value of (f_hme_apo(groupsub4(current_object))) to syscurxr.year_xrhshfrom
        set value of (f_hme_eos(groupsub4(current_object))) to syscurxr.year_xrhshto
    
        Forward Get Msg_Activate_View to rVal
    
        Get psMenuModule  Of Main_Menu  to sModule
        Set psModule                    to sModule
    
        if (smodule = "01") begin
             Set Label Of r6_11hm to "âò®´‚¢ú™ èú¢ò´È§"
        end
        if (smodule = "02") begin
             Set Label Of r6_11hm to "âò®´‚¢ú™ è®¶£ûüú¨´È§"
        end
        Send Delete_Data            to (Selected_Items(dblstBRANCH(self)))
        Send Find to (branch_dd(self)) First_Record 1
        Set Dynamic_Update_State of (dblstbranch(self)) to false
        While (Found=1)
            get field_current_value of branch_dd field branch.company_code to scompany
            get field_current_value of branch_dd field branch.branch_apoth to icheck
            if ((syscurxr.company_code=scompany) and (icheck=1));
                Set Array_Value of (Selected_Items(dblstbranch(self))) Item iInt to branch.Recnum
            Add 1 to iInt
            Send Find to (branch_dd(self)) Next_Record 1
        Loop
        Send Beginning_Of_Data    to (dblstbranch(self))
        Set Dynamic_Update_State of (dblstbranch(self)) to true
    
    End_Procedure
    
    Object cmovesWQLReport Is A CrystalReportSubSQL
    
        Property Integer ReportReady Public False
        Set Report_View_id To (Parent(Current_object))
    
        Procedure OnStartPrinting
    
            local string  lscatypes Startnumbern Endnumbern Startnamen Endnamen
            Local integer Starthmen Endhmen repstatus StartantliaNumber ianal
            Local string   endtypkinn Selection FileName sbranch slabel srep
            Local integer EndantliaNumber FileType Destination SortOrder;
                          NumSortFields CurSortField SortDirection wdate starttypkinn
            local number startposon fstartposo
            local integer fepil  iwhat axiastatn iint icount irec
            string flysh1 sStr flysh2  module shmgio stext scode sname
            date   apo eos
            Get starthme to starthmen
            get value of form3 to srep
            Move "" To Selection
            get axiastat to axiastatn
            Append Selection (If(Selection <> "", " and ", ""))"{cmoves.company_code} = " '"' (Trim(syscurxr.company_code)) '"'
    
            Get Select_Count of (dblstbranch(Self)) to iInt
            If (iInt>0) Begin
                move '' to stext
                For iCount from 0 to (iInt-1)
                    Get array_value of (Selected_Items(dblstbranch(self))) Item iCount to iRec
                    Clear branch
                    Move iRec to branch.Recnum
                    Find Eq branch.Recnum
                    move branch.branch_code to scode
                    move branch.branch_name to sname
                    Move (Append(sbranch,(trim(sname)+' '))) to sbranch
                    Move (Append(stext,(trim(scode)+' '))) to stext
                Loop
            End
            Append Selection (If(Selection <> "", " and ", "")) "InStr('" stext "',{cmoves.branch_code})<>0"
            Append Selection (If(Selection <> "", " and ", "")) "{cmoves.year_year} = " '' (syscurxr.year_year) ''
    
            If axiastatn eq 1;
                Append Selection (If(Selection <> "", " and ", "")) "{cmoves.cmoves_axia} <>  " '' (0) ''
            Get StartNumber To StartNumbern
            Get EndNumber   To Endnumbern
            If (Trim(StartNumbern)) ne "" ;
               Append Selection (If(Selection <> "", " and ", "")) "{cmoves.client_id} >= " '"' (Trim(startnumbern)) '"'
            If (Trim(EndNumbern)) ne "" ;
               Append Selection (If(Selection <> "", " and ", "")) "{cmoves.client_id} <= " '"' (Trim(Endnumbern)) '"'
            Get Starttypkin To Starttypkinn
    
             Move '' to sStr
             clear hmctyp
             move starttypkinn to hmctyp.hmgio_code
             find gt hmctyp by index.1
             while  ((found) and (hmctyp.hmgio_code=starttypkinn))
                Move (Append(sStr,(trim(hmctyp.ctypkin_code)+' '))) to sStr
                find gt hmctyp by index.1
             loop
             Move (Trim(sStr)) to sStr
             Append Selection (If(Selection <> "", " and ", "")) "InStr('" sStr "',{cmoves.ctypkin_code})<>0"
    
             get value of (formsub6(groupsub5(self))) to shmgio
             Set Formula "fhmgio" To (winql_string(shmgio))
    
             Get Endhme   To Endhmen
             If (trim(Endhmen)) ne 0 ;
                  Append Selection (If(Selection <> "", " and ", "")) "{cmoves.cmoves_hmnia} <= " (winql_date(Endhmen))
             If (srep="r6_1hmp.rpt");
                  Append Selection (If(Selection <> "", " and ", "")) "{cmoves.cmoves_hmnia} >= " (winql_date(starthmen))
             get value of (form4(self)) to slabel
             Set Formula "formula1" to (Winql_String(psModule(Self)))
             Set Formula "flabel" to (Winql_String(slabel))
             Set Formula "fwhat" to (Winql_number(piwhat(Self)))
             get  psModule to flysh1
             move "04" to flysh2
    
             Move '' to sStr
             Move (Append(sStr,(flysh1+flysh2))) to sStr
             Move (Trim(sStr)) to sStr
             Append Selection (If(Selection <> "", " and ", "")) "InStr('" sStr "',{cmoves.module_from})<>0"
             /// test kodikas
    //        Get Select_Count of (dblstbranch(Self)) to iInt
    //        If (iInt>0) Begin
    //            move '' to stext
    //            For iCount from 0 to (iInt-1)
    //                Get array_value of (Selected_Items(dblstbranch(self))) Item iCount to iRec
    //                Clear branch
    //                Move iRec to branch.Recnum
    //                Find Eq branch.Recnum
    //                move branch.branch_code to scode
    //                move branch.branch_name to sname
    //                Move (Append(sbranch,(trim(sname)+' '))) to sbranch
    //                Move (Append(stext,(trim(scode)+' '))) to stext
    //            Loop
    //        End
    //        Append Selection (If(Selection <> "", " and ", "")) "InStr('" stext "',{cmoves.branch_code})<>0"
    
            Set SelectionFormula To Selection
    
            get analstat to ianal
            get starthme to apo
            get endhme   to eos
            get psModule to module
            get epil to fepil
    
            set formula "fanal" to (winql_number(ianal))
            Set Formula "fepil" to (winql_number(fepil))  ////////To ('"' + (Replaces('"', fepil, "")) + '"')
            Set Formula "fapo" To (winql_date(apo))
            Set Formula "feos" To (winql_date(eos))
            Set Formula "fmodule" To  (winql_string(module))
            set formula "fbranch" to (winql_string(sbranch))
            If Selection Eq "" ;
                Set Formula "SelTxt" To ('"' + "NONE" + '"')
            Else ;
                Set Formula "SelTxt" To ('"' + (Replaces('"', Selection, "")) + '"')
    
            move 1 To SortDirection
            Send AddSortField "{cmoves.cmoves_hmnia}" SortDirection
            Get Output_Destination To Destination
            If ((Destination Eq WQL_PRINT_TO_FILE) Or (Destination Eq WQL_PRINT_TO_MAPI)) Begin
                Get WQLFileName To FileName
                Get WQLFileType To FileType
                Set ExportFileName   To FileName
                Set ExportFormatType To FileType
            End
            If Destination EQ WQL_PRINT_TO_WINDOW ;
                Set ReportReady To False
            Else ;
                Set ReportReady To True
        End_procedure // OnStartPrinting
    
    
        Procedure RuncmovesReport
           Set Report_name  to (psrep(self))
           Send Run_report
           Send Cursor_Ready To (Cursor_Control(Current_Object))
           If (ReportReady(Current_object)) ;
                Send Info_box "WinQL report ready."
        End_procedure // RunCustReport
    
    End_object // CustWQLReport
    
    Function StartNumber Returns string
        Function_return (StartNumber(groupSub1(Current_object)))
    End_function // StartNumber
    
    Function EndNumber Returns string
        Function_return (EndNumber(groupSub1(Current_object)))
    End_function // StartNumber
    
    Function Starthme Returns integer
        Function_return (Starthme(groupSub4(Current_object)))
    End_function // StartNumber
    
    Function Endhme Returns integer
        Function_return (Endhme(groupSub4(Current_object)))
    End_function // StartNumber
    
    Function Starttypkin Returns integer
        Function_return (Starttypkin(groupSub5(Current_object)))
    End_function // Starttypkin
    
    Function analstat Returns integer
        Function_return (analstat(groupsub4(Current_object)))
    End_function
    
    Function axiastat Returns integer
        Function_return (axiastat(groupsub4(Current_object)))
    End_function
    Procedure AdjustFileTypeShadow Integer NewState
        Set Object_Shadow_State Of (FileTypeGroup(Current_Object)) To NewState
    End_procedure // AdjustFileTypeShadow
    
    Procedure AdjustBoundaryShadow Integer GroupNum
        Set Object_Shadow_State Of (groupSub1(Current_object)) To (GroupNum <> 0)
    End_procedure // AdjustBoundaryShadow
    
    Function WQLFileName Returns String
        Function_return (WQLFileName(FileTypeGroup(Current_object)))
    End_function // WQLFIleName
    
    Function WQLFileType Returns Integer
        Function_return (WQLFileType(FileTypeGroup(Current_object)))
    End_function // WQLFIleType
    
    
    
    
    
    
    //AB-StoreEnd

End_Object    // r6_11hm


//AB-StoreStart
        
        
        
        
        
        
        
        
        
        
        
        
        
        
//AB-StoreEnd

//AB/ End_Object    // prj
