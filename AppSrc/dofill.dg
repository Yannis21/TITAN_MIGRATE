
// Register all objects
Register_Object witemxen
Register_Object Dofill
Register_Object Fpa_DD
Register_Object Item_DD
Register_Object Units_DD
Register_Object Witemkat_DD
Register_Object Witemx_DD
Register_Object Witemxt_DD
Register_Object Witemxed_DD
Register_Object itemd_DD
Register_Object iteml_DD
Register_Object wax_DD

//AB-IgnoreStart

Use Bproces.Sub
Use DFAllEnt.pkg
use syscurxr.dd
Use UNITS.DD
use wax.dd
Use WITEMKAT.DD
Use FPA.DD
Use ITEM.DD
Use iteml.dd
Use WITEMX.DD
Use WITEMXT.DD
Use itemd.dd
Use witemxen.DD
use witemxed.dd
use v185.vw
//AB-IgnoreEnd
open syscurxr
Object Dofill is a BusinessProcessSub

    //AB-StoreTopStart

    Property    String  psrecr      Public ''
    Property    String  pswax       Public ''
    Property    number  piqty       Public  0
    property    string  psitem      public ''
    property    integer piTxtID public 0
    property    integer piLathos public 0

    Open SysCurXr

    Set Status_Panel_State to False
    Set Display_Error_State to True

    //AB-StoreTopEnd

    Set Size to 82 140
    Set Location to 72 182

    //AB-DDOStart
    Object wax_DD is a wax_DataDictionary
        Set read_only_state to true
    End_Object


    object Units_DD is a Units_DataDictionary
       Set read_only_state to true
    End_Object    // Units_DD

    Object Witemkat_DD is a Witemkat_DataDictionary
      Set read_only_state to true
    End_Object    // Witemkat_DD

    Object Fpa_DD is a Fpa_DataDictionary
      Set read_only_state to true
    End_Object    // Fpa_DD

    Object Item_DD is a Item_DataDictionary
        Set DDO_Server to (Units_DD(self))
        Set DDO_Server to (Witemkat_DD(self))
        Set DDO_Server to (Fpa_DD(self))
        Set read_only_state to true
    End_Object    // Item_DD

     Object Iteml_DD is a Iteml_DataDictionary
        Set read_only_state to true
    End_Object

       Object Itemd_DD is a Itemd_DataDictionary
        begin_constraints
           string sitem
           get psitem to sitem
           constrain itemd.company  eq syscurxr.company_code
           constrain itemd.branch   eq syscurxr.branch_code
           constrain itemd.item_code eq sitem
        end_constraints
    End_Object    // Itemd_DD

    Object Witemx_DD is a Witemx_DataDictionary
        Set DDO_Server to (Item_DD(self))
        Set read_only_state to true
    End_Object    // Witemx_DD

    Object Witemxt_DD is a Witemxt_DataDictionary
        Set DDO_Server to (Witemx_DD(self))
        Set read_only_state to true
        Set Constrain_File to Witemx.File_Number
    End_Object    // Witemxt_DD

    Object Witemxen_DD is a Witemxen_DataDictionary
        Set DDO_Server to (Witemx_DD(self))
    End_Object    // Witemxen_DD

    Object Witemxed_DD is a Witemxed_DataDictionary
        Set DDO_Server to (Witemxen_DD(self))
        Set Constrain_File to Witemxen.File_Number
    End_Object    // Witemxed_DD


    //AB-DDOEnd


    //AB-StoreStart

    Procedure Start_Processing
     String   srecr swax sitem svitem sdescr
     Number  nqty ntot naxia nfpa iqty ntotal
     string  serr
     get psrecr to srecr
     get piqty  to nqty
     get pswax  to swax
     clear itemd
     Clear witemxen
     move srecr to witemxen.witemxen_recr
     Find Eq witemxen By Index.2 // witemxen:Index.2:witemxen_recr
     Send rebuild_constraints to (itemd_DD(Current_Object))
     Send Find  to (itemd_dd(current_object)) FIRST_Record 1 //
     While (found = 1)
         Get Field_Current_Value Of itemd_DD Field itemd.itemd_code  to sVitem
         Get Field_Current_Value Of itemd_dd Field itemd.itemd_qty   to iqty
         Get Field_Current_Value Of itemd_dd Field itemd.itemd_fpa   to nfpa
         Get Field_Current_Value Of itemd_dd Field itemd.itemd_axia  to naxia
         Get Field_Current_Value Of item_dd  Field item.item_descr   to sdescr
         move srecr   to witemxed.witemxen_recr
         move svitem  to witemxed.witemxed_code
         find eq witemxed by index.1
         if (found = 1);
            delete witemxed
         Clear witemxed
         move srecr to witemxed.witemxen_recr
         move   sVitem to witemxed.witemxed_code
         move  (nqty * iqty) to witemxed.qty
         move swax to witemxed.wax_recr
         move nfpa to witemxed.fpa
         move naxia to witemxed.axia
         move ((nqty * iqty * naxia * nfpa) / 100) to ntot
         move ((ntot + (nqty * iqty * naxia))) to ntotal
         move ntotal to witemxed.total
         move sdescr to witemxed.witemxed_descr
         clear iteml
         move svitem to iteml.item_code
         find eq iteml by index.5
         if (found = 1) begin
            move iteml.item_descr      to witemxed.witemxed_descr
            clear witemx
            move syscurxr.company_code to witemx.company_code
            move syscurxr.branch_code  to witemx.branch_code
            move syscurxr.year_year    to witemx.year_year
            move iteml.units_code      to witemx.units_code
            move iteml.witemkat_code   to witemx.witemkat_code
            move iteml.item_code       to witemx.item_code
            move iteml.item_code       to witemx.witemx_code
            find eq witemx by index.1
            if (found = 1);
               move witemx.witemx_recr to witemxed.witemx_recr
         end
         clear wax
         move swax to wax.wax_recr
         find eq wax by index.2
         if (found=1);
            move wax.wax_descr  to witemxed.wax_descr
         saverecord witemxed
         Send UpdateWait to (piTxtID(Self))  ('Ñ§û£‚®‡©û èÂ§ò°ò ã‚ è®È´û ì¢û '+(String(witemxed.witemxed_code)))
      send Find to (itemd_dd(current_object)) next_record 1
      Loop
      if (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
      End_Procedure


    Procedure OnProcess
        Send Start_Processing
    End_Procedure

    Procedure Start_Process
         Set piTxtID                         to (Wait(Self))
         Set Button_State    of (Wait(Self)) to False
         Set BarVisibleState of (Wait(Self)) to '' False
         Send Popup                          to (Wait(Self))
         Set piLathos                        to 0
         Forward Send Start_Process
    End_Procedure

    Procedure OnError integer error_info string errMsg
       If (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
    End_Procedure


    Procedure End_Process
       Forward Send End_Process
       If (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
    End_Procedure


    //AB-StoreEnd

End_Object    // DoUpTim0

//AB/ End_Object    // prj
