
// Register all objects
Register_Object syscurxr_DD
Register_Object Docxrhsh
Register_Object areas_DD
Register_Object country_dd
Register_Object towns_DD
Register_Object payresp_DD
Register_Object cities_DD
Register_Object clients_DD
Register_Object ctypkin_DD
Register_Object cmoves_DD
Register_Object r3_1.rv



//AB-IgnoreStart

Use Bproces.Sub
Use DFAllEnt.pkg
use syscurxr.dd
use areas.dd
use country.dd
use towns.dd
use payresp.dd
Use cities.DD
Use clients.DD
Use ctypkin.DD
Use cmoves.DD
//AB-IgnoreEnd

Object Docxrhsh is a BusinessProcessSub

    //AB-StoreTopStart

    Property    Integer piError       Public  0
    property    string  datefrom      public ''
    property    integer piTxtID       public 0
    property    integer piLathos      public 0
    property    string  psclient      public ''
    property    string  psmodule      public ''
    property    string  pscode        public ''

    Open SysCurXr

    Set Status_Panel_State to False
    Set Display_Error_State to True

    //AB-StoreTopEnd

    Set Size to 82 140
    Set Location to 72 182

    //AB-DDOStart

    Object Areas_DD is a Areas_DataDictionary

    End_Object    // Areas_DD

    Object Payresp_DD is a Payresp_DataDictionary

    End_Object    // Payresp_DD

    Object Areas_DD2 is a Areas_DataDictionary

    End_Object    // Areas_DD

    Object Payresp_DD2 is a Payresp_DataDictionary

    End_Object    // Payresp_DD

    Object syscurxr_DD is a syscurxr_DataDictionary

    End_Object    // syscurxr

    Object Country_DD is a Country_DataDictionary

    End_Object    // Country_DD

    Object Towns_DD is a Towns_DataDictionary
        Set DDO_Server to (Country_DD(self))
    End_Object    // Towns_DD

    Object Country_DD2 is a Country_DataDictionary

    End_Object    // Country_DD

    Object Towns_DD2 is a Towns_DataDictionary
        Set DDO_Server to (Country_DD2(self))
    End_Object    // Towns_DD



    Object Ctypkin_DD is a Ctypkin_DataDictionary
        set piMustNOTConstrain to 1
    End_Object    // Ctypkin_DD

    Object Ctypkin_DD2 is a Ctypkin_DataDictionary
        set piMustNOTConstrain to 1
        Procedure Update
        End_Procedure   // Update
        Procedure Creating
        End_Procedure   // Creating
    End_Object    // Ctypkin_DD2


    Object Cities_DD is a Cities_DataDictionary
        Set DDO_Server to (Towns_DD(self))
    End_Object    // Cities_DD

    Object Cities_DD2 is a Cities_DataDictionary
        Set DDO_Server to (Towns_DD2(self))
    End_Object

    Object Clients_DD is a Clients_DataDictionary
        Set DDO_Server to (Cities_DD(self))
        Set DDO_Server to (Payresp_DD(self))
        Set DDO_Server to (Areas_DD(self))
        begin_constraints
           string smodule
           get psmodule to smodule
           if (smodule eq '01') constrain clients.is_client eq '1'
           if (smodule eq '02') constrain clients.is_promhtheyths eq '1'
        end_constraints
    End_Object    // Clients_DD

    Object Clients_DD2 is a Clients_DataDictionary
        Set DDO_Server to (Cities_DD2(self))
        Set DDO_Server to (Payresp_DD2(self))
        Set DDO_Server to (Areas_DD2(self))
    end_object

    Object Cmoves_DD2 is a Cmoves_DataDictionary
        Set DDO_Server to (Ctypkin_DD2(self))
        Set DDO_Server to (Clients_DD2(self))
        set pifromxrhsh to 1
    End_Object    // Cmoves_DD


    Object Cmoves_DD is a Cmoves_DataDictionary
        Set DDO_Server to (Ctypkin_DD(self))
        Set DDO_Server to (Clients_DD(self))
        Set Constrain_File to Clients.File_Number
        set pifromxrhsh to 1
        //AB-StoreStart
        Begin_Constraints
            string sclient
            string smodule
            get pscode to sclient
            get psmodule to smodule
            constrain cmoves.company_code eq syscurxr.company_code
            constrain cmoves.branch_code  eq syscurxr.branch_code
            constrain cmoves.year_year    eq syscurxr.year_year
            constrain cmoves.module_from  eq smodule
            constrain cmoves.client_id    eq sclient

        End_Constraints

    //AB-StoreEnd

    End_Object    // Cmoves_DD

    //AB-DDOEnd


    //AB-StoreStart

    Procedure Start_Processing
     String  scode smodule spar
     Number  naxia nx0 np0 nx00 np00 nx1 np1 ndiaf tx0 tp0 tx00 tp00 tx1 tp1
     Date    dHmnia
     string  serr
     integer iyear icount nyear ctypkinyear
     get psmodule to smodule
     get datefrom to dhmnia
   begin_transaction
     send Clear to clients_DD
     Send rebuild_constraints to (clients_DD(Current_Object))
     Send Find  to (clients_dd(current_object)) FIRST_Record 6
     While (found = 1)
         set Field_Changed_Value Of clients_dd Field clients.xreosh to 0
         set Field_Changed_Value Of clients_dd Field clients.pistosh to 0
         send request_save to clients_dd
         Get Field_Current_Value Of clients_DD Field clients.client_id      to scode
         set pscode to scode
         Send rebuild_constraints to (cmoves_DD(Current_Object))
         Send Find  to (cmoves_dd(current_object)) FIRST_Record 13
         While (found = 1)
            Get Field_Current_Value Of cmoves_DD Field cmoves.year_year     to iyear
            Get Field_Current_Value Of cmoves_dd Field cmoves.cmoves_x0     to nx0
            Get Field_Current_Value Of cmoves_dd Field cmoves.cmoves_p0     to np0
            Get Field_Current_Value Of cmoves_dd Field cmoves.cmoves_x00    to nx00
            Get Field_Current_Value Of cmoves_dd Field cmoves.cmoves_p00    to np00
            Get Field_Current_Value Of cmoves_dd Field cmoves.cmoves_x1     to nx1
            Get Field_Current_Value Of cmoves_dd Field cmoves.cmoves_p1     to np1
            move (tx0+nx0)      to tx0
            move (tp0+np0)      to tp0
            move (tx00+nx00)    to tx00
            move (tp00+np00)    to tp00
            move (tx1+nx1)      to tx1
            move (tp1+np1)      to tp1
            Send UpdateWait to (piTxtID(Self))  ('ƒ á™˜©£˜ Cmoves ”¦¨â˜ '+(String(scode)))
         Send Find  to (cmoves_dd(current_object)) next_Record 13
         loop
         if ((tx0 <> 0) or (tp0 <>0)) begin
            if (tx0 > tp0) begin
               move (tx0 - tp0) to tx0
               move (tx00-tp00) to tx00
               move (tx1-tp1)   to tx1
               move 0           to tp0
               move 0           to tp00
               move 0           to tp1
            end
            else begin
               move (tp0-tx0)   to tp0
               move (tp00-tx00) to tp00
               move (tp1-tx1)   to tp1
               move 0           to tx0
               move 0           to tx00
               move 0           to tx1
            end
            //////////////////////////////////////////////
            send clear to cmoves_dd2
            move scode to clients.client_id
            send find to clients_dd2 eq 6

            move (trim(syscurxr.company_code))      to ctypkin.company_code
            move (trim(syscurxr.branch_code))       to ctypkin.branch_code
            move (TheYearSegment(dhmnia))           to ctypkin.year_year
            if ((smodule = '01') and (tx0 <> 0)) move '101' to ctypkin.ctypkin_code
            if ((smodule = '01') and (tp0 <> 0)) move '102' to ctypkin.ctypkin_code
            if ((smodule = '02') and (tx0 <> 0)) move '201' to ctypkin.ctypkin_code
            if ((smodule = '02') and (tp0 <> 0)) move '202' to ctypkin.ctypkin_code
            send find to ctypkin_dd2 eq 1
            if (found=1) begin
               if (iyear=2001) begin
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_x0 to tx00
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_p0 to tp00
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_x00 to tx0
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_p00 to tp0
                  if (tx00>tp00) set field_changed_value of cmoves_dd2 field cmoves.cmoves_axia to tx00
                  else if (tp00>tx00) set field_changed_value of cmoves_dd2 field cmoves.cmoves_axia to tp00

               end
               else begin
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_x0 to tx0
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_p0 to tp0
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_x00 to tx00
                  set field_changed_value of cmoves_dd2 field cmoves.cmoves_p00 to tp00
                  if (tx0>tp0) set field_changed_value of cmoves_dd2 field cmoves.cmoves_axia to tx0
                  else if (tp0>tx0) set field_changed_value of cmoves_dd2 field cmoves.cmoves_axia to tp0
               end
               set field_changed_value of cmoves_dd2 field cmoves.cmoves_x1 to tx1
               set field_changed_value of cmoves_dd2 field cmoves.cmoves_p1 to tp1
               set field_changed_value of cmoves_dd2 field cmoves.cmoves_hmnia to dhmnia
               move '‹œ«˜­¦¨á “§¦¢¦å§à¤ ' to spar
               append spar dhmnia
               set field_changed_value of cmoves_dd2 field cmoves.cmoves_par to spar
               set field_changed_value of cmoves_dd2 field cmoves.cmoves_sc_code2 to 'EUR'
               set field_changed_value of cmoves_dd2 field cmoves.cmoves_M_code to smodule
               set field_changed_value of cmoves_dd2 field cmoves.Module_from to smodule
               Set Field_Changed_Value Of Cmoves_DD2 Field Cmoves.Enhm_Ypol_Pel    to '1'
               Set Field_Changed_Value Of Cmoves_DD2 Field Cmoves.Enhm_Hmnies_Pel  to '1'

               send request_save to cmoves_dd2
               add 1 to icount
               Send UpdateWait to (piTxtID(Self))  ('„¤ž£â¨à©ž ‰å¤ž©žª ”¦¨â˜ '+(String(scode)))

           end
         end
      move 0 to tx0
      move 0 to tx00
      move 0 to tx1
      move 0 to tp0
      move 0 to tp00
      move 0 to tp1
      Send Find  to (clients_dd(current_object)) next_Record 6
      loop

   end_transaction

      if (icount > 0) set pierr of (r3_1(self)) to 1
      if (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
      End_Procedure


    Procedure OnProcess
        Send Start_Processing
    End_Procedure

    Procedure Start_Process
         Set piTxtID                         to (Wait(Self))
         Set Button_State    of (Wait(Self)) to False
         Set BarVisibleState of (Wait(Self)) to '' False
         Send Popup                          to (Wait(Self))
         Set piLathos                        to 0
         Forward Send Start_Process
    End_Procedure

    Procedure OnError integer error_info string errMsg
       If (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
    End_Procedure


    Procedure End_Process
       Forward Send End_Process
       If (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
    End_Procedure


    //AB-StoreEnd

End_Object

//AB/ End_Object    // prj
