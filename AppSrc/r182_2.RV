//AB/ Project r182_2: diakinishs eidon
//AB/ Object prj is a Report_Project
//AB/     Set ProjectName to "r182_2: diakinishs eidon"
//AB/     Set ProjectFileName to "r182_2.RV"

// Project Object Structure
//   r182_2 is a ReportView
//     DestRadio is a RadioGroup
//       WindowRadio is a Radio
//     ButtonSub1 is a Button
//     ButtonSub3 is a ButtonSub
//     prom1WQLReport is a CrystalReportSubsql

// Register all objects
Register_Object ButtonSub1
Register_Object ButtonSub3
Register_Object DestRadio
Register_Object prom1WQLReport
Register_Object r182_2
Register_Object WindowRadio


//AB/ Report View


//AB-StoreTopStart
Use dfallrpt
OPEN COMPANY
open codemast

Use r182_1.rv

//AB-StoreTopEnd

//AB-IgnoreStart

Use DFAllEnt.pkg
Use Button.Sub

//AB-IgnoreEnd

ACTIVATE_VIEW Activate_r182_2 FOR r182_2

Object r182_2 is a ReportView

    //AB-StoreTopStart
        
    property string     psrecr      Public ''
    Property Integer    piVgalePDF  Public 0
    
    Property String     psPath      Public ""
    Property String     psFileName  Public ""
    Property String     psFileName2 Public ""
    
    //AB-StoreTopEnd

    Set Label to "Ñ°´Áß‡©û èò®ò©´ò´†°¶Á õ†ò°Â§û©û™"
    Set Size to 48 191
    Set Location to 13 20

    //AB-DDOStart


    //AB-DDOEnd

    Object DestRadio is a RadioGroup

        //AB-StoreTopStart
                
        //AB-StoreTopEnd

        Set Label to "Ñ°´Áß‡©û"
        Set Size to 29 49
        Set Location to 2 1
        Object WindowRadio is a Radio
            Set Size to 13 30
            Set Location to 12 12
            Set Bitmap to "screen4.bmp"
        End_Object    // WindowRadio


        //AB-StoreStart
        set visible_state of (destradio(self)) to false
        //***
        //*** Procedure: Notify_Select_state
        //*** Purpose  : Augemented to setup the output destination of the WinQL
        //***            report. The procedure is sent when the user changes the
        //***            selection.
        //***
        
        //Procedure Notify_Select_State  Integer iNewItem  Integer iOldItem
        //    Forward Send Notify_Select_State  iNewItem  iOldItem
        //    If iNewItem Eq 0 ;
                Set Output_Device_Mode To WQL_PRINT_TO_WINDOW
        //    Else If iNewItem Eq 1;
        //        Set Output_Device_Mode To WQL_PRINT_TO_PRINTER
        //    Else If iNewItem Eq 2 ;
        //        Set Output_Device_Mode To WQL_PRINT_TO_FILE
        
        
        //    Send AdjustFileTypeShadow (iNewItem < 2)
        //End_Procedure
        
        
        
        
        //AB-StoreEnd

    End_Object    // DestRadio

    Object ButtonSub1 is a Button

        //AB-StoreTopStart
        
        //AB-StoreTopEnd

        Set Bitmap to "RUNPROG.BMP"
        Set Size to 18 29
        Set Location to 4 54

        //AB-StoreStart
        
        Procedure OnClick
            Integer iPDF iExist
            String  sFilename sPath sFullPathName sParams sFinal
        
            Get piVgalePDF to iPDF
        
            If (iPDF=0) Begin
                set Report_name         Of prom1WQLReport   To "r182_2.rpt"
                Set Output_Device_Mode  Of prom1WQLReport   to PRINT_TO_WINDOW
                Set Output_Destination  Of prom1WQLReport   to WQL_PRINT_TO_WINDOW
                Send Runprom1report     Of prom1WQLReport
        
                //-----
                Set psPath      Of (r182_1(Self)) to ""
                Set psFileName  Of (r182_1(Self)) to ""
                Set piVgalePDF  Of (r182_1(Self)) to 0
                Set psRecr      of (r182_1(self)) to (psRecr(Self))
        
                Send OnClick to (ButtonSub1(r182_1(Self)))
        
            End
            Else Begin
                //--------------------------------------------------------------------------
                //--------------- CORRECT CODE WORKING -------------------------------------
                //--------------------------------------------------------------------------
                Get psPath                                              to sPath
                get psFileName                                          to sFilename
                Move (Trim(sPath)+Trim(sFileName)+".rtf")               to sFullPathName
                Move (" "+Trim(sPath)+Trim(sFileName)+".PDF -c PDF")    to sParams
                Move (Trim(sFullPathName)+sParams)                      to sFinal
        
        
                //Pause 24 00 "INSIDE R182_2 >>>  1....... " (Trim(sPath)) " - " (Trim(sFileName)) " - " (Trim(sFinal))
        
        
                Set Output_Device_Mode  Of prom1WQLReport   to PRINT_TO_FILE
                Set Output_Destination  Of prom1WQLReport   to WQL_PRINT_TO_FILE
        
                Set Report_name         Of prom1WQLReport   To "r182_2PDF.rpt"
                Set ExportFileName      Of prom1WQLReport   to sFullPathName
                Set ExportFormatType    Of prom1WQLReport   To WQL_RichTextFormatType //WQL_Xls5Type //WQL_WordWinType
                //--------------------------------------------------------------------------
                //--------------- CORRECT CODE WORKING -------------------------------------
                //--------------------------------------------------------------------------
        
                String sProgramToRun
                Integer iFileExist
                Get Get_File_Exists 'C:\Program Files\TotalDocConverter\DocConverter.exe' to iFileExist
                If (iFileExist) Move (Trim('C:\Program Files\TotalDocConverter\DocConverter.exe'))  to sProgramToRun
                Else            Move (Trim("C:\TotalDocConverter\DocConverter.exe"))                to sProgramToRun
        
                Send Runprom1report     Of prom1WQLReport
                RunProgram Wait sProgramToRun sFinal
        
                File_Exist sFullPathName iExist
                If (iExist) EraseFile sFullPathName
        
                Set psPath      Of (r182_1(Self))   to (psPath      (Self))
                Set psFileName  Of (r182_1(Self))   to (psFileName2 (Self))
                Set piVgalePDF  Of (r182_1(Self))   to 1
                Set psRecr      Of (r182_1(Self))   to (psrecr(Self))
        
                //Pause 24 00 "2....... " (Trim(psPath(Self))) " - " (Trim(psFileName2(Self))) " - " (Trim(psRecr(Self)))
        
        
                Send OnClick                        to (ButtonSub1(r182_1(Self)))
        
        //////--------
        //        Set Output_Destination  Of prom1WQLReport   to WQL_PRINT_TO_FILE
        //        Set Report_name         Of prom1WQLReport   To "r182_2.rpt"
        //        Set ExportFileName      Of prom1WQLReport   to "C:\AnalyshDiakin2.doc"
        //        Set ExportFormatType    Of prom1WQLReport   To WQL_WordWinType
        
        //        Send Runprom1report     Of prom1WQLReport
        //                                                                                                         // /F9
        //        RunProgram Wait "C:\TotalDocConverter\DocConverter.exe" "C:\AnalyshDiakin2.doc C:\AnalyshDiakin2.PDF -cPDF -PDFEngine 1"
        
        //        File_Exist "C:\AnalyshDiakin2.doc" iExist
        //        //If (iExist) EraseFile "C:\AnalyshDiakin2.doc"
        //////--------
        
        
        
            End
        
            Set piVgalePDF  Of (r182_2(Self))   to 0
            Set piVgalePDF  Of (r182_1(Self))   to 0
        
        End_Procedure
        ////===============================================
        
        //WQL_PRINT_TO_UNDEFINED        If the value of this property is PRINT_TO_UNDEFINED (the default) and this object is inside a report view                                       or report panel, it will use this container_s output_device_mode.If this is und
        //WQL_PRINT_TO_PRINTER          Print the report to the printer.
        //WQL_PRINT_TO_WINDOW           Print to a preview window.
        //WQL_PRINT_TO_FILE             Print to a disk file in a specified format.
        //WQL_PRINT_TO_MAPI             E-mail or fax a report.
        
        ////===============================================
        
        //WQL_CrystalReportType         CrystalReport format.
        
        //WQL_DIFType                   Data Interchange format, you may secify whether the program should save numbers and dates in the same                                           format (decimal places, negatives, MDY, DMY, etc.) that you have used in the re
        
        //WQL_WordWinType               Word for Windows type.
        //WQL_RecordType                        Record style (column of values).
        //WQL_RichTextFormatType                Rich text.
        
        //WQL_CommaSeparatedType                Comma-separated. You may secify whether or not the program should save numbers and dates in the same                                    format (decimal places, negatives, MDY, DMY, etc.) that you have used in the re
        
        //WQL_TabSeparatedType          Tab-separated. You may specify whether the program should save numbers and dates in the same format                                             (decimal places, negatives, MDY, DMY, etc.) that you have used in the report by
        
        //WQL_CharSeparatedType         Character-delimited. You may specify whether the program should save numbers and dates in the same                                              format (decimal places, negatives, MDY, DMY, etc.) that you have used in the re
        
        //WQL_TextType                  Text (ASCII).
        //WQL_TabbedTextType            Tab-separated text.
        //WQL_LotusWksType              Lotus 1-2-3 (WKS)
        //WQL_LotusWk1Type              Lotus 1-2-3 (WK1)
        //WQL_LotusWk2Type              Lotus 1-2-3 (WK2)
        //WQL_Xls2Type                  Excel 2.1
        //WQL_Xls3Type                  Excel 3.0
        //WQL_Xls4Type                  Excel 4.0
        //WQL_Xls5Type                  Excel 5.0
        
        //The default export format is set to WQL_CrystalReportType. The following code will set up the object to export to Word format.
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // ButtonSub1

    Object ButtonSub3 is a ButtonSub

        //AB-StoreTopStart
                
        //AB-StoreTopEnd

        Set Bitmap to "CANCEL.BMP"
        Set Size to 18 29
        Set Location to 6 89
        Set Form_TypeFace Item 0 to "MS Sans Serif"

        //AB-StoreStart
        Procedure OnClick
            Send Request_Cancel
        End_Procedure
        
        
        
        
        //AB-StoreEnd

    End_Object    // ButtonSub3


    //AB-StoreStart
        
        
    Object prom1WQLReport Is A CrystalReportSubsql
    
    Property Integer ReportReady Public False
    
    //    Set Report_View_id To (Parent(Current_object))
    
        Procedure OnStartPrinting
            Local String  Selection FileName lsdate wrecr smodule safm sdoy saddr scompany  SBR  Sperioxh
            Local Integer FileType Destination SortOrder NumSortFields
            Local Integer CurSortField
            Local Integer SortDirection
            Move "" To Selection
            move '09' to smodule
    
            get psrecr to wrecr
    
            //// Append Selection (If(Selection <> "", " and ", "")) "{witemxtD.WITEMXTR_recr} = "  '"' (Trim(wrecr)) '"'
            ////*** Setup the selection formula
           ////  Append Selection (If(Selection <> "", " and ", "")) "{wcmoves.module_from} = "  '"' (Trim(smodule)) '"'
    
              Append Selection (If(Selection <> "", " and ", "")) "{anprod.entolh_recr} = "  '"' (Trim(wrecr)) '"'
              Append Selection (If(Selection <> "", " and ", "")) "{anprod.anprod_form} = {tmpanal.item} "
    
              Set SelectionFormula To Selection
              Get NSortFields To NumSortFields
    
              For CurSortField From 0 To (NumSortFields - 1)
                Send DeleteNthSortField 0
              Loop
    
              CLEAR company
              move syscurxr.company_code to company.company_code
              find eq company by index.1
              move (trim(company.company_name))  to scompany
              move (trim(company.company_afm))   to safm
              move (trim(company.company_addr))  to saddr
    
              CLEAR branch
              move syscurxr.company_code to branch.company_code
              move syscurxr.branch_code to  branch.branch_code
              find eq branch by index.1
              move (trim(branch.branch_name))  to sbr
              move (trim(branch.perioxh))      to sperioxh
    
              clear codemast
              move 'DOY' to codemast.type
              move (trim(company.company_doy))   to codemast.code
              find eq codemast by index.1
              move (trim(codemast.description))   to sdoy
    
              Set Formula "fcompany"    to (winql_string(scompany))
              Set Formula "fafm"        to (winql_string(safm))
              Set Formula "fbranch"     to (winql_string(sbr))
              Set Formula "fperioxh"    to (winql_string(sperioxh))
              Set Formula "fdoy"        to (winql_string(sdoy))
              Set Formula "faddr"       to (winql_string(saddr))
    
            If Selection Eq "" ;
                Set Formula "SelTxt" To ('"' + "NONE" + '"')
            Else ;
                Set Formula "SelTxt" To ('"' + (Replaces('"', Selection, "")) + '"')
    
            ///// move WQL_PRINT_TO_WINDOW to destination
    
            If Destination EQ WQL_PRINT_TO_WINDOW ;
                Set ReportReady To False
            Else ;
                Set ReportReady To True
    
    
        End_procedure // OnStartPrinting
    
    
        Procedure Runprom1Report
            Send Cursor_Wait To (Cursor_Control(Current_Object))
            Send Run_report
    
            Send Cursor_Ready To (Cursor_Control(Current_Object))
            If (ReportReady(Current_object)) ;
                Send Info_box "WinQL report ready."
        End_procedure // RunCustReport
    
    End_object // serviceWQLReport
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    //AB-StoreEnd

End_Object    // r182_2


//AB-StoreStart
































//AB-StoreEnd

//AB/ End_Object    // prj
