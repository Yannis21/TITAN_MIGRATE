Compiling Program: L:\VDF14.1.Dev\TITAN_MIGRATE\AppSrc\ExportFromCentralSMSMI.src
Memory Available: 837156864
1>//------------------------------------------------------
1>//------------------------------------------------------
1>// 1. Ola ta MI... arxeia briskontai ston kentriko server se mia bash SMSMI
1>// 2. To programma ayto se VDF14 trexei stiw diafores perifereiakes monades
1>//    kai skanarei tis markarismenes eggrafes sthn topikh SMS bash
1>//    tis opoies stelnei sta MIxxxxx arxeia ston kentriko server.
1>//----
1>// 3. To proto login na einai PANTA to login ston server sthn topikh SMS bash
1>// 4. To deytero login tha exei kleidomeno to IP tou kentrikou Server sta INT/TD
1>//    kai to mono pou allazoume einai h bash, epilegontas thn SMSMI anti 
1>//    ths SMS tou protou login.
1>//----------------------
1>//----------------------
1>// Xrhsimopoioume pedia tou CN / MICN pou den prpei na peiraxtoun 
1>// giati xrhsmeyoun eite gia calculated pedia tou Tolh pou enhmerothikan
1>// meso script h gia tiw zones ton ergvn sto MICN afou den exoume sta 
1>// arxeia MI, oute Brabch oute CNZones klp....
1>//----------------------
1>// MICN.CN_VDETAILS         Perigrafh Zonhs (apo to arxeio zones)
1>// MICN.CN_CLIENTMATCH      Zonh ID (apo to arxeio Zones)
1>// MICN.CN_ZONE             Brzones.BRZONE_RECR
1>// MICN.CN_PUMPID           Excel Column AM Sales Office
1>// MICN.CN_PUMPLICENSE      Excel Column AT ДиЪжйлсйаж лижнжЫайхШк
1>//----------------------
1>//----------------------
1>
1>
1>//------------------------------------------------------
1>//------------------------------------------------------
1>
1>Use DFAllEnt.pkg
Using pre-compiled package DFALLENT.PKG
Including file: dfallent.pkd    (C:\Program Files\Visual DataFlex 14.1\Pkg\dfallent.pkd)
48529>Use cCJStandardCommandBarSystem.pkg
Including file: cCJStandardCommandBarSystem.pkg    (C:\Program Files\Visual DataFlex 14.1\Pkg\cCJStandardCommandBarSystem.pkg)
48529>>>// these are all the packages used in a standard MDI menubar/toolbar system
48529>>>
48529>>>Use cCJCommandBarSystem.pkg
48529>>>Use cCJStandardMenuItemClasses.pkg
Including file: cCJStandardMenuItemClasses.pkg    (C:\Program Files\Visual DataFlex 14.1\Pkg\cCJStandardMenuItemClasses.pkg)
48529>>>>>Use Dfpanel.pkg
48529>>>>>Use cCJCommandBarSystem.pkg
48529>>>>>Use LanguageText.pkg
48529>>>>>
48529>>>>>
48529>>>>>Class cCJUndoMenuItem is a cCJMenuItem
48530>>>>>    
48530>>>>>    Procedure Construct_Object
48532>>>>>        Forward Send Construct_Object
48534>>>>>        Set psCaption   to C_$CaptionUndo
48535>>>>>        Set psToolTip to C_$ToolTipUndo
48536>>>>>        Set psDescription to C_$DescUndo
48537>>>>>        Set psImage to "ActionUndo.ico"
48538>>>>>        Set pbActiveUpdate to True
48539>>>>>        Set psCategory to C_$CategoryEdit
48540>>>>>        Set psShortcut to C_$Key_Ctrl_Z
48541>>>>>    End_Procedure
48542>>>>>
48542>>>>>    Procedure OnExecute Variant vCommandBarControl
48544>>>>>        Send Undo of (focus(Self))
48545>>>>>    End_Procedure
48546>>>>>    
48546>>>>>    Function IsEnabled Returns Boolean
48548>>>>>        Boolean bEnabled
48548>>>>>        Get CanUndo of (Focus(Self)) to bEnabled
48549>>>>>        Function_Return bEnabled
48550>>>>>    End_Function
48551>>>>>         
48551>>>>>End_Class
48552>>>>>
48552>>>>>
48552>>>>>Class cCJDeleteEditMenuItem is a cCJMenuItem
48553>>>>>    
48553>>>>>    Procedure Construct_Object
48555>>>>>        Forward Send Construct_Object
48557>>>>>        Set psCaption   to C_$CaptionDelete
48558>>>>>        Set psToolTip to C_$ToolTipDelete
48559>>>>>        Set psDescription to C_$DescDelete
48560>>>>>        Set psImage to "actionDelete.ico"
48561>>>>>        Set psShortcut to C_$Key_Delete
48562>>>>>        Set pbActiveUpdate to True
48563>>>>>        Set psCategory to C_$CategoryEdit
48564>>>>>    End_Procedure
48565>>>>>
48565>>>>>
48565>>>>>    Procedure OnExecute Variant vCommandBarControl
48567>>>>>        Send Delete of (focus(Self))
48568>>>>>    End_Procedure
48569>>>>>    
48569>>>>>    Function IsEnabled Returns Boolean
48571>>>>>        Boolean bEnabled
48571>>>>>        Get CanDelete of (Focus(Self)) to bEnabled
48572>>>>>        Function_Return bEnabled
48573>>>>>    End_Function
48574>>>>>         
48574>>>>>End_Class
48575>>>>>
48575>>>>>
48575>>>>>Class cCJCutMenuItem is a cCJMenuItem
48576>>>>>    
48576>>>>>    Procedure Construct_Object
48578>>>>>        Forward Send Construct_Object
48580>>>>>        Set psCaption   to C_$CaptionCut
48581>>>>>        Set psToolTip to C_$TooltipCut
48582>>>>>        Set psDescription to C_$DescCut
48583>>>>>        Set psImage to "actionCut.ico"
48584>>>>>        Set psShortcut to C_$Key_Ctrl_X
48585>>>>>        Set pbActiveUpdate to True
48586>>>>>        Set psCategory to C_$CategoryEdit
48587>>>>>    End_Procedure
48588>>>>>
48588>>>>>
48588>>>>>    Procedure OnExecute Variant vCommandBarControl
48590>>>>>        Send Cut of (focus(Self))
48591>>>>>    End_Procedure
48592>>>>>    
48592>>>>>    Function IsEnabled Returns Boolean
48594>>>>>        Boolean bEnabled
48594>>>>>        Get CanCut of (Focus(Self)) to bEnabled
48595>>>>>        Function_Return bEnabled
48596>>>>>    End_Function
48597>>>>>         
48597>>>>>End_Class
48598>>>>>
48598>>>>>
48598>>>>>Class cCJCopyMenuItem is a cCJMenuItem
48599>>>>>    
48599>>>>>    Procedure Construct_Object
48601>>>>>        Forward Send Construct_Object
48603>>>>>        Set psCaption   to C_$CaptionCopy
48604>>>>>        Set psToolTip to C_$ToolTipCopy
48605>>>>>        Set psDescription to C_$DescCopy
48606>>>>>        Set psImage to "actionCopy.ico"
48607>>>>>        Set psShortcut to C_$Key_Ctrl_C
48608>>>>>        Set pbActiveUpdate to True
48609>>>>>        Set psCategory to C_$CategoryEdit
48610>>>>>    End_Procedure
48611>>>>>
48611>>>>>
48611>>>>>    Procedure OnExecute Variant vCommandBarControl
48613>>>>>        Send Copy of (focus(Self))
48614>>>>>    End_Procedure
48615>>>>>    
48615>>>>>    Function IsEnabled Returns Boolean
48617>>>>>        Boolean bEnabled
48617>>>>>        Get CanCopy of (Focus(Self)) to bEnabled
48618>>>>>        Function_Return bEnabled
48619>>>>>    End_Function
48620>>>>>         
48620>>>>>End_Class
48621>>>>>
48621>>>>>
48621>>>>>Class cCJPasteMenuItem is a cCJMenuItem
48622>>>>>    
48622>>>>>    Procedure Construct_Object
48624>>>>>        Forward Send Construct_Object
48626>>>>>        Set psCaption   to C_$CaptionPaste
48627>>>>>        Set psToolTip to C_$ToolTipPaste
48628>>>>>        Set psDescription to C_$DescPaste
48629>>>>>        Set psImage to "actionPaste.ico"
48630>>>>>        Set pbActiveUpdate to True
48631>>>>>        Set psShortcut to C_$Key_Ctrl_V
48632>>>>>        Set psCategory to C_$CategoryEdit
48633>>>>>    End_Procedure
48634>>>>>
48634>>>>>
48634>>>>>    Procedure OnExecute Variant vCommandBarControl
48636>>>>>        Send Paste of (focus(Self))
48637>>>>>    End_Procedure
48638>>>>>    
48638>>>>>    Function IsEnabled Returns Boolean
48640>>>>>        Boolean bEnabled
48640>>>>>        Get CanPaste of (Focus(Self)) to bEnabled
48641>>>>>        Function_Return bEnabled
48642>>>>>    End_Function
48643>>>>>         
48643>>>>>End_Class
48644>>>>>
48644>>>>>Class cCJSelectAllMenuItem is a cCJMenuItem
48645>>>>>    
48645>>>>>    Procedure Construct_Object
48647>>>>>        Forward Send Construct_Object
48649>>>>>        Set psCaption   to C_$CaptionSelectAll
48650>>>>>        Set psToolTip to C_$ToolTipSelectAll
48651>>>>>        Set psDescription to C_$DescSelectAll
48652>>>>>        Set pbActiveUpdate to True
48653>>>>>        Set psShortcut to C_$Key_Ctrl_A
48654>>>>>        Set psCategory to C_$CategoryEdit
48655>>>>>    End_Procedure
48656>>>>>
48656>>>>>
48656>>>>>    Procedure OnExecute Variant vCommandBarControl
48658>>>>>        Send Select_All of (focus(Self))
48659>>>>>    End_Procedure
48660>>>>>    
48660>>>>>    Function IsEnabled Returns Boolean
48662>>>>>        Boolean bEnabled
48662>>>>>        Get CanSelect of (Focus(Self)) to bEnabled
48663>>>>>        Function_Return bEnabled
48664>>>>>    End_Function
48665>>>>>         
48665>>>>>End_Class
48666>>>>>
48666>>>>> 
48666>>>>>Class cCJExitMenuItem is a cCJMenuItem
48667>>>>>
48667>>>>>    Procedure Construct_Object
48669>>>>>        Forward Send Construct_Object
48671>>>>>        Set psCaption to C_$CaptionExit
48672>>>>>        Set psToolTip to C_$ToolTipExit
48673>>>>>        Set psDescription to C_$ToolTipExit
48674>>>>>        Set psShortcut to C_$Key_Alt_F4
48675>>>>>        Set psCategory to C_$CategoryFile
48676>>>>>    End_Procedure
48677>>>>>
48677>>>>>    Procedure OnExecute Variant vCommandBarControl
48679>>>>>        Send Exit_Application of Desktop
48680>>>>>    End_Procedure
48681>>>>>
48681>>>>>End_Class           
48682>>>>>
48682>>>>>Class cCJHelpMenuItem is a cCJMenuItem    
48683>>>>>
48683>>>>>    Procedure Construct_Object
48685>>>>>        Forward Send Construct_Object
48687>>>>>        Set psCaption to C_$CaptionHelp
48688>>>>>        Set psDescription to C_$ToolTipHelp
48689>>>>>        Set psToolTip to C_$DescHelp
48690>>>>>        Set psImage to "ActionHelp.ico"
48691>>>>>        Set psShortcut to "F1"
48692>>>>>        Set psCategory to C_$CategoryHelp
48693>>>>>    End_Procedure
48694>>>>>    
48694>>>>>    Procedure OnExecute Variant vCommandBarControl
48696>>>>>        Send Help of (Focus(Self))
48697>>>>>    End_Procedure
48698>>>>>
48698>>>>>End_Class
48699>>>>>
48699>>>>>Class cCJStatusbarMenuItem is a cCJMenuItem
48700>>>>>
48700>>>>>    Procedure Construct_Object
48702>>>>>        Forward Send Construct_Object
48704>>>>>        Set psCaption to C_$CaptionAddStatusbar
48705>>>>>        Set psToolTip to C_$ToolTipAddStatusbar
48706>>>>>        Set psDescription to  C_$DescAddStatusbar
48707>>>>>        Set psCategory to C_$CategoryWindow
48708>>>>>    End_Procedure
48709>>>>>
48709>>>>>    Procedure OnExecute Variant vCommandBarControl
48711>>>>>        Handle hoCommandBars hoClientArea
48711>>>>>        Get CommandBarSystemObject to hoCommandBars
48712>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48713>>>>>        If hoClientArea Begin
48715>>>>>            // the clientarea's parent panel has message
48715>>>>>            Send Toggle_StatusBar of (Parent(hoClientArea))
48716>>>>>        End
48716>>>>>>
48716>>>>>    End_Procedure
48717>>>>>
48717>>>>>     Function IsChecked Returns Boolean
48719>>>>>        Boolean bOn
48719>>>>>        Handle hoCommandBars hoClientArea
48719>>>>>        Get CommandBarSystemObject to hoCommandBars
48720>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48721>>>>>        If hoClientArea Begin
48723>>>>>            // the clientarea's parent panel has message
48723>>>>>            Get StatusBar_State of (Parent(hoClientArea)) to bOn
48724>>>>>        End
48724>>>>>>
48724>>>>>        Function_Return bOn
48725>>>>>     End_Function
48726>>>>>End_Class
48727>>>>>
48727>>>>>Class cCJAutoArrangeIconsMenuItem is a cCJMenuItem
48728>>>>>
48728>>>>>    Procedure Construct_Object
48730>>>>>        Forward Send Construct_Object
48732>>>>>        Set psCaption to C_$CaptionAutoArrangeIcons
48733>>>>>        Set psToolTip to C_$ToolTipAutoArrangeIcons
48734>>>>>        Set psDescription to C_$DescAutoArrangeIcons
48735>>>>>        Set psCategory to C_$CategoryWindow
48736>>>>>    End_Procedure
48737>>>>>
48737>>>>>    Procedure OnExecute Variant vCommandBarControl
48739>>>>>        Handle hoCommandBars hoClientArea
48739>>>>>        Get CommandBarSystemObject to hoCommandBars
48740>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48741>>>>>        If hoClientArea Begin
48743>>>>>            // the clientarea's parent panel has message
48743>>>>>            Send Toggle_Auto_Arrange_Icons of (Parent(hoClientArea))
48744>>>>>        End
48744>>>>>>
48744>>>>>    End_Procedure
48745>>>>>    
48745>>>>>     Function IsChecked Returns Boolean
48747>>>>>        Boolean bOn
48747>>>>>        Handle hoCommandBars hoClientArea
48747>>>>>        Get CommandBarSystemObject to hoCommandBars
48748>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48749>>>>>        If hoClientArea Begin
48751>>>>>            // the clientarea's parent panel has message
48751>>>>>            Get Auto_Arrange_Icons_State of (Parent(hoClientArea)) to bOn
48752>>>>>        End
48752>>>>>>
48752>>>>>        Function_Return bOn
48753>>>>>     End_Function
48754>>>>>End_Class
48755>>>>>
48755>>>>>Class cCJRestoreMenusMenuItem is a cCJMenuItem
48756>>>>>
48756>>>>>    Procedure Construct_Object
48758>>>>>        Forward Send Construct_Object
48760>>>>>        Set psCaption to C_$CaptionRestoreMenus
48761>>>>>        Set psToolTip to C_$ToolTipRestoreMenus
48762>>>>>        Set psDescription to C_$DescRestoreMenus
48763>>>>>        Set psCategory to C_$CategoryWindow
48764>>>>>    End_Procedure
48765>>>>>
48765>>>>>    Procedure OnExecute Variant vCommandBarControl
48767>>>>>        Handle hoCommandBars
48767>>>>>        Get CommandBarSystemObject to hoCommandBars
48768>>>>>        Send RestoreLayout of hoCommandBars
48769>>>>>    End_Procedure
48770>>>>>    
48770>>>>>End_Class
48771>>>>>
48771>>>>>Class cCJCascadeMenuItem is a cCJMenuItem
48772>>>>>
48772>>>>>    Procedure Construct_Object
48774>>>>>        Forward Send Construct_Object
48776>>>>>        Set psCaption to C_$CaptionCascade
48777>>>>>        Set psToolTip to C_$ToolTipCascade
48778>>>>>        Set psDescription to  C_$DescCascade
48779>>>>>        Set psImage to "ActionCascade.ico"
48780>>>>>        Set psCategory to C_$CategoryWindow
48781>>>>>    End_Procedure
48782>>>>>    
48782>>>>>    Procedure OnExecute Variant vCommandBarControl
48784>>>>>        Handle hoCommandBars hoClientArea
48784>>>>>        Get CommandBarSystemObject to hoCommandBars
48785>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48786>>>>>        If hoClientArea Begin
48788>>>>>            Send Cascade_Windows of hoClientArea
48789>>>>>        End
48789>>>>>>
48789>>>>>    End_Procedure
48790>>>>>End_Class
48791>>>>>
48791>>>>>Class cCJTileHorizontally is a cCJMenuItem
48792>>>>>
48792>>>>>    Procedure Construct_Object
48794>>>>>        Forward Send Construct_Object
48796>>>>>        Set psCaption to C_$CaptionTileHorizontally 
48797>>>>>        Set psToolTip to C_$ToolTipTileHorizontally  
48798>>>>>        Set psDescription to  C_$DescTileHorizontally
48799>>>>>        Set psImage to "ActionTileHorizontally.ico"
48800>>>>>        Set psCategory to C_$CategoryWindow
48801>>>>>    End_Procedure
48802>>>>>
48802>>>>>    Procedure OnExecute Variant vCommandBarControl
48804>>>>>        Handle hoCommandBars hoClientArea
48804>>>>>        Get CommandBarSystemObject to hoCommandBars
48805>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48806>>>>>        If hoClientArea Begin
48808>>>>>            Send Tile_Windows_Horizontal of hoClientArea
48809>>>>>        End
48809>>>>>>
48809>>>>>    End_Procedure
48810>>>>>End_Class
48811>>>>>
48811>>>>>Class cCJTileVertically is a cCJMenuItem
48812>>>>>
48812>>>>>    Procedure Construct_Object
48814>>>>>        Forward Send Construct_Object
48816>>>>>        Set psCaption to C_$CaptionTileVertically  
48817>>>>>        Set psToolTip to C_$ToolTipTileVertically
48818>>>>>        Set psDescription to  C_$DescTileVertically
48819>>>>>        Set psImage to "ActionTileVertically.ico"
48820>>>>>        Set psCategory to C_$CategoryWindow
48821>>>>>    End_Procedure
48822>>>>>
48822>>>>>    Procedure OnExecute Variant vCommandBarControl
48824>>>>>        Handle hoCommandBars hoClientArea
48824>>>>>        Get CommandBarSystemObject to hoCommandBars
48825>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48826>>>>>        If hoClientArea Begin
48828>>>>>            Send Tile_Windows_Vertical of hoClientArea
48829>>>>>        End
48829>>>>>>
48829>>>>>    End_Procedure
48830>>>>>End_Class
48831>>>>>
48831>>>>>Class cCJMinimizeWindowsMenuItem is a cCJMenuItem
48832>>>>>
48832>>>>>    Procedure Construct_Object
48834>>>>>        Forward Send Construct_Object
48836>>>>>        Set psCaption to C_$CaptionMinimizeWindows 
48837>>>>>        Set psToolTip to C_$ToolTipMinimizeWindows
48838>>>>>        Set psDescription to  C_$DescMinimizeWindows
48839>>>>>        Set psCategory to C_$CategoryWindow
48840>>>>>    End_Procedure
48841>>>>>
48841>>>>>    Procedure OnExecute Variant vCommandBarControl
48843>>>>>        Handle hoCommandBars hoClientArea
48843>>>>>        Get CommandBarSystemObject to hoCommandBars
48844>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48845>>>>>        If hoClientArea Begin
48847>>>>>            // the clientarea's parent panel has message
48847>>>>>            Send Minimize_all_Windows of (Parent(hoClientArea))
48848>>>>>        End
48848>>>>>>
48848>>>>>    End_Procedure
48849>>>>>End_Class
48850>>>>>
48850>>>>>
48850>>>>>Class cCJRestoreWindowsMenuItem is a cCJMenuItem
48851>>>>>
48851>>>>>    Procedure Construct_Object
48853>>>>>        Forward Send Construct_Object
48855>>>>>        Set psCaption to C_$CaptionRestoreWindows
48856>>>>>        Set psToolTip to C_$ToolTipRestoreWindows
48857>>>>>        Set psDescription to  C_$DescRestoreWindows
48858>>>>>        Set psCategory to C_$CategoryWindow
48859>>>>>    End_Procedure
48860>>>>>
48860>>>>>    Procedure OnExecute Variant vCommandBarControl
48862>>>>>        Handle hoCommandBars hoClientArea
48862>>>>>        Get CommandBarSystemObject to hoCommandBars
48863>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48864>>>>>        If hoClientArea Begin
48866>>>>>            // the clientarea's parent panel has message
48866>>>>>            Send Restore_all_Windows of (Parent(hoClientArea))
48867>>>>>        End
48867>>>>>>
48867>>>>>    End_Procedure
48868>>>>>End_Class
48869>>>>>
48869>>>>>Class cCJArrangeIconsMenuItem is a cCJMenuItem
48870>>>>>
48870>>>>>    Procedure Construct_Object
48872>>>>>        Forward Send Construct_Object
48874>>>>>        Set psCaption to C_$CaptionArrangeIcons  
48875>>>>>        Set psToolTip to C_$ToolTipArrangeIcons
48876>>>>>        Set psDescription to  C_$DescArrangeIcons
48877>>>>>        Set psCategory to C_$CategoryWindow
48878>>>>>    End_Procedure
48879>>>>>
48879>>>>>    Procedure OnExecute Variant vCommandBarControl
48881>>>>>        Handle hoCommandBars hoClientArea
48881>>>>>        Get CommandBarSystemObject to hoCommandBars
48882>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48883>>>>>        If hoClientArea Begin
48885>>>>>            Send Arrange_Icons of hoClientArea
48886>>>>>        End
48886>>>>>>
48886>>>>>    End_Procedure
48887>>>>>
48887>>>>>End_Class
48888>>>>>    
48888>>>Use cCJAboutMenuItem.pkg
Including file: cCJAboutMenuItem.pkg    (C:\Program Files\Visual DataFlex 14.1\Pkg\cCJAboutMenuItem.pkg)
48888>>>>>Use cCJCommandBarSystem.pkg
48888>>>>>Use LanguageText.pkg
48888>>>>>
48888>>>>>// It is expected that if you use this class that you provide an about object that is
48888>>>>>// activated via activate_about such as DfAbout.pkg. We don't use this for you automatically
48888>>>>>// because you may wish to create your own custom about package.
48888>>>>>
48888>>>>>Class cCJAboutMenuItem is a cCJMenuItem    
48889>>>>>
48889>>>>>    Procedure Construct_Object
48891>>>>>        Forward Send Construct_Object
48893>>>>>        Set psCaption to C_$CaptionAbout
48894>>>>>        Set psDescription to C_$ToolTipAbout
48895>>>>>        Set psToolTip to C_$DescAbout
48896>>>>>        Set psImage to "ActionAbout.ico"
48897>>>>>        Set psCategory to C_$CategoryHelp
48898>>>>>    End_Procedure
48899>>>>>    
48899>>>>>    Procedure OnExecute Variant vCommandBarControl
48901>>>>>        Handle hoCommandBars hoClientArea
48901>>>>>        Get CommandBarSystemObject to hoCommandBars
48902>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
48903>>>>>        If hoClientArea Begin
48905>>>>>            Send Activate_About of hoClientArea
48906>>>>>        End
48906>>>>>>
48906>>>>>    End_Procedure
48907>>>>>
48907>>>>>End_Class
48908>>>>>
48908>>>>>
48908>>>Use cCJDeoMenuItemClasses.pkg
Including file: cCJDeoMenuItemClasses.pkg    (C:\Program Files\Visual DataFlex 14.1\Pkg\cCJDeoMenuItemClasses.pkg)
48908>>>>>// various DEO menu classes
48908>>>>>
48908>>>>>Use cCJCommandBarSystem.pkg
48908>>>>>Use LanguageText.pkg
48908>>>>>
48908>>>>>// Sub-class for all Date entry menu items
48908>>>>>
48908>>>>>Class cCJDeoMenuItem is a cCJMenuItem
48909>>>>>    
48909>>>>>    Procedure Construct_Object
48911>>>>>        Forward Send Construct_Object
48913>>>>>        Set psCategory to C_$CategoryDEO
48914>>>>>        Set pbActiveUpdate to True
48915>>>>>    End_Procedure
48916>>>>>
48916>>>>>    // This just redirects to cCJCommandBarsSystem object
48916>>>>>    // returns information about the Focus object. If it returns True its a DEO. If a DEO the
48916>>>>>    // server, hasRecord, changed and hasindex info will all be returned by ref.
48916>>>>>    // If false, these are all unchanged.
48916>>>>>    Function DEOInformation Handle ByRef hoServer Boolean ByRef bHasRecord Boolean ByRef bChanged Boolean ByRef bHasIndex Returns Boolean
48918>>>>>        Handle hoCommandBars
48918>>>>>        Boolean bISDeo
48918>>>>>        Get CommandBarSystemObject to hoCommandBars // must exist or a programming bug
48919>>>>>        Get DEOInformation of hoCommandBars (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDEO
48920>>>>>        Function_Return bISDeo        
48921>>>>>    End_Function
48922>>>>>
48922>>>>>End_Class
48923>>>>>
48923>>>>>// use by all navigate DEOs.
48923>>>>>
48923>>>>>Class cCJDEONavigateMenuItem is a cCJDeoMenuItem
48924>>>>>    Procedure Construct_Object
48926>>>>>        Forward Send Construct_Object
48928>>>>>        Set psCategory to C_$CategoryNavigate
48929>>>>>    End_Procedure
48930>>>>>    
48930>>>>>    Function IsEnabled Returns Boolean
48932>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex
48932>>>>>        Handle hoServer
48932>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
48933>>>>>        Function_Return (bIsDEO)
48934>>>>>    End_Function
48935>>>>>         
48935>>>>>End_Class         
48936>>>>>
48936>>>>>
48936>>>>>Class cCJClearMenuItem is a cCJDeoMenuItem
48937>>>>>    
48937>>>>>    Procedure Construct_Object
48939>>>>>        Forward Send Construct_Object
48941>>>>>        Set psCaption   to C_$CaptionClear
48942>>>>>        Set psToolTip to C_$ToolTipClear
48943>>>>>        Set psDescription to C_$DescClear
48944>>>>>        Set psImage to "ActionClear.ico"
48945>>>>>        Set psShortcut to "F5"
48946>>>>>    End_Procedure
48947>>>>>
48947>>>>>
48947>>>>>    Procedure OnExecute Variant vCommandBarControl
48949>>>>>        Send Request_Clear of (focus(Self))
48950>>>>>    End_Procedure
48951>>>>>    
48951>>>>>    Function IsEnabled Returns Boolean
48953>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex
48953>>>>>        Handle hoServer
48953>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
48954>>>>>        Function_Return (bIsDEO and hoServer and (bChanged or bHasRecord))
48955>>>>>    End_Function
48956>>>>>         
48956>>>>>End_Class         
48957>>>>>
48957>>>>>
48957>>>>>Class cCJClearAllMenuItem is a cCJDeoMenuItem
48958>>>>>    
48958>>>>>    Procedure Construct_Object
48960>>>>>        Forward Send Construct_Object
48962>>>>>        Set psCaption   to C_$CaptionClearAll
48963>>>>>        Set psToolTip to C_$ToolTipClearAll
48964>>>>>        Set psDescription to C_$DescClearAll
48965>>>>>        Set psImage to "ActionClearAll.ico"
48966>>>>>        Set psShortcut to C_$Key_Ctrl_F5
48967>>>>>    End_Procedure
48968>>>>>
48968>>>>>    Procedure OnExecute Variant vCommandBarControl
48970>>>>>        Send Request_Clear_All of (focus(Self))
48971>>>>>    End_Procedure
48972>>>>>    
48972>>>>>    Function IsEnabled Returns Boolean
48974>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex
48974>>>>>        Handle hoServer
48974>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
48975>>>>>        Function_Return (bIsDEO and hoServer and (bChanged or bHasRecord))
48976>>>>>    End_Function
48977>>>>>    
48977>>>>>End_Class         
48978>>>>>
48978>>>>>
48978>>>>>
48978>>>>>Class cCJSaveMenuItem is a cCJDeoMenuItem
48979>>>>>    
48979>>>>>    Procedure Construct_Object
48981>>>>>        Forward Send Construct_Object
48983>>>>>        Set psCaption   to C_$CaptionSave
48984>>>>>        Set psToolTip to C_$ToolTipSave
48985>>>>>        Set psDescription to C_$DescSave
48986>>>>>        Set psImage to "ActionSaveRecord.ico"
48987>>>>>        Set psShortcut to "F2"
48988>>>>>    End_Procedure
48989>>>>>
48989>>>>>
48989>>>>>    Procedure OnExecute Variant vCommandBarControl
48991>>>>>        Send Request_save of (focus(Self))
48992>>>>>    End_Procedure
48993>>>>>    
48993>>>>>    Function IsEnabled Returns Boolean
48995>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex
48995>>>>>        Handle hoServer
48995>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
48996>>>>>        Function_Return (bIsDEO and hoServer and bChanged)
48997>>>>>    End_Function
48998>>>>>         
48998>>>>>End_Class         
48999>>>>>
48999>>>>>
48999>>>>>Class cCJSaveNCMenuItem is a cCJDeoMenuItem
49000>>>>>
49000>>>>>    Procedure Construct_Object
49002>>>>>        Forward Send Construct_Object
49004>>>>>        Set psCaption   to C_$CaptionSaveNC
49005>>>>>        Set psToolTip to C_$ToolTipSaveNC
49006>>>>>        Set psDescription to C_$DescSaveNC
49007>>>>>        Set psImage to "ActionSave.ico"
49008>>>>>        Set psShortcut to "F12"
49009>>>>>    End_Procedure
49010>>>>>
49010>>>>>    Procedure OnExecute Variant vCommandBarControl
49012>>>>>        Send Request_save_No_Clear of (focus(Self))
49013>>>>>    End_Procedure
49014>>>>>
49014>>>>>    Function IsEnabled Returns Boolean
49016>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex
49016>>>>>        Handle hoServer
49016>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
49017>>>>>        Function_Return (bIsDEO and hoServer and bChanged)
49018>>>>>    End_Function
49019>>>>>
49019>>>>>End_Class
49020>>>>>
49020>>>>>
49020>>>>>
49020>>>>>Class cCJDeleteMenuItem is a cCJDeoMenuItem
49021>>>>>
49021>>>>>    Procedure Construct_Object
49023>>>>>        Forward Send Construct_Object
49025>>>>>        Set psCaption   to C_$CaptionDeleteRec
49026>>>>>        Set psToolTip to C_$ToolTipDeleteRec
49027>>>>>        Set psDescription to C_$DescDeleteRec
49028>>>>>        Set psImage to "ActionDeleteRecord.ico"
49029>>>>>        Set psShortcut to C_$Key_Shift_F2
49030>>>>>    End_Procedure
49031>>>>>
49031>>>>>    Procedure OnExecute Variant vCommandBarControl
49033>>>>>        Send Request_Delete of (focus(Self))
49034>>>>>    End_Procedure
49035>>>>>
49035>>>>>    Function IsEnabled Returns Boolean
49037>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex
49037>>>>>        Handle hoServer
49037>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
49038>>>>>        Function_Return (bIsDEO and hoServer and bHasRecord)
49039>>>>>    End_Function
49040>>>>>
49040>>>>>End_Class
49041>>>>>
49041>>>>>
49041>>>>>Class cCJPromptMenuItem is a cCJDeoMenuItem
49042>>>>>     Procedure Construct_Object
49044>>>>>        Forward Send Construct_Object
49046>>>>>        Set psCaption   to C_$CaptionPrompt
49047>>>>>        Set psToolTip to C_$ToolTipPrompt
49048>>>>>        Set psDescription to C_$DescPrompt
49049>>>>>        Set psImage to "ActionPrompt.Ico"
49050>>>>>        Set psShortcut to "F4"
49051>>>>>    End_Procedure
49052>>>>>
49052>>>>>    Procedure OnExecute Variant vCommandBarControl
49054>>>>>        Send Prompt of (focus(Self))
49055>>>>>    End_Procedure
49056>>>>>
49056>>>>>    Function IsEnabled Returns Boolean
49058>>>>>        Handle hoFocus hoPrompt
49058>>>>>        Integer iDelegate
49058>>>>>        Get Focus to hoFocus
49059>>>>>        If (hoFocus>Desktop) Begin
49061>>>>>            Get Delegation_mode of hoFocus to iDelegate
49062>>>>>            Set Delegation_mode of hoFocus to No_Delegate_or_Error
49063>>>>>            Get Prompt_object   of hoFocus to hoPrompt
49064>>>>>            Set Delegation_mode of hoFocus to iDelegate
49065>>>>>        End
49065>>>>>>
49065>>>>>        Function_Return (hoPrompt<>0)
49066>>>>>    End_Function
49067>>>>>   
49067>>>>>End_Class
49068>>>>>
49068>>>>>
49068>>>>>Class cCJZoomMenuItem is a cCJDeoMenuItem
49069>>>>>     Procedure Construct_Object
49071>>>>>        Forward Send Construct_Object
49073>>>>>        Set psCaption   to C_$CaptionZoom
49074>>>>>        Set psToolTip to C_$ToolTipZoom
49075>>>>>        Set psDescription to C_$DescZoom
49076>>>>>        Set psShortcut to C_$Key_Alt_F9
49077>>>>>    End_Procedure
49078>>>>>
49078>>>>>    Procedure OnExecute Variant vCommandBarControl
49080>>>>>        Send Zoom of (focus(Self))
49081>>>>>    End_Procedure
49082>>>>>    
49082>>>>>    Function IsEnabled Returns Boolean
49084>>>>>        Handle hoFocus hoZoom 
49084>>>>>        Integer iDelegate
49084>>>>>        Get Focus to hoFocus
49085>>>>>        If (hoFocus>Desktop) Begin
49087>>>>>            Get Delegation_mode of hoFocus to iDelegate
49088>>>>>            Set Delegation_mode of hoFocus to No_Delegate_or_Error
49089>>>>>            Get Zoom_object   of hoFocus to hoZoom
49090>>>>>            Set Delegation_mode of hoFocus to iDelegate
49091>>>>>        End
49091>>>>>>
49091>>>>>        Function_Return (hoZoom<>0)
49092>>>>>    End_Function
49093>>>>>   
49093>>>>>End_Class
49094>>>>>
49094>>>>>
49094>>>>>Class cCJFindMenuItem is a cCJDeoMenuItem
49095>>>>>    
49095>>>>>    Procedure Construct_Object
49097>>>>>        Forward Send Construct_Object
49099>>>>>        Set psCaption   to C_$CaptionFindGE
49100>>>>>        Set psToolTip to C_$ToolTipFindGE
49101>>>>>        Set psDescription to C_$DescFindGE
49102>>>>>        Set psImage to "ActionFindEq.ico"
49103>>>>>        Set psShortcut to "F9"
49104>>>>>        
49104>>>>>    End_Procedure
49105>>>>>
49105>>>>>    Procedure OnExecute Variant vCommandBarControl
49107>>>>>        Send Find_GE of (focus(Self)) 
49108>>>>>    End_Procedure
49109>>>>>    
49109>>>>>    Function IsEnabled Returns Boolean
49111>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex bIsFind
49111>>>>>        Handle hoServer hoFocus hoCommandBars
49111>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
49112>>>>>        If (bIsDEO and hoServer and bHasIndex) Begin
49114>>>>>            // if it is a candidate for finding we must check if this supports the DEO Find protocol
49114>>>>>            Get Focus of desktop to hoFocus
49115>>>>>            Get CommandBarSystemObject to hoCommandBars // must exist or a programming bug
49116>>>>>            Get Is_Function of hoCommandBars Get_Deo_Find_Object hoFocus True to bIsFind
49117>>>>>            Function_Return bIsFind
49118>>>>>        End
49118>>>>>>
49118>>>>>        Function_Return False
49119>>>>>    End_Function
49120>>>>>         
49120>>>>>End_Class         
49121>>>>>
49121>>>>>
49121>>>>>Class cCJFindNextMenuItem is a cCJFindMenuItem
49122>>>>>    
49122>>>>>    Procedure Construct_Object
49124>>>>>        Forward Send Construct_Object
49126>>>>>        Set psCaption   to C_$CaptionFindGT
49127>>>>>        Set psToolTip to C_$ToolTipFindGT
49128>>>>>        Set psDescription to C_$DescFindGT
49129>>>>>        Set psImage to "ActionNext.ico"
49130>>>>>        Set psShortcut to "F8"
49131>>>>>    End_Procedure
49132>>>>>
49132>>>>>    Procedure OnExecute Variant vCommandBarControl
49134>>>>>        Send Find_Next of (focus(Self)) 
49135>>>>>    End_Procedure
49136>>>>>    
49136>>>>>End_Class         
49137>>>>>
49137>>>>>
49137>>>>>Class cCJFindPreviousMenuItem is a cCJFindMenuItem
49138>>>>>    
49138>>>>>    Procedure Construct_Object
49140>>>>>        Forward Send Construct_Object
49142>>>>>        Set psCaption   to C_$CaptionFindLT
49143>>>>>        Set psToolTip to C_$ToolTipFindLT
49144>>>>>        Set psDescription to C_$DescFindLT
49145>>>>>        Set psImage to "ActionPrevious.ico"
49146>>>>>        Set psShortcut to "F7"
49147>>>>>    End_Procedure
49148>>>>>
49148>>>>>    Procedure OnExecute Variant vCommandBarControl
49150>>>>>        Send Find_Previous of (focus(Self)) 
49151>>>>>    End_Procedure
49152>>>>>    
49152>>>>>End_Class        
49153>>>>>
49153>>>>>
49153>>>>>Class cCJFindFirstMenuItem is a cCJFindMenuItem
49154>>>>>    
49154>>>>>    Procedure Construct_Object
49156>>>>>        Forward Send Construct_Object
49158>>>>>        Set psCaption   to C_$CaptionFindFirst
49159>>>>>        Set psToolTip to C_$ToolTipFindFirst
49160>>>>>        Set psDescription to C_$DescFindFirst
49161>>>>>        Set psImage to "ActionFirst.ico"
49162>>>>>        Set psShortcut to C_$Key_Ctrl_Home
49163>>>>>    End_Procedure
49164>>>>>
49164>>>>>    Procedure OnExecute Variant vCommandBarControl
49166>>>>>        Send Find_First of (focus(Self)) 
49167>>>>>    End_Procedure
49168>>>>>    
49168>>>>>End_Class         
49169>>>>>
49169>>>>>
49169>>>>>Class cCJFindLastMenuItem is a cCJFindMenuItem
49170>>>>>    
49170>>>>>    Procedure Construct_Object
49172>>>>>        Forward Send Construct_Object
49174>>>>>        Set psCaption   to C_$CaptionFindLast
49175>>>>>        Set psToolTip to C_$ToolTipFindLast
49176>>>>>        Set psDescription to C_$DescFindLast
49177>>>>>        Set psImage to "ActionLast.ico"
49178>>>>>        Set psShortcut to C_$Key_Ctrl_End
49179>>>>>    End_Procedure
49180>>>>>
49180>>>>>    Procedure OnExecute Variant vCommandBarControl
49182>>>>>        Send Find_Last of (focus(Self)) 
49183>>>>>    End_Procedure
49184>>>>>    
49184>>>>>End_Class         
49185>>>>>
49185>>>>>
49185>>>>>
49185>>>>>Class cCJSuperFindMenuItem is a cCJFindMenuItem
49186>>>>>    
49186>>>>>    Procedure Construct_Object
49188>>>>>        Forward Send Construct_Object
49190>>>>>        Set psCaption   to C_$CaptionSuperFindGE
49191>>>>>        Set psToolTip to C_$ToolTipSuperFindGE
49192>>>>>        Set psDescription to C_$DescSuperFindGE
49193>>>>>        Set psImage to "ActionSuperFindEq.ico"
49194>>>>>        Set psShortcut to "F9"
49195>>>>>        
49195>>>>>    End_Procedure
49196>>>>>
49196>>>>>    Procedure OnExecute Variant vCommandBarControl
49198>>>>>        Send SuperFind of (focus(Self)) 
49199>>>>>    End_Procedure
49200>>>>>    
49200>>>>>    Function IsEnabled Returns Boolean
49202>>>>>        Boolean bIsDEO bHasRecord bChanged bEnabled bHasIndex
49202>>>>>        Handle hoServer
49202>>>>>        Get DEOInformation (&hoServer) (&bHasRecord) (&bChanged) (&bHasIndex) to bIsDeo
49203>>>>>        Function_Return (bIsDEO and hoServer and bHasIndex)
49204>>>>>    End_Function
49205>>>>>         
49205>>>>>End_Class         
49206>>>>>
49206>>>>>
49206>>>>>
49206>>>>>Class cCJSuperFindNextMenuItem is a cCJFindMenuItem
49207>>>>>    
49207>>>>>    Procedure Construct_Object
49209>>>>>        Forward Send Construct_Object
49211>>>>>        Set psCaption   to C_$CaptionSuperFindGT
49212>>>>>        Set psToolTip to C_$ToolTipSuperFindGT
49213>>>>>        Set psDescription to C_$DescSuperFindGT
49214>>>>>        Set psImage to "ActionSuperFindNext.ico"
49215>>>>>        Set psShortcut to "F8"
49216>>>>>    End_Procedure
49217>>>>>
49217>>>>>    Procedure OnExecute Variant vCommandBarControl
49219>>>>>        Send SuperFind_Next of (focus(Self)) 
49220>>>>>    End_Procedure
49221>>>>>    
49221>>>>>End_Class         
49222>>>>>
49222>>>>>
49222>>>>>Class cCJSuperFindPreviousMenuItem is a cCJFindMenuItem
49223>>>>>    
49223>>>>>    Procedure Construct_Object
49225>>>>>        Forward Send Construct_Object
49227>>>>>        Set psCaption   to C_$CaptionSuperFindLT
49228>>>>>        Set psToolTip to C_$ToolTipSuperFindLT
49229>>>>>        Set psDescription to C_$DescSuperFindLT
49230>>>>>        Set psImage to "ActionSuperFindPrev.ico"
49231>>>>>        Set psShortcut to "F7"
49232>>>>>    End_Procedure
49233>>>>>
49233>>>>>    Procedure OnExecute Variant vCommandBarControl
49235>>>>>        Send SuperFind_Previous of (focus(Self)) 
49236>>>>>    End_Procedure
49237>>>>>    
49237>>>>>End_Class        
49238>>>>>
49238>>>>>
49238>>>>>Class cCJNextAreaMenu is a cCJDeoNavigateMenuItem
49239>>>>>
49239>>>>>    Procedure Construct_Object
49241>>>>>        Forward Send Construct_Object
49243>>>>>        Set psCaption to C_$CaptionNextArea
49244>>>>>        Set psDescription to C_$DescNextArea
49245>>>>>        Set psToolTip to C_$ToolTipNextArea
49246>>>>>        Set psShortcut to "F6"
49247>>>>>        Set psImage to "ActionNextArea.ico"
49248>>>>>    End_Procedure
49249>>>>>        
49249>>>>>    Procedure OnExecute Variant vCommandBarControl
49251>>>>>        Send Switch_Next_Area of (Focus(Self))
49252>>>>>    End_Procedure
49253>>>>>        
49253>>>>>End_Class
49254>>>>>    
49254>>>>>Class cCJPriorAreaMenu is a cCJDeoNavigateMenuItem
49255>>>>>
49255>>>>>    Procedure Construct_Object
49257>>>>>        Forward Send Construct_Object
49259>>>>>        Set psCaption to C_$CaptionPriorArea
49260>>>>>        Set psDescription to C_$DescPriorArea
49261>>>>>        Set psToolTip to C_$ToolTipPriorArea
49262>>>>>        Set psShortcut to C_$Key_Shift_F6
49263>>>>>        Set psImage to "ActionPrevArea.ico"
49264>>>>>    End_Procedure
49265>>>>>        
49265>>>>>    Procedure OnExecute Variant vCommandBarControl
49267>>>>>        Send Switch_Prior_Area of (Focus(Self))
49268>>>>>    End_Procedure
49269>>>>>    
49269>>>>>End_Class
49270>>>>>    
49270>>>>>Class cCJNextViewMenu is a cCJDeoNavigateMenuItem
49271>>>>>
49271>>>>>    Procedure Construct_Object
49273>>>>>        Forward Send Construct_Object
49275>>>>>        Set psCaption to C_$CaptionNextView
49276>>>>>        Set psDescription to C_$DescNextView
49277>>>>>        Set psToolTip to C_$ToolTipNextView
49278>>>>>        Set psShortcut to C_$Key_Alt_F6
49279>>>>>        Set psImage to "ActionNextView.ico"
49280>>>>>    End_Procedure
49281>>>>>        
49281>>>>>    Procedure OnExecute Variant vCommandBarControl
49283>>>>>        Handle hoCommandBars hoClientArea
49283>>>>>        Get CommandBarSystemObject to hoCommandBars
49284>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
49285>>>>>        If hoClientArea Begin
49287>>>>>            Send Switch_Next_View of hoClientArea
49288>>>>>        End
49288>>>>>>
49288>>>>>    End_Procedure
49289>>>>>    
49289>>>>>End_Class
49290>>>>>    
49290>>>>>Class cCJPriorViewMenu is a cCJDeoNavigateMenuItem
49291>>>>>
49291>>>>>    Procedure Construct_Object
49293>>>>>        Forward Send Construct_Object
49295>>>>>        Set psCaption to C_$CaptionPriorView
49296>>>>>        Set psDescription to C_$DescPriorView
49297>>>>>        Set psToolTip to C_$ToolTipPriorView
49298>>>>>        Set psShortcut to C_$Key_Ctrl_F6
49299>>>>>        Set psImage to "ActionPrevView.ico"
49300>>>>>    End_Procedure
49301>>>>>        
49301>>>>>    Procedure OnExecute Variant vCommandBarControl
49303>>>>>        Handle hoCommandBars hoClientArea
49303>>>>>        Get CommandBarSystemObject to hoCommandBars
49304>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
49305>>>>>        If hoClientArea Begin
49307>>>>>            Send Switch_Prior_View of hoClientArea
49308>>>>>        End
49308>>>>>>
49308>>>>>    End_Procedure
49309>>>>>        
49309>>>>>End_Class
49310>>>Use cCJMDIWindowsMenuItem.pkg
Including file: cCJMDIWindowsMenuItem.pkg    (C:\Program Files\Visual DataFlex 14.1\Pkg\cCJMDIWindowsMenuItem.pkg)
49310>>>>>Use cCJCommandBarSystem.pkg
49310>>>>>
49310>>>>>Register_Function Client_ID Returns Integer
49310>>>>>
49310>>>>>// only used by cCJMDIWIndowsMenuItem
49310>>>>>Class cCJMDIWindowItem is a cCJMenuItem
49311>>>>>
49311>>>>>    Procedure Construct_Object
49313>>>>>        Forward Send Construct_Object
49315>>>>>        Property Handle phWindow 0 // object id of view
49316>>>>>        Set pbControlFlagNoMovable to True
49317>>>>>        Set pbActiveUpdate to True
49318>>>>>    End_Procedure
49319>>>>>    
49319>>>>>    Procedure OnExecute Variant vCommandBarControl
49321>>>>>        Handle hWindow
49321>>>>>        Get phWindow to hWindow
49322>>>>>        Send Activate_View of hWindow
49323>>>>>    End_Procedure
49324>>>>>    
49324>>>>>End_Class                
49325>>>>>
49325>>>>>
49325>>>>>Class cCJMDIWindowsMenuItem is a cCJMenuItem
49326>>>>>    
49326>>>>>    Procedure Construct_Object
49328>>>>>        Forward Send Construct_Object
49330>>>>>        Property Handle[] phArrayOfWindows
49331>>>>>        Set peControlType to xtpControlPopup
49332>>>>>        Set psCategory to C_$CategoryWindow
49333>>>>>    End_Procedure
49334>>>>>    
49334>>>>>     // This adds MDI windows to the existing menu items.
49334>>>>>     // This removes any existing windows menus and always adds a new set to the end
49334>>>>>
49334>>>>>     Procedure OnPopupInit Variant vCommandBarControl Handle hCommandBarControls
49336>>>>>        Handle  hClientArea hView
49336>>>>>        String  sLabel
49336>>>>>        Integer i iWindows
49336>>>>>        Handle[] hArrayOfWindows
49337>>>>>        Variant vItem
49337>>>>>        
49337>>>>>        // delete all windows actions and menu items. Assume we have an array of DF action objects for the windows
49337>>>>>        // also assume that destroying an action removes all menu instances of that action
49337>>>>>        Get phArrayOfWindows to hArrayOfWindows
49338>>>>>        Move (SizeOfArray(hArrayOfWindows)) to iWindows
49339>>>>>        For i from 0 to (iWindows-1)
49345>>>>>>
49345>>>>>            Send Destroy of hArrayOfWindows[i] // assume this removes all menu items of this action
49346>>>>>        Loop
49347>>>>>>
49347>>>>>        Move (ResizeArray(hArrayOfWindows,0)) to hArrayOfWindows
49348>>>>>
49348>>>>>        // Add all views to this menu. Create the action and add the item
49348>>>>>        Move 0 to i
49349>>>>>        Get Client_Id to hClientArea // object id of client area
49350>>>>>        If (hClientArea > 0) Begin
49352>>>>>            Get Next_Mdi_Dialog of hClientArea True to hView // find first view
49353>>>>>            While (hView <> 0)
49357>>>>>                If (Active_State(hView)) Begin
49359>>>>>                    // create the action
49359>>>>>                    Get Create U_cCJMDIWindowItem to hArrayOfWindows[i]
49360>>>>>                    Get Label of hView to sLabel // caption bar (name) of view
49361>>>>>                    Set psCaption of hArrayOfWindows[i] to sLabel
49362>>>>>                    Set psDescription of hArrayOfWindows[i] to ("Make this view (" - trim(sLabel) - ") the active window.")
49363>>>>>                    If (current_scope(desktop)=hView and View_mode(hView)<>VIEWMODE_ICONIZE) Begin
49365>>>>>                        Set pbChecked of hArrayOfWindows[i] to True
49366>>>>>                    End
49366>>>>>>
49366>>>>>                    Set phWindow of hArrayOfWindows[i] to hView // used by custom OnExecute
49367>>>>>                    If (i=0) Begin
49369>>>>>                        Set pbControlBeginGroup of hArrayOfWindows[i] to True
49370>>>>>                    End
49370>>>>>>
49370>>>>>                    // Create a menu item for this action
49370>>>>>                    Get AddDynamicControl of hArrayOfWindows[i] hCommandBarControls to vItem
49371>>>>>                    Increment i
49372>>>>>                End
49372>>>>>>
49372>>>>>                Get Next_Mdi_Dialog of hClientArea False to hView // find next
49373>>>>>            Loop
49374>>>>>>
49374>>>>>        End
49374>>>>>>
49374>>>>>
49374>>>>>        Set phArrayOfWindows to hArrayOfWindows
49375>>>>>
49375>>>>>     End_Procedure
49376>>>>>     
49376>>>>>End_Class
49377>>>>>
49377>Use cCJCommandBarSystem.pkg
49377>
49377>Object oHtmlHelp is a cHtmlHelp
49379>End_Object
49380>
49380>Object oApplication is a cApplication
49382>    Set peHelpType to htHtmlHelp
49383>
49383>    Procedure OnCreate
49386>        Handle hoCmdLine
49386>        Integer iNumArgs iArg
49386>        Get phoCommandLine to hoCmdLine
49387>    End_Procedure
49388>
49388>End_Object
49389>
49389>Use oEditContextMenu.pkg
Including file: oEditContextMenu.pkg    (C:\Program Files\Visual DataFlex 14.1\Pkg\oEditContextMenu.pkg)
49389>>>Use cCJStandardMenuItemClasses.pkg
49389>>>
49389>>>Object oEditContextMenu is a cCJContextMenu
49391>>>    
49391>>>    Move Self to Default_Form_Floating_Menu_ID
49392>>>    
49392>>>    Object oUndoMenuItem is a cCJUndoMenuItem
49394>>>    End_Object
49395>>>    
49395>>>    Object oCutMenuItem is a cCJCutMenuItem
49397>>>        Set pbControlBeginGroup to True
49398>>>    End_Object
49399>>>    
49399>>>    Object oCopyMenuItem is a cCJCopyMenuItem
49401>>>    End_Object
49402>>>
49402>>>    Object oPasteMenuItem is a cCJPasteMenuItem
49404>>>    End_Object
49405>>>
49405>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
49407>>>    End_Object
49408>>>
49408>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
49410>>>        Set pbControlBeginGroup to True
49411>>>    End_Object
49412>>>
49412>>>End_Object
49413>>>
49413>Use oDEOEditContextMenu.pkg
Including file: oDEOEditContextMenu.pkg    (C:\Program Files\Visual DataFlex 14.1\Pkg\oDEOEditContextMenu.pkg)
49413>>>Use Windows.pkg
49413>>>Use cCJStandardMenuItemClasses.pkg
49413>>>Use cCJDeoMenuItemClasses.pkg
49413>>>
49413>>>
49413>>>Object oDEOEditContextMenu is a cCJContextMenu
49415>>>    
49415>>>    Move Self to Default_dbFloating_Menu_ID
49416>>>    
49416>>>    Object oUndoMenuItem is a cCJUndoMenuItem
49418>>>    End_Object
49419>>>    
49419>>>    Object oCutMenuItem is a cCJCutMenuItem
49421>>>        Set pbControlBeginGroup to True
49422>>>    End_Object
49423>>>    
49423>>>    Object oCopyMenuItem is a cCJCopyMenuItem
49425>>>    End_Object
49426>>>
49426>>>    Object oPasteMenuItem is a cCJPasteMenuItem
49428>>>    End_Object
49429>>>
49429>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
49431>>>    End_Object
49432>>>
49432>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
49434>>>        Set pbControlBeginGroup to True
49435>>>    End_Object
49436>>>
49436>>>    Object oPromptMenuItem is a cCJPromptMenuItem
49438>>>        Set pbControlBeginGroup to True
49439>>>    End_Object
49440>>>
49440>>>    Object oFindNextMenu is a cCJFindNextMenuItem
49442>>>        Set pbControlBeginGroup to True
49443>>>    End_Object
49444>>>
49444>>>    Object oFindPreviousMenu is a cCJFindPreviousMenuItem
49446>>>    End_Object
49447>>>
49447>>>    Object oClearMenuItem is a cCJClearMenuItem
49449>>>        Set pbControlBeginGroup to True
49450>>>    End_Object
49451>>>
49451>>>    Object oClearAllMenu is a cCJClearAllMenuItem
49453>>>    End_Object
49454>>>
49454>>>    Object oSaveMenu is a cCJSaveMenuItem
49456>>>    End_Object
49457>>>    
49457>>>    Object oSaveNCMenu is a cCJSaveNCMenuItem
49459>>>    End_Object
49460>>>    Object oDeleteMenu is a cCJDeleteMenuItem
49462>>>    End_Object
49463>>>
49463>>>
49463>>>End_Object
49464>
49464>
49464>Use MERTECH.INC
Including file: MERTECH.INC    (C:\Program Files\Visual DataFlex 14.1\Pkg\MERTECH.INC)
49464>>>//*************************************************************************
49464>>>//*                                                                       *
49464>>>//*  Confidential Trade Secret.                                           *
49464>>>//*  Copyright (c) 1997-2008 Mertech Data Systems Inc, Miami Florida      *
49464>>>//*  All rights reserved.                                                 *
49464>>>//*  DataFlex is a registered trademark of Data Access Corporation.       *
49464>>>//*                                                                       *
49464>>>//*************************************************************************
49464>>>USE UI
49464>>>
#REM -----------------------------------------------
#REM MERTECH DATA SYSTEMS INC. - WWW.MERTECHDATA.COM
#REM MERTECH.INC VERSION 2.6.18
#REM -----------------------------------------------
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>
49464>>>// SQLFlex Lock Type
49464>>>
49464>>>// Extended Callback Types
49464>>>
49464>>>
49464>>>INTEGER _SAVEFILENUMBER#
49464>>>
49464>>>// dfStructureEnd Option bits
49464>>>
49464>>>//
49464>>>Enum_List  //  Call_Driver Functions
49464>>>    DEfine CALLDRV_LICENSE_ENVIRONMENT_SET      FOR 0
49464>>>    Define CALLDRV_ORA_CURRENT_SQL_SERVER       FOR 6
49464>>>    Define CALLDRV_CURRENT_SQL_SERVER           FOR 19
49464>>>    Define CALLDRV_SQL_MAX_CURSORS              FOR 26
49464>>>    Define CALLDRV_SQLLOADER_FIELDS_TERM        FOR 30
49464>>>    Define CALLDRV_CREATE_TABLE_FROM_DAT        FOR 30
49464>>>    Define CALLDRV_SQLLOADER_DECIMAL_SEP        FOR 31
49464>>>    Define CALLDRV_SQLFLEX_MAX_CURSORS          FOR 37
49464>>>
49464>>>    Define CALLDRV_GET_RETURNED_COLUMNS         FOR 39
49464>>>    Define CALLDRV_GET_RETURNED_ROWS            FOR 40
49464>>>    Define CALLDRV_GET_COLUMN_ATTRIBUTE         FOR 41
49464>>>    Define CALLDRV_START_TXTGEN_AFTER_RECNUM    FOR 42
49464>>>    Define CALLDRV_FINISH_TXTGEN_AFTER_RECNUM   FOR 43
49464>>>    Define CALLDRV_SET_ISOLATION_LEVEL          FOR 44
49464>>>    Define CALLDRV_GET_SERVER_CFG               FOR 45
49464>>>    Define CALLDRV_SET_SQL_LOCK_TIMEOUT         FOR 46
49464>>>    Define CALLDRV_GET_SQL_LOCK_TIMEOUT         FOR 47
49464>>>    Define CALLDRV_GET_RESULTS                  FOR 48
49464>>>    Define CALLDRV_GET_MORE_RESULTS             FOR 49
49464>>>    Define CALLDRV_GET_CURRENT_USER_NAME        FOR 50
49464>>>    Define CALLDRV_OPEN_EMBEDDED_CURSOR         FOR 51
49464>>>    Define CALLDRV_CLOSE_EMBEDDED_CURSOR        FOR 52
49464>>>    Define CALLDRV_SET_CURRENT_EMBEDDED_CURSOR  FOR 53
49464>>>    Define CALLDRV_GET_CURRENT_EMBEDDED_CURSOR  FOR 54
49464>>>    Define CALLDRV_SET_MAX_EMBEDDED_CURSOR      FOR 55
49464>>>    Define CALLDRV_GET_MAX_EMBEDDED_CURSOR      FOR 56
49464>>>    Define CALLDRV_SQL_TRANSACTION              FOR 57
49464>>>    Define CALLDRV_LOCAL_TD_PATH                FOR 58
49464>>>    Define CALLDRV_CREATE_DB                    FOR 59
49464>>>    Define CALLDRV_ESCAPE_STRING                FOR 60
49464>>>    Define CALLDRV_SET_PROC_ATTRIBUTE_TYPE      FOR 61
49464>>>    Define CALLDRV_SQL_REFRESH_CACHE            FOR 62
49464>>>    Define CALLDRV_GET_SQL_STMT                 FOR 63
49464>>>    Define CALLDRV_DIRECT_PATH_LOAD             FOR 64
49464>>>
49464>>>    Define CALLDRV_READ_LOB                     FOR 65
49464>>>    Define CALLDRV_WRITE_LOB                    FOR 66
49464>>>    Define CALLDRV_APPEND_LOB                   FOR 67
49464>>>    Define CALLDRV_LENGTH_LOB                   FOR 68
49464>>>    Define CALLDRV_LOADFROMFILE_LOB             FOR 69
49464>>>    Define CALLDRV_ERASE_LOB                    FOR 70
49464>>>    Define CALLDRV_TRUNCATE_LOB                 FOR 71
49464>>>    Define CALLDRV_INITIALIZE_SEQUENCE          FOR 72
49464>>>    Define CALLDRV_CLIENT_CFG                   FOR 73
49464>>>    Define CALLDRV_END_SAVERECORD               FOR 74
49464>>>    Define CALLDRV_ENABLE_RECONNECT             FOR 75
49464>>>    Define CALLDRV_ENUMERATE_SERVER             FOR 76
49464>>>    Define CALLDRV_USE_ROWCOUNT_IN_TRANSACTIONS FOR 77
49464>>>    Define CALLDRV_USE_DFLEX_DATE_FORMAT        FOR 78
49464>>>    Define CALLDRV_FORCE_FIELDS_NOT_NULL        FOR 79
49464>>>    Define CALLDRV_ORA_CREATE_TABLE_FROM_DAT    FOR 80
49464>>>    Define CALLDRV_MAX_DATA_SIZE                FOR 81
49464>>>    Define CALLDRV_CHUNK_SIZE                   FOR 82
49464>>>    Define CALLDRV_GET_DATA_CHUNK               FOR 83
49464>>>    Define CALLDRV_MIRROR_SERVER                FOR 84
49464>>>    Define CALLDRV_COPY_DATA                    FOR 85
49464>>>    Define CALLDRV_SET_SQL_CURSOR_TYPE          FOR 86
49464>>>    Define CALLDRV_ICF                          FOR 87
49464>>>    Define CALLDRV_CLEAR_INT_CACHE              FOR 88
49464>>>    Define CALLDRV_GET_CURRENT_USER_PASSWORD    FOR 89
49464>>>    Define CALLDRV_FORCE_FIELDS_NULL            FOR 90
49464>>>End_Enum_List
49464>>>
49464>>>// License and environment settings
49464>>>Enum_List
49464>>>    Define CALLDRV_DRIVER_REVISION             FOR 0
49464>>>    Define CALLDRV_COMPANY_NAME                FOR 1
49464>>>    Define CALLDRV_SERIAL_NUMBER               FOR 2
49464>>>    Define CALLDRV_LICENSED_USERS              FOR 3
49464>>>    Define CALLDRV_MAJOR_REVISION              FOR 4
49464>>>    Define CALLDRV_VERSION_COMMENTS            FOR 5
49464>>>    Define CALLDRV_OLEDB_OEM_TRANSLATION       FOR 6
49464>>>    Define CALLDRV_SET_DB_PORT                 FOR 7
49464>>>    Define CALLDRV_GET_DB_PORT                 FOR 8
49464>>>    Define CALLDRV_SET_DB_SOCKET               FOR 9
49464>>>    Define CALLDRV_GET_DB_SOCKET               FOR 10
49464>>>    Define CALLDRV_SET_AS_SYSDBA               FOR 11
49464>>>    Define CALLDRV_OEM_TRANSLATION_STATE       FOR 12
49464>>>End_Enum_List
49464>>>
49464>>>Enum_List  // CALLDRV_ENUMERATE_SERVER_OPTION
49464>>>    Define CALLDRV_ENUMERATE_SERVER_COUNT       FOR 0
49464>>>    Define CALLDRV_ENUMERATE_SERVER_SERVER      FOR 1
49464>>>End_Enum_List
49464>>>
49464>>>// Embedded SQL Cursor Types
49464>>>Enum_List
49464>>>    Define CALLDRV_ENUMERATE_CURSOR_TYPE_NONE           FOR 0
49464>>>    Define CALLDRV_ENUMERATE_CURSOR_TYPE_CLIENT         FOR 1
49464>>>    Define CALLDRV_ENUMERATE_CURSOR_TYPE_SERVER         FOR 2
49464>>>    Define CALLDRV_ENUMERATE_CURSOR_TYPE_PARAMETERIZED  FOR 3
49464>>>End_Enum_List
49464>>>
49464>>>Enum_List
49464>>>    Define CALLDRV_VALUE_GET                    FOR 0
49464>>>    Define CALLDRV_VALUE_SET                    FOR 1
49464>>>End_Enum_List
49464>>>
49464>>>// Inverse Key types
49464>>>Enum_List
49464>>>    Define REGULAR_SEG                          FOR -1
49464>>>    Define INVK_CASE_SEG                        FOR 0
49464>>>    Define INVK_DESC_SEG                        FOR 1
49464>>>    Define INVK_DESC_AND_CASE_SEG               FOR 2
49464>>>End_Enum_List
49464>>>
49464>>>// DB2 Index Types
49464>>>Enum_List
49464>>>    Define REG_INDEX                            FOR 0
49464>>>    Define REV_INDEX                            FOR 1
49464>>>    Define CLUST_INDEX                          FOR 2
49464>>>    Define REV_CLUST_INDEX                      FOR 3
49464>>>End_Enum_List
49464>>>
49464>>>// Oracle Procedure Arguments type
49464>>>Enum_List
49464>>>    Define IS_NONE                              FOR 0
49464>>>    Define IS_IN                                FOR 1
49464>>>    Define IS_OUT                               FOR 2
49464>>>    Define IS_IN_OUT                            FOR 3
49464>>>    Define IS_RSET                              FOR 4
49464>>>End_Enum_List
49464>>>
49464>>>//  SQL_GET_COL Attributes
49464>>>Enum_List
49464>>>    Define SQL_GET_COL_ATTRIB_SIZE              FOR 1
49464>>>    Define SQL_GET_COL_ATTRIB_DECIMALS          FOR 2
49464>>>    Define SQL_GET_COL_ATTRIB_LABEL             FOR 3
49464>>>    Define SQL_GET_COL_ATTRIB_COLUMN_NAME       FOR 4
49464>>>    Define SQL_GET_COL_ATTRIB_TABLE_NAME        FOR 5
49464>>>    Define SQL_GET_COL_ATTRIB_SQLTYPE           FOR 6
49464>>>    Define SQL_GET_COL_ATTRIB_NULLABLE          FOR 7
49464>>>    Define SQL_GET_COL_ATTRIB_DFTYPE            FOR 8
49464>>>    Define SQL_GET_COL_ATTRIB_DATA_LENGTH       FOR 9
49464>>>End_Enum_List
49464>>>
49464>>>// Declare Global variables
49464>>>    String _DRIVERNAME# 255
49464>>>
49464>>>
49464>>>//Last Revised: 2007-08-08 By: Marcelo
49464>>>Object oMertechInc Is An Array
49466>>>    Property String  psArg1      Public ""
49468>>>    Property String  psArg2      Public ""
49470>>>    Property Integer piRet       Public 0
49472>>>    Property Integer piDecSep    Public 0
49474>>>
49474>>>    Procedure FillsArg1 Integer iSize
49477>>>        Set psArg1 to (REPEAT(" ",iSize))
49478>>>    End_Procedure
49479>>>
49479>>>    Procedure FillsArg2 Integer iSize
49482>>>        Set psArg2 to (REPEAT(" ",iSize))
49483>>>    End_Procedure
49484>>>
49484>>>    Procedure SetDecimalSeparator
49487>>>        Local Integer liDecSep
49487>>>        GET_ATTRIBUTE DF_DECIMAL_SEPARATOR TO liDecSep
49490>>>        Set piDecSep to liDecSep
49491>>>
49491>>>        If liDecSep Ne 46 SET_ATTRIBUTE DF_DECIMAL_SEPARATOR TO 46 // (.) WILL BE DECIMAL SEPARATOR
49496>>>    End_Procedure
49497>>>
49497>>>    Procedure RestoreDecimalSeparator
49500>>>        Local Integer liDecSep
49500>>>        Get piDecSep to liDecSep
49501>>>        If liDecSep Ne 46 SET_ATTRIBUTE DF_DECIMAL_SEPARATOR TO liDecSep
49506>>>    End_Procedure
49507>>>
49507>>>    Procedure SetsArg1Numeric String sValue
49510>>>        Send SetDecimalSeparator
49511>>>        Set psArg1 to sValue
49512>>>        Send RestoreDecimalSeparator
49513>>>    End_Procedure
49514>>>
49514>>>    Procedure SetsArg2Numeric String sValue
49517>>>        Send SetDecimalSeparator
49518>>>        Set psArg2 to sValue
49519>>>        Send RestoreDecimalSeparator
49520>>>    End_Procedure
49521>>>
49521>>>    Function GetpsArg1 Returns String
49524>>>        Function_Return (psArg1(_SELF#))
49525>>>    End_Function
49526>>>
49526>>>    Function GetpsArg2 Returns String
49529>>>        Function_Return (psArg2(_SELF#))
49530>>>    End_Function
49531>>>
49531>>>    Function GetpiRet Returns String
49534>>>        Function_Return (piRet(_SELF#))
49535>>>    End_Function
49536>>>
49536>>>    Function doCallDriver# Integer iFileNumber String sDriverID Integer iFunction String sArg1 String sArg2 Integer iLong Returns Integer
49539>>>        Local Integer liRetval
49539>>>        Local String lsArg1 lsArg2
49539>>>
49539>>>        Move sArg1 to lsArg1
49540>>>        Move sArg2 to lsArg2
49541>>>
49541>>>        Call_Driver iFileNumber sDRiverID Function iFunction Callback 0 Passing lsArg1 lsArg2 iLong Result liRetval
49546>>>
49546>>>        Set psArg1 to lsArg1
49547>>>        Set psArg2 to lsArg2
49548>>>        Set piRet  to liRetval
49549>>>        Function_Return liRetval
49550>>>    End_Function
49551>>>
49551>>>    Function doCallDriver2# Integer iFileNumber String sDriverID Integer iFunction Integer iLong Returns Integer
49554>>>        Local Integer liRetval
49554>>>        Local String lsArg1 lsArg2
49554>>>
49554>>>        Move (psArg1(_SELF#)) to lsArg1
49555>>>        Move (psArg2(_SELF#)) to lsArg2
49556>>>
49556>>>        Call_Driver iFileNumber sDRiverID Function iFunction Callback 0 Passing lsArg1 lsArg2 iLong Result liRetval
49561>>>
49561>>>        Set psArg1 to lsArg1
49562>>>        Set psArg2 to lsArg2
49563>>>        Set piRet  to liRetval
49564>>>        Function_Return liRetval
49565>>>    End_Function
49566>>>
49566>>>End_Object
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-10-25 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-10-25 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-11-09 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-07-13 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//==========================================
49567>>>// SELECT STUFFS
49567>>>//==========================================
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-01-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-07-25 By: Thomas
49567>>>
49567>>>//Last Revised: 2008-01-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-09-06 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-09-07 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-09-06 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-09-06 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-09-06 By: Marcelo
49567>>>
49567>>>//Last Revised: 2003-03-27 By: Marcelo
49567>>>
49567>>>//Last Revised: 2003-03-27 By: Marcelo
49567>>>
49567>>>//Last Revised: 2003-03-27 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-09-22 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-09-22 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-08-03 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-08-10 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-08 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-02-25 By: Marcelo
49567>>>
49567>>>//Last Revised: 2003-08-27 By: Marcelo
49567>>>// SQL_GET_OUTPUT_VALUE <POSITION> TO <VARIABLE>
49567>>>
49567>>>//Last Revised: 2007-09-13 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-08-03 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-01-29 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-01-29 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-09-07 By: Marcelo
49567>>>
49567>>>
49567>>>//Last Revised: 2005-08-29 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-08-29 By: Marcelo
49567>>>
49567>>>//Last Revised: 2003-08-27 By: Marcelo
49567>>>
49567>>>
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-09-15 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-07-19 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2006-12-27 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-10 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//==================================
49567>>>// SQLFlex Commands
49567>>>//==================================
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-02-18 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-07-21 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-06-18 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-05-10 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-05-10 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-30 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-05-07 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//==========================================
49567>>>// SQL SERVER Stored Procedure Call engine
49567>>>//==========================================
49567>>>
49567>>>//Last Revised: 2008-04-30 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-10 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-02-06 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-02-06 By: Marcelo
49567>>>
49567>>>//Last Revised: 2008-02-15 By: Marcelo
49567>>>// Copy_Data {source-table} To {dest-table} [Callback {callback-object}] [Constrain {SQL-expression}]
49567>>>
49567>>>//============================
49567>>>// ORAFlex Commands
49567>>>//============================
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2006-03-21 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-07-19 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//===========================
49567>>>// BUFFER save stuffs
49567>>>//===========================
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2003-08-14 By: Marcelo
49567>>>// CREATE_TABLE_FROM_DAT_FILE <FILE NUMBER>
49567>>>
49567>>>//Last Revised: 2002-08-14 By: Marcelo
49567>>>// CONVERT_DAT_FILE <FILE NUMBER>
49567>>>
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-04-23 By: Marcelo
49567>>>// Syntax:
49567>>>//   GET_SERVER_CFG SERVER_REVISION|SUPPORT_DESC|SUPPORT_CASE|SERVER_VERSION|SERVER_ENCODING|CONNECTION_ACTIVE OF <SERVER NAME> TO <RESULT>
49567>>>// Description:
49567>>>//   Use this command to retrieve from database server the following informations :
49567>>>//   command arguments :
49567>>>//      SERVER_REVISON : Retrieve Server major revision
49567>>>//      SUPPORT_DESC : <RESULT> is 1 if Server supports Descending index segments
49567>>>//      SUPPORT_CASE : <RESULT> is 1 if Server supports Case Insensitive index segments
49567>>>//      SERVER_VERSION : Retrieve Complete Server Version Description
49567>>>//      SERVER_ENCODING : Retrieve the Server Encoding
49567>>>//      CONNECTION_ACTIVE : Retrieve the Connection status. DFTRUE means connection is active
49567>>>//
49567>>>
49567>>>//Last Revised: 2007-04-23 By: Marcelo
49567>>>// Syntax:
49567>>>//  GET_CONNECTION_STATUS of <serverName> [<databaseName>] to <variable>
49567>>>// Description:
49567>>>//  Use this command to retrieve the connection status from the specified server
49567>>>//  command argumetns :
49567>>>//    <serverName> : Server Name
49567>>>//    <databaseName> : Database Name
49567>>>//    <variable> : DFTRUE means connection is active
49567>>>
49567>>>//Last Revised: 2005-04-06 By: Marcelo
49567>>>// Syntax:
49567>>>//   GET_CLIENT_CFG ENCODING OF <SERVER NAME> [<DATABASE NAME>] TO <RESULT>
49567>>>// Description:
49567>>>//   Use this command to retrieve from database server the following informations :
49567>>>//   command arguments :
49567>>>//      ENCODING : Retrieve the Client Encoding
49567>>>//
49567>>>
49567>>>//Last Revised: 2006-05-26 By: Marcelo
49567>>>// Syntax:
49567>>>//   SET_CLIENT_CFG ENCODING OF <SERVER NAME> [<DATABASE NAME>] TO <RESULT>
49567>>>// Description:
49567>>>//   Use this command to Set the following client informations :
49567>>>//   command arguments :
49567>>>//      ENCODING : Set the Client Encoding
49567>>>//      UNIQUE_CHECKS {DFTRUE/DFFALSE}: enable/disable uniqueness checks for secondary indexes in InnoDB tables
49567>>>//
49567>>>
49567>>>//NEW
49567>>>//Last Revised: 2002-08-23 By: Marcelo
49567>>>// Syntax:
49567>>>//   FORMAT TO USE : CALL_DB2_PROCEDURE <OWNER> <STORED_PROC_NAME> [PASSING <ARG1> <ARG2> ....<ARGn>]
49567>>>// Description:
49567>>>//   CALL_STORED_PROCEDURE will call a stored procedure passing arguments
49567>>>
49567>>>// GET_RESULT_SET INTO <Var1 Var2 Var3 ... Varn>
49567>>>
49567>>>// GET_RESULTS
49567>>>
49567>>>// GET_MORE_RESULTS
49567>>>
49567>>>// GET_RESULT_SET_NUM_COLS TO <VAR>
49567>>>
49567>>>// GET_RESULT_SET_COL_NAME <COL NUMBER> TO <VAR> {<SIZE>}
49567>>>
49567>>>
49567>>>
49567>>>// CREATE_DB2_DATABASE <DB Name> <DB Alias> <Code Set> <Territory> [<Path> <NodeName> < UserId> <Password>]
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Marcelo
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Hideraldo
49567>>>
49567>>>//Last Revised: 2005-04-04 By: Hideraldo
49567>>>
49567>>>//Last Revised: 2003-04-08 By: Marcelo
49567>>>
49567>>>
49567>>>
49567>>>//Last Revised: 2007-08-13 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-11-03 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-11-03 By: Marcelo
49567>>>
49567>>>//Last Revised: 2004-11-17 By: Marcelo
49567>>>
49567>>>//Last Revised: 2007-08-13 By: Marcelo
49567>>>
49567>>>//Last Revised: 2003-09-02 By: Marcelo
49567>>>FUNCTION SQLESCAPESTRING GLOBAL STRING SARG RETURNS STRING
49569>>>  LOCAL STRING LSARG
49569>>>  SQL_ESCAPE_STRING OF SARG TO LSARG
49613>>>  FUNCTION_RETURN LSARG
49614>>>END_FUNCTION
49615>>>
49615>>>//Last Revised: 2007-08-13 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-03-18 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-03-21 By: Marcelo
49615>>>
49615>>>//
49615>>>// LOB Columns Macro Commands Support
49615>>>//
49615>>>//Last Revised: 2007-10-04 By: Marcelo
49615>>>
49615>>>//Last Revised: 2008-08-19 By: Marcelo
49615>>>
49615>>>//Last Revised: 2008-06-20 By: Marcelo
49615>>>
49615>>>//Last Revised: 2007-10-04 By: Marcelo
49615>>>
49615>>>//Last Revised: 2007-10-04 By: Marcelo
49615>>>
49615>>>//Last Revised: 2007-10-04 By: Marcelo
49615>>>
49615>>>//Last Revised: 2007-10-04 By: Marcelo
49615>>>
49615>>>//
49615>>>// MYSQL Specific Macro Commands
49615>>>//
49615>>>
49615>>>
49615>>>//Last Revised: 2005-08-23 By: Marcelo
49615>>>
49615>>> ////////// Internal Macro Commands, Procedures and Functions
49615>>>
49615>>>//Last Revised: 2005-08-29 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-08-29 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-08-29 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-08-29 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-08-29 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-08-29 By: Marcelo
49615>>>
49615>>>//Last Revised: 2005-08-29 By: Marcelo
49615>>> Procedure MertechInc_SQL_PROCEDURE_EXECUTE for Desktop
49617>>>    SQL_EXECUTE_STMT
49659>>> End_Procedure
49660>>>
49660>>>//Last Revised: 2005-08-29 By: Marcelo
49660>>> Procedure MertechInc_SQL_FUNCTION_EXECUTE Desktop String sDriverName 
49662>>>    send MertechInc_SQL_PROCEDURE_EXECUTE
49663>>>    if (sDriverName = MYSQLFLEX) begin
49665>>>        SQL_FETCH_NEXT_ROW
49709>>>    end
49709>>>>
49709>>> End_Procedure
49710>>>
49710>>>//Last Revised: 2005-08-29 By: Marcelo
49710>>> Procedure MertechInc_SQL_SET_MYPROCEDURE_NAME Desktop String strProcName Integer iNumpar
49712>>>    Local Integer liPos#
49712>>>
49712>>>    DO_DECLARE_BASIC_VARIABLES#
49713>>>
49713>>>    MOVE 0 TO _NPAR#
49714>>>        INDICATE ERR FALSE
49715>>>
49715>>>    MOVE MySQLFlex TO _DRIVERNAME#
49716>>>
49716>>>    SQL_SET_STMT TO "CALL "
49756>>>    SQL_APPEND_STMT TO strProcName
49796>>>    SQL_APPEND_STMT TO "("
49836>>>    For liPos# From 1 TO iNumpar
49842>>>>
49842>>>        DO_PASS_ARGUMENTS liPos#
49938>>>    Loop
49939>>>>
49939>>>    SQL_APPEND_STMT TO ")"
49979>>>
49979>>>    SQL_PREPARE_STMT
50021>>> End_Procedure
50022>>>
50022>>>//Last Revised: 2005-08-29 By: Marcelo
50022>>> Procedure MertechInc_SQL_SET_ORAPROCEDURE_NAME Desktop String strProcName Integer iNumpar 
50024>>>    Local Integer liPos#
50024>>>
50024>>>    DO_DECLARE_BASIC_VARIABLES#
50025>>>
50025>>>    MOVE 0 TO _NPAR#
50026>>>        INDICATE ERR FALSE
50027>>>
50027>>>    MOVE ORAFlex TO _DRIVERNAME#
50028>>>
50028>>>    SQL_SET_STMT TO "BEGIN "
50068>>>    SQL_APPEND_STMT TO strProcName
50108>>>    SQL_APPEND_STMT TO "( "
50148>>>    For liPos# From 1 TO iNumpar
50154>>>>
50154>>>        DO_PASS_ARGUMENTS liPos#
50250>>>    Loop
50251>>>>
50251>>>    SQL_APPEND_STMT TO  " ); END;"
50291>>>    SQL_PREPARE_STMT
50333>>> End_Procedure
50334>>>
50334>>>//Last Revised: 2005-06-29 By: Marcelo
50334>>> Procedure MertechInc_SQL_SET_MYFUNCTION_NAME Desktop String strProcName Integer iNumparp
50336>>>     Local Integer liPos#
50336>>>
50336>>>    MOVE MySQLFlex TO _DRIVERNAME#
50337>>>
50337>>>    SQL_SET_STMT TO "SELECT "
50377>>>    SQL_APPEND_STMT TO strProcName
50417>>>    SQL_APPEND_STMT TO "("
50457>>>    For liPos# from 1 to 
50463>>>>
50463>>>        DO_PASS_ARGUMENTS liPos#
50559>>>    Loop
50560>>>>
50560>>>    SQL_APPEND_STMT TO ")"
50600>>>
50600>>>    SQL_PREPARE_STMT
50642>>> End_Procedure
50643>>>
50643>>>//Last Revised: 2005-06-29 By: Marcelo
50643>>> Procedure MertechInc_SQL_SET_ORAFUNCTION_NAME Desktop String strProcName Integer iNumpar
50645>>>    Local Integer liPos# liLLong#
50645>>>    Local String lsArg2# lsBlank#
50645>>>
50645>>>        SQL_SET_STMT TO "BEGIN "
50685>>>    SQL_APPEND_STMT TO ":PAR_RET := "
50725>>>    SQL_APPEND_STMT TO strProcName
50765>>>    SQL_APPEND_STMT TO "( "
50805>>>    For liPos# From 1 TO iNumpar
50811>>>>
50811>>>        DO_PASS_ARGUMENTS liPos#
50907>>>    Loop
50908>>>>
50908>>>    SQL_APPEND_STMT TO  " ); END;"
50948>>>    SQL_PREPARE_STMT
50990>>>
50990>>>    MOVE IS_OUT TO liLLong#
50991>>>    move " " to lsBlank#
50992>>>    CALL_DRIVER 0 ORAFLEX FUNCTION CALLDRV_SET_PROC_ATTRIBUTE_TYPE CALLBACK 0 PASSING lsBlank# lsBlank# liLLong# RESULT _RET#
50997>>>
50997>>>    INCREMENT _NPAR#
50998>>>    MOVE ":PAR_RET" TO lsArg2#
50999>>>    CALL_DRIVER 0 _DRIVERNAME# FUNCTION 23 CALLBACK 0 PASSING _BLANK# lsArg2# 16384 RESULT _RET#
51004>>>End_Procedure
51005>>>
51005>>>//Last Revised: 2008-02-26 By: Marcelo
51005>>>Function SQL_AVAILABLE_SQL_SERVERS Desktop Returns Integer 
51007>>>    Local Integer liRet#
51007>>>    Local String lsBlank#
51007>>>
51007>>>    move " " to lsBlank#
51008>>>    CALL_DRIVER 0 SQLFLEX FUNCTION CALLDRV_ENUMERATE_SERVER CALLBACK 0 PASSING lsBlank# lsBlank# CALLDRV_ENUMERATE_SERVER_COUNT RESULT liRet#
51013>>>
51013>>>    function_return liRet#
51014>>>End_Function
51015>>>
51015>>>//Last Revised: 2008-06-26 By: Marcelo
51015>>>Function SQL_AVAILABLE_SQL_SERVER_NAME Desktop Integer item# Returns String 
51017>>>    Local Integer liRet#
51017>>>    Local String lsArg1# lsArg2# lsBlank#
51017>>>
51017>>>    MOVE (REPEAT(" ", 80)) TO lsArg1#
51018>>>    move item# to lsArg2#
51019>>>    CALL_DRIVER 0 SQLFLEX FUNCTION CALLDRV_ENUMERATE_SERVER CALLBACK 0 PASSING lsArg1# lsArg2# CALLDRV_ENUMERATE_SERVER_SERVER RESULT liRet#
51024>>>
51024>>>    Function_Return lsArg1#
51025>>>End_Function
51026>>>
51026>>>//Last Revised: 2008-02-26 By: Marcelo
51026>>>Procedure Set SQL_USE_ROWCOUNT_IN_TRANSACTIONS global String server# Integer value#
51028>>>    Local Integer liRet#
51028>>>    Local String lsArg1# lsArg2#
51028>>>
51028>>>    DO_DECLARE_BASIC_VARIABLES#
51029>>>    DO_GETFILENUMBER_DRIVERNAME# 0
51060>>>
51060>>>    move server# to lsArg1#
51061>>>    move value# to lsArg2#
51062>>>
51062>>>    CALL_DRIVER 0 _DRIVERNAME# FUNCTION CALLDRV_USE_ROWCOUNT_IN_TRANSACTIONS CALLBACK 0 PASSING lsArg1# lsArg2# CALLDRV_VALUE_SET RESULT liRet#
51067>>>    IF liRet# EQ -1 INDICATE ERR TRUE
51070>>>
51070>>>    DO_RESTORE_FILENUMBER#
51071>>>End_Procedure
51072>>>//#REPLACE UseRowCountInTransactions SQL_USE_ROWCOUNT_IN_TRANSACTIONS
51072>>>
51072>>>//Last Revised: 2008-02-26 By: Marcelo
51072>>>Function SQL_USE_ROWCOUNT_IN_TRANSACTIONS Global String serverName# Returns Integer
51074>>>    Local Integer liRet#
51074>>>    Local String lsBlank#
51074>>>    Local String lsArg1#
51074>>>
51074>>>    DO_DECLARE_BASIC_VARIABLES#
51075>>>    DO_GETFILENUMBER_DRIVERNAME# 0
51106>>>
51106>>>    move serverName# to lsArg1#
51107>>>    move " " to lsBlank#
51108>>>    CALL_DRIVER 0 _DRIVERNAME# FUNCTION CALLDRV_USE_ROWCOUNT_IN_TRANSACTIONS CALLBACK 0 PASSING lsArg1# lsBlank# CALLDRV_VALUE_GET RESULT liRet#
51113>>>
51113>>>    DO_RESTORE_FILENUMBER#
51114>>>
51114>>>    function_return liRet#
51115>>>End_Function
51116>>>
51116>>>//Last Revised: 2008-02-26 By: Marcelo
51116>>>Procedure Set SQL_USE_DATAFLEX_DATEFORMAT global Integer value#
51118>>>    DO_DECLARE_BASIC_VARIABLES#
51119>>>    DO_GETFILENUMBER_DRIVERNAME# 0
51150>>>
51150>>>    If _DRIVERNAME# eq SQLFlex Begin
51152>>>        move value# to _ARG1#
51153>>>        CALL_DRIVER 0 _DRIVERNAME# FUNCTION CALLDRV_USE_DFLEX_DATE_FORMAT CALLBACK 0 PASSING _ARG1# _BLANK# CALLDRV_VALUE_SET RESULT _RET#
51158>>>        IF _RET# EQ -1 INDICATE ERR TRUE
51161>>>    End
51161>>>>
51161>>>
51161>>>    DO_RESTORE_FILENUMBER#
51162>>>End_Procedure
51163>>>//#REPLACE SqlUseDataflexDateFormat SQL_USE_DATAFLEX_DATEFORMAT
51163>>>
51163>>>//Last Revised: 2008-02-26 By: Marcelo
51163>>>Function SQL_USE_DATAFLEX_DATEFORMAT Global Returns Integer
51165>>>    DO_DECLARE_BASIC_VARIABLES#
51166>>>    DO_GETFILENUMBER_DRIVERNAME# 0
51197>>>
51197>>>    If _DRIVERNAME# eq SQLFlex Begin
51199>>>        CALL_DRIVER 0 _DRIVERNAME# FUNCTION CALLDRV_USE_DFLEX_DATE_FORMAT CALLBACK 0 PASSING _BLANK# _BLANK# CALLDRV_VALUE_GET RESULT _RET#
51204>>>    End
51204>>>>
51204>>>    Else Move DFFALSE to _RET#
51206>>>
51206>>>    DO_RESTORE_FILENUMBER#
51207>>>
51207>>>    function_return _RET#
51208>>>End_Function
51209>>>
51209>>>//Last Revised: 2008-08-27 By: Marcelo
51209>>>Procedure Set SQL_FORCE_FIELDS_NOT_NULL global Integer value#
51211>>>    DO_DECLARE_BASIC_VARIABLES#
51212>>>    DO_GETFILENUMBER_DRIVERNAME# 0
51243>>>
51243>>>    If (_DRIVERNAME# eq ORAFlex OR _DRIVERNAME# eq MySQLFlex) Begin
51245>>>        move value# to _ARG1#
51246>>>        CALL_DRIVER 0 _DRIVERNAME# FUNCTION CALLDRV_FORCE_FIELDS_NOT_NULL CALLBACK 0 PASSING _ARG1# _BLANK# CALLDRV_VALUE_SET RESULT _RET#
51251>>>        IF _RET# EQ -1 INDICATE ERR TRUE
51254>>>    End
51254>>>>
51254>>>
51254>>>    DO_RESTORE_FILENUMBER#
51255>>>End_Procedure
51256>>>
51256>>>//Last Revised: 2008-08-27 By: Marcelo
51256>>>Function SQL_FORCE_FIELDS_NOT_NULL Global Returns Integer
51258>>>    DO_DECLARE_BASIC_VARIABLES#
51259>>>    DO_GETFILENUMBER_DRIVERNAME# 0
51290>>>
51290>>>    If (_DRIVERNAME# eq ORAFlex OR _DRIVERNAME# eq MySQLFlex) Begin
51292>>>        CALL_DRIVER 0 _DRIVERNAME# FUNCTION CALLDRV_FORCE_FIELDS_NOT_NULL CALLBACK 0 PASSING _BLANK# _BLANK# CALLDRV_VALUE_GET RESULT _RET#
51297>>>    End
51297>>>>
51297>>>    Else Move DFFALSE to _RET#
51299>>>
51299>>>    DO_RESTORE_FILENUMBER#
51300>>>
51300>>>    function_return _RET#
51301>>>End_Function
51302>>>
51302>>>//Last Revised: 2008-08-27 By: Marcelo
51302>>>
51302>>>//Last Revised: 2008-08-27 By: Marcelo
51302>>>
51302>>>//Last Revised: 2008-08-22 By: Marcelo
51302>>>
51302>>>//Last Revised: 2008-08-22 By: Marcelo
51302>//Login 'PIS2003DEV'  'SA' '123' 'SQL_DRV'
51302>//Login 'PISDEV'      'SA' '123' 'SQL_DRV'
51302>
51302>Open MICLIENT
Including file: MICLIENT.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MICLIENT.FD)
51304>Open MICN
Including file: MICN.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MICN.FD)
51306>Open MICONSTR
Including file: MICONSTR.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MICONSTR.FD)
51308>Open MISalesm
Including file: MISALESM.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MISALESM.FD)
51310>Open MIMHXAN
Including file: MIMHXAN.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MIMHXAN.FD)
51312>Open MIPRESP
Including file: MIPRESP.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MIPRESP.FD)
51314>Open MICodtyp
Including file: MICODTYP.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MICODTYP.FD)
51316>Open MIcodema
Including file: MICODEMA.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MICODEMA.FD)
51318>Open MIORDH
Including file: MIORDH.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MIORDH.FD)
51320>Open MIORDD
Including file: MIORDD.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MIORDD.FD)
51322>Open MIAREAS
Including file: MIAREAS.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MIAREAS.FD)
51324>Open MICITIES
Including file: MICITIES.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MICITIES.FD)
51326>Open MITOWNS
Including file: MITOWNS.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MITOWNS.FD)
51328>Open MICOUNTR
Including file: MICountr.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MICountr.FD)
51330>
51330>
51330>Object oMain is a Panel
51332>
51332>    Set Label to "ДеШЪрЪу Шзж SMSMI йЬ ШиоЬхж"
51333>
51333>    Set Location to 4 3
51334>    Set Size to 300 450
51335>
51335>    Object oCommandBarSystem is a cCJCommandBarSystem
51337>        Set pbTimerUpdate to True
51338>//
51338>        Procedure OnCreateCommandBars
51341>            Handle hoOptions
51341>            Get OptionsObject to hoOptions
51342>            Forward Send OnCreateCommandBars
51344>        End_Procedure
51345>//
51345>        Object oMenuBar is a cCJMenuBar
51347>
51347>            Object oMainMenu1 is a cCJMenuItem
51349>                Set psCaption to "ПРОВРАЛЛАТА ДНАВЧВЖС СТОИХДИЧМ" 
51350>                Set psTooltip to "ПРОВРАЛЛАТА ДНАВЧВЖС СТОИХДИЧМ"
51351>                Set peControlType to xtpControlPopup
51352>
51352>                Object oExportDataClientsCNToFile is a cCJMenuItem
51354>                    Set psCaption to "ДеШЪрЪу СлжаоЬхрд ПДКАТЧМ / ДРВЧМ / КОИПЧМ йЬ АиоЬхж"
51355>                    Set psTooltip to "ДеШЪрЪу СлжаоЬхрд йЬ АиоЬхж"
51356>
51356>                    Procedure OnExecute Variant vCommandBarControl
51359>                        Handle hoClient
51359>                        Get Client_Id to hoClient
51360>                        Send Activate_ExportFromSMSMI2 of hoClient
51361>                    End_Procedure
51362>                End_Object
51363>
51363>                Object oExportDataClientsCNToFile is a cCJMenuItem
51365>                    Set psCaption to "ДеШЪрЪу СлжаоЬхрд ГДОП йЬ АиоЬхж"
51366>                    Set psTooltip to "ДеШЪрЪу СлжаоЬхрд ГДОП йЬ АиоЬхж"
51367> 
51367>                    Procedure OnExecute Variant vCommandBarControl
51370>                        Handle hoClient
51370>                        Get Client_Id to hoClient
51371>                        Send Activate_ExportDEOPNew3 of hoClient
51372>                    End_Procedure
51373>                End_Object
51374>
51374>            End_Object // Object oMainMenu1 is a cCJMenuItem
51375>
51375>        End_Object // Object oMenuBar is a cCJMenuBar
51376>  
51376>    End_Object // // Object oCommandBarSystem is a cCJCommandBarSystem
51377>
51377>    Object oClientArea is a ClientArea
51379>        Use StdAbout.pkg
Including file: STDABOUT.PKG    (C:\VDF14.1.SUB\SUBCLASSES\AppSrc\STDABOUT.PKG)
51379>>>//************************************************************************
51379>>>// Confidential Trade Secret.
51379>>>// Copyright (c) 1997 Data Access Corporation, Miami Florida
51379>>>// as an unpublished work.  All rights reserved.
51379>>>// DataFlex is a registered trademark of Data Access Corporation.
51379>>>//
51379>>>//************************************************************************
51379>>>//************************************************************************
51379>>>//
51379>>>// $File name  : StdAbout.pkg
51379>>>// $File title : Standard about object package for VDF
51379>>>// Notice      :
51379>>>// $Author(s)  : John Tuohy
51379>>>//
51379>>>// $Rev History
51379>>>//
51379>>>// JT 06/27/97   File created
51379>>>//************************************************************************
51379>>>
51379>>>// This provides a quick and simple way to create an about package for a program.
51379>>>// You need to create a message inside you client area called Activate_About.
51379>>>// Within this message you should send the message DoAbout passing needed
51379>>>// string information.
51379>>>//
51379>>>//       Procedure Activate_About
51379>>>//           Send DoAbout sTitle sVersion sCopyright sAuthor sBitmap
51379>>>//       End_Procedure
51379>>>//    where: sTitle =     Name of application. If none provided, uses caption
51379>>>//                        bar title
51379>>>//           sVersion   = Version Line. If none provided, will be blank
51379>>>//           sCopyRight = Copyright Line. If none provided, will be blank
51379>>>//           sAuthor    = Author name, blank if none provided
51379>>>//           sBitMap    = Bitmap logo. If none provided, standard VDF bitmap
51379>>>//                        is used.
51379>>>// It is expected that you will place this in your own object package. For
51379>>>// example an order about package may look like this:
51379>>>//
51379>>>//   // OrderAbout.pkg
51379>>>//   Use StdAbout.pkg
51379>>>//   Procedure Activate_About
51379>>>//      Local String sTitle sCopyright sVersion sAuthor
51379>>>//      Move "My Order Entry System" to sTitle
51379>>>//      Move "Version 2.1" to sVersion
51379>>>//      Move "Copyright 1997, Super Software Inc." to sCopyright
51379>>>//      Move "John Smith"  to sAuthor
51379>>>//      Send DoAbout sTitle sVersion sCopyright sAuthor ""
51379>>>//   end_procedure
51379>>>//   // end of file.
51379>>>
51379>>>
51379>>>
51379>>>//Use DfAbout.Sub
51379>>>Use DfAbout.pkg
Including file: DFABOUT.PKG    (C:\VDF14.1.SUB\SUBCLASSES\AppSrc\DFABOUT.PKG)
51379>>>>>//************************************************************************
51379>>>>>// Confidential Trade Secret.
51379>>>>>// Copyright (c) 1997 Data Access Corporation, Miami Florida
51379>>>>>// as an unpublished work.  All rights reserved.
51379>>>>>// DataFlex is a registered trademark of Data Access Corporation.
51379>>>>>//
51379>>>>>//************************************************************************
51379>>>>>//************************************************************************
51379>>>>>//
51379>>>>>// $File name  : DfAbout.pkg
51379>>>>>// $File title : About class support
51379>>>>>// Notice      :
51379>>>>>// $Author(s)  : Vincent Oorsprong, Ken Ross
51379>>>>>//
51379>>>>>// $Rev History
51379>>>>>//
51379>>>>>// JJT 10/23/2001 removed all ghoworkspace support. Uses app object or nothing
51379>>>>>// SWB 07/19/01   Added support of the Application object in preference to
51379>>>>>//                the global Workspace object, if it is present
51379>>>>>// JJT 11/05/98   Added version information
51379>>>>>// VOO 29/10/98   Replaced the GetFreeSystemResources for the Win32 variant
51379>>>>>// JJT 7/31/97    Registered Enumerate Workspace so dfabout can exist without
51379>>>>>//                workspace package.
51379>>>>>// JJT 6/27/97    Turned the sysinfo objects into classes so the AboutDialog
51379>>>>>//                class can create this object.
51379>>>>>//                Cleaned up the interface (used correct classes and messages)
51379>>>>>//                Added workspace reporting support to sys-info.
51379>>>>>//                Turned off wrapping in the sys-info editor.
51379>>>>>// KR  ??/??/96   File created
51379>>>>>//************************************************************************
51379>>>>>Use LanguageText.pkg
51379>>>>>Use windows.pkg
51379>>>>>Use DFbitmap.pkg
51379>>>>>Use GlobalFunctionsProcedures.pkg
51379>>>>>
51379>>>>>    External_Function32 WNetGetUser "WNetGetUserA" MPR.DLL ;        Pointer lpName Pointer lpUser_Name Pointer lpLength Returns DWord
51380>>>>>
51380>>>>>//#IFDEF ghoApplication
51380>>>>>//#ELSE
51380>>>>>//    Global_Variable Integer ghoApplication
51380>>>>>//    Move 0 To ghoApplication
51380>>>>>//#ENDIF
51380>>>>>
51380>>>>>Register_Function phoWorkspace Returns Handle
51380>>>>>Register_Function psHelpFile Returns String
51380>>>>>Register_Function pbEnterKeyAsTabKey Returns Boolean
51380>>>>>
51380>>>>>//****************************************************************************
51380>>>>>// $Module type: FUNCTION
51380>>>>>// $Module name: Network_User_Name
51380>>>>>// $Author     : AK/VOO/KCR
51380>>>>>// Created     : 24-09-96 @ 19:17
51380>>>>>//
51380>>>>>// Description
51380>>>>>//    This function reads the current username of windows and returns that
51380>>>>>//    name or an text unknown user
51380>>>>>//
51380>>>>>// $Rev History
51380>>>>>//    24-09-96  Module header created
51380>>>>>//****************************************************************************
51380>>>>>//Function Network_User_Name Returns String
51380>>>>>//    String sName sLength
51380>>>>>//    Pointer lpName_Addr lpLength_Addr
51380>>>>>//    Integer iRetval
51380>>>>>//
51380>>>>>//    Movestr (Repeat (Character (0), 255)) To sName
51380>>>>>//    GetAddress Of sName To lpName_Addr
51380>>>>>//    Movestr (DwordToBytes (255)) To sLength
51380>>>>>//    GetAddress Of sLength To lpLength_Addr
51380>>>>>//
51380>>>>>//    Moveint (WNetGetUser (0, lpName_Addr, lpLength_Addr)) To iRetval
51380>>>>>//
51380>>>>>//    If iRetval Eq 0 Function_Return (CString (sName))
51380>>>>>//    Else Function_Return "АЪдрйлжк ХиуйлЮк"
51380>>>>>//End_Function // Network_User_Name
51380>>>>>
51380>>>>>Type MEMORYSTATUS
51380>>>>>   Field MEMORYSTATUS.dwLength         As Dword // sizeof(MEMORYSTATUS)
51380>>>>>   Field MEMORYSTATUS.dwMemoryLoad     As Dword // percent of memory in use
51380>>>>>   Field MEMORYSTATUS.dwTotalPhys      As Dword // bytes of physical memory
51380>>>>>   Field MEMORYSTATUS.dwAvailPhys      As Dword // free physical memory bytes
51380>>>>>   Field MEMORYSTATUS.dwTotalPageFile  As Dword // bytes of paging file
51380>>>>>   Field MEMORYSTATUS.dwAvailPageFile  As Dword // free bytes of paging file
51380>>>>>   Field MEMORYSTATUS.dwTotalVirtual   As Dword // user bytes of address space
51380>>>>>   Field MEMORYSTATUS.dwAvailVirtual   As Dword // free user bytes
51380>>>>>End_Type // MEMORYSTATUS
51380>>>>>
51380>>>>>External_Function GlobalMemoryStatus "GlobalMemoryStatus" Kernel32.Dll Pointer lpsMemoryStatus Returns Integer
51381>>>>>
51381>>>>>Class SysinfoDisplay Is An Edit
51382>>>>>    Procedure Construct_Object
51384>>>>>        Forward Send construct_object
51386>>>>>
51386>>>>>        Set Location To 6 6
51387>>>>>        Set Size To 110 255
51388>>>>>        Set Read_Only_State To True
51389>>>>>        Set wrap_state To False
51390>>>>>    End_Procedure
51391>>>>>
51391>>>>>    //****************************************************************************
51391>>>>>    // $Module type: PROCEDURE
51391>>>>>    // $Module name: Add_Line
51391>>>>>    // $Author     : VOO
51391>>>>>    // Created     : 06-10-96 @ 15:23
51391>>>>>    //
51391>>>>>    // Description
51391>>>>>    //    This method will add a line to this edit object, it should go simpler
51391>>>>>    //    but it seems to be done this way.
51391>>>>>    //
51391>>>>>    // $Rev History
51391>>>>>    //    06-10-96  Module header created
51391>>>>>    //****************************************************************************
51391>>>>>    Procedure Add_Line String sVal
51393>>>>>        Integer iLine
51393>>>>>
51393>>>>>        Moveint (Line_Count(Self)) To iLine
51394>>>>>>
51394>>>>>        If (iLine = 1 And Changed_State(Self) = False) Moveint 0 To iLine
51397>>>>>        Set Value Item iLine To sVal
51398>>>>>    End_Procedure // Add_Line
51399>>>>>
51399>>>>>    //****************************************************************************
51399>>>>>    // $Module type: PROCEDURE
51399>>>>>    // $Module name: Show_Current_Directory
51399>>>>>    // $Author     : VOO
51399>>>>>    // Created     : 06-10-96 @ 15:24
51399>>>>>    //
51399>>>>>    // Description
51399>>>>>    //    This method will show the name of the current directory in the system
51399>>>>>    //    information box
51399>>>>>    //
51399>>>>>    // $Rev History
51399>>>>>    //    06-10-96  Module header created
51399>>>>>    //****************************************************************************
51399>>>>>    Procedure Show_Current_Directory
51401>>>>>        String sDir
51401>>>>>
51401>>>>>        Get_Current_Directory To sDir
51402>>>>>        Send Add_Line (SFormat(C_$CurrentDirectory, sDir))
51403>>>>>    End_Procedure // Show_Current_Directory
51404>>>>>
51404>>>>>    Procedure Show_Windows_Directory
51406>>>>>        String sWindir
51406>>>>>
51406>>>>>        Get_Windows_Directory To sWindir
51407>>>>>        Send Add_Line (SFormat(C_$WindowsDirectory, sWindir))
51408>>>>>    End_Procedure // Show_Windows_Directory
51409>>>>>
51409>>>>>    Procedure Show_Current_User
51411>>>>>        //Send Add_Line (SFormat(C_$NetworkUserName, Network_User_Name(Self)))
51411>>>>>    End_Procedure // Show_Current_User
51412>>>>>
51412>>>>>    Procedure Show_Number_Format
51414>>>>>        Integer iFormat
51414>>>>>
51414>>>>>        Get_Attribute Df_Thousands_Separator To iFormat
51417>>>>>        Send Add_Line (SFormat(C_$ThousandsSeparator, Character(iFormat), iFormat))
51418>>>>>        Get_Number_Format To iFormat
51419>>>>>        Send Add_Line (SFormat(C_$DecimalSeparator, If (iFormat = 0, ".", ",")))
51420>>>>>    End_Procedure // Show_Number_Format
51421>>>>>
51421>>>>>    Procedure Show_Filelist_Name
51423>>>>>        String sFilename
51423>>>>>
51423>>>>>        Get_Attribute Df_Filelist_Name To sFilename
51426>>>>>        Send Add_Line (SFormat(C_$CurrentFilelist, sFilename))
51427>>>>>    End_Procedure // Show_Filelist_Name
51428>>>>>
51428>>>>>    Procedure Show_Lock_Delay
51430>>>>>        Integer iLockdelay
51430>>>>>
51430>>>>>        Get_Attribute Df_Lock_Delay To iLockdelay
51433>>>>>        Send Add_Line (SFormat(C_$DatabaseLockingDelay, iLockDelay))
51434>>>>>    End_Procedure // Show_Lock_Delay
51435>>>>>
51435>>>>>    Procedure Show_Lock_Timeout
51437>>>>>        Integer iLockTimeout
51437>>>>>
51437>>>>>        Get_Attribute Df_Lock_Timeout To iLockTimeout
51440>>>>>        Send Add_Line (SFormat(C_$DatabaseLockingTimeout, iLockTimeOut))
51441>>>>>    End_Procedure // Show_Lock_Timeout
51442>>>>>
51442>>>>>    Procedure Show_Screen_Size
51444>>>>>        Integer iYscreensize iXscreensize
51444>>>>>
51444>>>>>        Moveint (GetSystemMetrics (SM_CXSCREEN)) To iXscreensize
51445>>>>>>
51445>>>>>        Moveint (GetSystemMetrics (SM_CYSCREEN)) To iYscreensize
51446>>>>>>
51446>>>>>
51446>>>>>        Send Add_Line (SFormat(C_$VideoResolution, iXscreensize, iYscreensize))
51447>>>>>    End_Procedure // Show_Screen_Size
51448>>>>>
51448>>>>>    Procedure Show_Page_Size
51450>>>>>        Send Add_Line (SFormat(C_$PageEndFormFeed, Pageend, Pagefeed))
51451>>>>>    End_Procedure
51452>>>>>
51452>>>>>    Procedure Show_Date
51454>>>>>        Date dToday
51454>>>>>
51454>>>>>        Sysdate4 dToday
51455>>>>>        Send Add_Line (SFormat(C_$CurrentSystemDate, String(dToday)))
51456>>>>>    End_Procedure // Show_Date
51457>>>>>
51457>>>>>    Procedure Show_Date_Format
51459>>>>>        Integer iDateFormat
51459>>>>>        String sDateFormat
51459>>>>>
51459>>>>>        Get_Attribute Df_Date_Format To iDateFormat
51462>>>>>        If iDateFormat Eq DF_DATE_USA ;            Movestr C_$USA To sDateFormat
51465>>>>>        Else If iDateformat Eq DF_DATE_EUROPEAN ;            Movestr C_$European To sDateFormat
51469>>>>>        Else If iDateformat Eq DF_DATE_MILITARY ;            Movestr C_$Military To sDateFormat
51473>>>>>        Else ;            Movestr C_$UnknownDateType To sDateFormat
51475>>>>>        Send Add_Line (SFormat(C_$DateFormat, sDateformat))
51476>>>>>    End_Procedure // Show_Date_Format
51477>>>>>
51477>>>>>    Procedure Show_Memavail
51479>>>>>        Integer iMem
51479>>>>>
51479>>>>>        Memory iMem
51480>>>>>>
51480>>>>>        Send Add_Line (SFormat(C_$AvailableMemory, iMem))
51481>>>>>    End_Procedure // Show_Memavail
51482>>>>>
51482>>>>>    Procedure Show_Systemresources
51484>>>>>        String sMemoryStatus
51484>>>>>        Pointer lpsMemoryStatus
51484>>>>>        Integer iVoid
51484>>>>>        Dword dwMemoryLoad dwTotalPhys dwAvailPhys dwTotalPageFile dwAvailPageFile dwTotalVirtual dwAvailVirtual
51484>>>>>
51484>>>>>        ZeroType MEMORYSTATUS To sMemoryStatus
51485>>>>>        GetAddress Of sMemoryStatus To lpsMemoryStatus
51486>>>>>
51486>>>>>        Moveint (GlobalMemoryStatus (lpsMemoryStatus)) To iVoid
51487>>>>>>
51487>>>>>
51487>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwMemoryLoad    To dwMemoryLoad
51488>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwTotalPhys     To dwTotalPhys
51489>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwAvailPhys     To dwAvailPhys
51490>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwTotalPageFile To dwTotalPageFile
51491>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwAvailPageFile To dwAvailPageFile
51492>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwTotalVirtual  To dwTotalVirtual
51493>>>>>        GetBuff From sMemoryStatus At MEMORYSTATUS.dwAvailVirtual  To dwAvailVirtual
51494>>>>>
51494>>>>>        Send Add_Line (SFormat(C_$MemoryUtilization, dwMemoryLoad))
51495>>>>>        Send Add_Line (SFormat(C_$AvailablePhysicalMemory, dwAvailPhys / dwTotalPhys * 100.0))
51496>>>>>        Send Add_Line (SFormat(C_$AvailablePagefileSpace, dwAvailPageFile / dwTotalPageFile * 100.0))
51497>>>>>        Send Add_Line (SFormat(C_$AvailableVirtualMemory, dwAvailVirtual / dwTotalVirtual * 100.0))
51498>>>>>    End_Procedure // Show_Systemresources
51499>>>>>
51499>>>>>    Procedure Show_Registration
51501>>>>>        String sRegName
51501>>>>>        Integer iSN
51501>>>>>        Registration sRegName iSN
51502>>>>>>
51502>>>>>
51502>>>>>        Send Add_Line (SFormat(C_$Serial, iSN))
51503>>>>>        Send Add_Line (SFormat(C_$RegName, sRegName))
51504>>>>>
51504>>>>>    End_Procedure // Show_Current_Directory
51505>>>>>
51505>>>>>
51505>>>>>
51505>>>>>    //****************************************************************************
51505>>>>>    // If workspaces are used, we will send the message EnumerateWorkspaceData
51505>>>>>    // to the workspace object passing the an object and message to send back
51505>>>>>    // to this object. It is expected that the workspace object will send this
51505>>>>>    // message for every line of information it wants displayed (passing the
51505>>>>>    // information to be displayed
51505>>>>>    //****************************************************************************
51505>>>>>    Register_Procedure EnumerateWorkspaceData Integer hObjId Integer hmMessId
51505>>>>>
51505>>>>>    Procedure Show_ServicePack
51507>>>>>        String sVersion
51507>>>>>        Get_Profile_String "" "CurrentVersionDescription" To sVersion
51510>>>>>        If (sVersion <> "") Begin
51512>>>>>           Send Add_Line sVersion
51513>>>>>           Send Add_Line ""
51514>>>>>        End
51514>>>>>>
51514>>>>>    End_Procedure
51515>>>>>
51515>>>>>    Procedure Show_WorkspaceInformation
51517>>>>>        If ghoApplication ;            Send EnumerateWorkspaceData Of (phoWorkspace(ghoApplication)) Self Msg_add_Line
51520>>>>>
51520>>>>>        // removed for VDF8
51520>>>>>        //Else If ghoWorkspace ;
51520>>>>>        //    Send EnumerateWorkspaceData of ghoWorkspace self Msg_add_Line
51520>>>>>    End_Procedure
51521>>>>>
51521>>>>>    Function VersionStr Integer iVer Integer iRev Integer iBld Returns String
51523>>>>>        Function_Return (String(iVer)-"."-String(iRev)-"."-String(iBld))
51524>>>>>    End_Function
51525>>>>>
51525>>>>>    Procedure Show_Versions
51527>>>>>        Integer iVersion iRevision iBuild
51527>>>>>        Version_information iVersion iRevision iBuild
51529>>>>>        Send Add_Line (SFormat(C_$RuntimeVersion, VersionStr(Self,iVersion,iRevision,iBuild) ))
51530>>>>>        Send Add_Line (SFormat(C_$PackageVersion, VersionStr(Self,PKG_VERSION, PKG_REVISION, PKG_BUILD) ))
51531>>>>>        Send Add_Line (SFormat(C_$FMACVersion, VersionStr(Self,FMAC_VERSION, FMAC_REVISION, FMAC_BUILD) ))
51532>>>>>    End_Procedure
51533>>>>>
51533>>>>>
51533>>>>>    //***
51533>>>>>    //*** BW
51533>>>>>    //*** Procedure: Show_Drivers
51533>>>>>    //*** Purpose  : Show loaed database drivers
51533>>>>>    //***
51533>>>>>
51533>>>>>    Procedure Show_Drivers
51535>>>>>        String  Current_drvr
51535>>>>>        String  Loadeddrvrs
51535>>>>>        Integer Number_of_drvrs
51535>>>>>        Integer Count
51535>>>>>
51535>>>>>        Move "" To Loadeddrvrs
51536>>>>>        Get_Attribute DF_NUMBER_DRIVERS To Number_of_drvrs
51539>>>>>        For Count From 1 To Number_of_drvrs
51545>>>>>>
51545>>>>>            Get_Attribute DF_DRIVER_NAME Of Count To Current_drvr
51548>>>>>            If (Loadeddrvrs <> "") ;                Move (Append(Loadeddrvrs, ", ")) To Loadeddrvrs
51551>>>>>            Move (Append(Loadeddrvrs, Current_drvr)) To Loadeddrvrs
51552>>>>>        Loop
51553>>>>>>
51553>>>>>        Send Add_Line (SFormat(C_$DatabaseDriver, Loadeddrvrs))
51554>>>>>    End_Procedure // Show_Drivers
51555>>>>>
51555>>>>>    Procedure Show_HelpFile
51557>>>>>        Send Add_Line ""
51558>>>>>        Send Add_Line (SFormat(C_$HelpFile,  psHelpFile(ghoApplication)))
51559>>>>>    End_Procedure
51560>>>>>
51560>>>>>    Procedure Show_EnterAsTab
51562>>>>>        Send Add_Line (SFormat(C_$EnterKeyNavForward, If(pbEnterKeyAsTabKey(ghoApplication),"True","False")))
51563>>>>>    End_Procedure
51564>>>>>
51564>>>>>    //****************************************************************************
51564>>>>>    // $Module type: PROCEDURE
51564>>>>>    // $Module name: Add_Focus
51564>>>>>    // $Author     : VOO
51564>>>>>    // Created     : 24-09-96 @ 19:43
51564>>>>>    //
51564>>>>>    // Description
51564>>>>>    //    During activation we will remove the old information and add the newly
51564>>>>>    //    found systeminformation
51564>>>>>    //
51564>>>>>    // $Rev History
51564>>>>>    //    24-09-96  Module header created
51564>>>>>    //****************************************************************************
51564>>>>>    Procedure Add_Focus Integer hoRoot
51566>>>>>        Forward Send Add_Focus hoRoot
51568>>>>>
51568>>>>>        Send Delete_Data
51569>>>>>        Set Changed_State To False
51570>>>>>        Set Read_Only_State To True
51571>>>>>        Send Show_ServicePack
51572>>>>>        Send Show_WorkSpaceInformation // added to show WS info
51573>>>>>        If ghoApplication Begin
51575>>>>>            Send Show_HelpFile
51576>>>>>            Send Show_EnterAsTab
51577>>>>>        End
51577>>>>>>
51577>>>>>        Send Show_Drivers
51578>>>>>        Send Show_Current_User
51579>>>>>        Send Show_Windows_Directory
51580>>>>>        Send Show_Current_Directory
51581>>>>>        Send Show_Filelist_Name
51582>>>>>        Send Show_Versions
51583>>>>>        Send Show_Memavail
51584>>>>>        Send Show_Screen_Size
51585>>>>>        Send Show_Page_Size
51586>>>>>        Send Show_Number_Format
51587>>>>>        Send Show_Date_Format
51588>>>>>        Send Show_Lock_Delay
51589>>>>>        Send Show_Lock_Timeout
51590>>>>>        Send Show_Date
51591>>>>>        Send Show_Systemresources
51592>>>>>        //Send Show_Registration
51592>>>>>    End_Procedure // Show_All_Info
51593>>>>>
51593>>>>>End_Class // SysinfoDisplay
51594>>>>>
51594>>>>>
51594>>>>>//****************************************************************************
51594>>>>>// $Module type: OBJECT
51594>>>>>// $Module name: Sysinfo_Dialog
51594>>>>>// $Author     : VOO
51594>>>>>// Created     : 24-09-96 @ 18:47
51594>>>>>//
51594>>>>>// Description
51594>>>>>//    This object shows the systeminformation on the screen
51594>>>>>//
51594>>>>>// $Rev History
51594>>>>>//    24-09-96  Module header created
51594>>>>>//****************************************************************************
51594>>>>>Class SysInfoDialog Is A ModalPanel
51595>>>>>    Procedure Construct_Object
51597>>>>>        Forward Send construct_object
51599>>>>>
51599>>>>>        Set Caption_Bar To True
51600>>>>>        Set Sysmenu_Icon To True
51601>>>>>        Set Label To C_$SystemInformation
51602>>>>>        Set Size To 152 270
51603>>>>>        Set Locate_Mode To CENTER_ON_SCREEN
51604>>>>>        Set Minimize_Icon To False
51605>>>>>        Set Maximize_Icon To False
51606>>>>>        Set Border_Style To Border_Thick
51607>>>>>
51607>>>>>        Object Sysinfo_Display Is A SysInfoDisplay
51609>>>>>        End_Object
51610>>>>>
51610>>>>>        Object Close_Button Is A Button
51612>>>>>            Set Label To C_$Close
51613>>>>>            Set Location To 120 212
51614>>>>>            Set Message Item 0 To msg_Close_Panel
51615>>>>>            Set default_action_button To Self
51616>>>>>        End_Object // Close_Button
51617>>>>>
51617>>>>>        On_Key Kcancel       Send Close_Panel
51618>>>>>    End_Procedure
51619>>>>>
51619>>>>>    //****************************************************************************
51619>>>>>    // $Module type: PROCEDURE
51619>>>>>    // $Module name: OnResize
51619>>>>>    // $Author     : VO
51619>>>>>    // Created     : 05/16/00 @ 3:40
51619>>>>>    //
51619>>>>>    // Description
51619>>>>>    //      When the dialog is resized relocate the edit object and button
51619>>>>>    //
51619>>>>>    // $Rev History
51619>>>>>    //      05/16/00 VO Module header created
51619>>>>>    //****************************************************************************
51619>>>>>    Procedure OnResize
51621>>>>>        Integer iPanelGuiSize
51621>>>>>
51621>>>>>        Get GuiSize To iPanelGuiSize
51622>>>>>        Set GuiSize Of Sysinfo_Display To (Hi (iPanelGuiSize) - 70) (Low (iPanelGuiSize) - 25)
51623>>>>>        Set GuiLocation Of Close_Button To (Hi (iPanelGuiSize) - 50) (Low (iPanelGuiSize) - 90)
51624>>>>>
51624>>>>>        Send Adjust_Logicals
51625>>>>>    End_Procedure // OnResize
51626>>>>>End_Class // SysinfoDialog
51627>>>>>
51627>>>>>// Purpose:
51627>>>>>//
51627>>>>>// Ken Ross 12/17/96 5:16PM
51627>>>>>//
51627>>>>>Class AboutDialog Is A ModalPanel
51628>>>>>
51628>>>>>    Procedure construct_object
51630>>>>>        String sVdfRootDir
51630>>>>>        Forward Send construct_object
51632>>>>>        Set Label To C_$About
51633>>>>>        Set Size To 100 217
51634>>>>>        Set Locate_Mode To CENTER_ON_SCREEN
51635>>>>>
51635>>>>>        Object SysInfo_Dialog Is A SysInfoDialog
51637>>>>>        End_Object
51638>>>>>
51638>>>>>        Object oBox Is A Container3d
51640>>>>>            Set Border_Style To Border_StaticEdge
51641>>>>>            Set Size To 63 202
51642>>>>>            Set Location To 4 5
51643>>>>>
51643>>>>>            Object oAboutGraphic Is A BitmapContainer
51645>>>>>                Set Border_Style To Border_None
51646>>>>>                Set Bitmap_Style To Bitmap_Center
51647>>>>>                Set Size To 48 48
51648>>>>>                Set Location To 7 2
51649>>>>>            End_Object    // AboutGraphic
51650>>>>>
51650>>>>>            Object oProductName Is A TextBox
51652>>>>>                Set label To C_$ProductName
51653>>>>>                Set Size To 10 45
51654>>>>>                Set Location To 8 53
51655>>>>>            End_Object    // ProductName
51656>>>>>
51656>>>>>            Object oVersion Is A TextBox
51658>>>>>                Set label To C_$Version
51659>>>>>                Set Size To 10 25
51660>>>>>                Set Location To 21 53
51661>>>>>            End_Object    // Version
51662>>>>>
51662>>>>>            Object oCopyright Is A TextBox
51664>>>>>                Set label To C_$Copyright
51665>>>>>                Set Size To 10 31
51666>>>>>                Set Location To 34 53
51667>>>>>            End_Object    // Copyright
51668>>>>>
51668>>>>>            Object oAuthor Is A TextBox
51670>>>>>                Set label To C_$Author
51671>>>>>                Set Size To 10 22
51672>>>>>                Set Location To 46 53
51673>>>>>            End_Object    // Author
51674>>>>>
51674>>>>>        End_Object    // oBox
51675>>>>>
51675>>>>>        Object OK_bn Is A Button
51677>>>>>            On_Item C_$OK Send Close_Panel
51678>>>>>            Set Size To 14 50
51679>>>>>            Set Location To 71 157
51680>>>>>        End_Object    // OK_bn
51681>>>>>
51681>>>>>        Object SysInfo_bn Is A Button
51683>>>>>            On_Item C_$SystemInfo Send Show_Sysinfo
51684>>>>>            Set Size To 14 50
51685>>>>>            Set Location To 71 101
51686>>>>>        End_Object    // SysInfo_bn
51687>>>>>
51687>>>>>        On_Key Kcancel Send KeyAction Of Ok_bn
51688>>>>>
51688>>>>>//        Get_Profile_String "Defaults" "VdfRootDir" To sVdfRootDir
51688>>>>>//        Set logo to (sVdfRootDir +"\Bitmaps\DacAbout.bmp")  // square bitmaps of 42x42 work best
51688>>>>>        Set logo To "DacAbout.bmp"  // square bitmaps of 42x42 work best
51689>>>>>
51689>>>>>    End_Procedure
51690>>>>>
51690>>>>>    Procedure Set ProductName String sProductName
51692>>>>>        Set label Of oProductName To sProductName
51693>>>>>    End_Procedure
51694>>>>>
51694>>>>>    Procedure Set Version String sVersion
51696>>>>>        Set label Of oVersion To sVersion
51697>>>>>    End_Procedure
51698>>>>>
51698>>>>>    Procedure Set Copyright String sCopyright
51700>>>>>        Set label Of oCopyright To sCopyright
51701>>>>>    End_Procedure
51702>>>>>
51702>>>>>    Procedure Set Author String sAuthor
51704>>>>>        Set Label Of oAuthor To sAuthor
51705>>>>>    End_Procedure
51706>>>>>
51706>>>>>    Procedure Set Logo String sLogo
51708>>>>>        // square bitmaps of 42x42 work best
51708>>>>>        Set Bitmap Of oAboutGraphic To sLogo
51709>>>>>    End_Procedure
51710>>>>>
51710>>>>>    Procedure Show_Sysinfo
51712>>>>>        Send Popup_Modal Of Sysinfo_Dialog
51713>>>>>    End_Procedure // Show_Sysinfo
51714>>>>>
51714>>>>>    Procedure End_Construct_Object
51716>>>>>        Handle hoVersionInfo
51716>>>>>        Boolean bIncluded
51716>>>>>        Integer iMajor iMinor iRelease iBuild
51716>>>>>
51716>>>>>        If (Label(oVersion) = C_$VERSION) Begin
51718>>>>>            // set it to the version info of the program, if available
51718>>>>>            If (ghoApplication) Begin
51720>>>>>                Get phoVersionInfo Of ghoApplication To hoVersionInfo
51721>>>>>                Get pbIncluded Of hoVersionInfo To bIncluded
51722>>>>>                If bIncluded Begin
51724>>>>>                    Get piVersionMajor   Of hoVersionInfo To iMajor
51725>>>>>                    Get piVersionMinor   Of hoVersionInfo To iMinor
51726>>>>>                    Get piVersionRelease Of hoVersionInfo To iRelease
51727>>>>>                    Get piVersionBuild   Of hoVersionInfo To iBuild
51728>>>>>
51728>>>>>                    Set Version To (SFormat(C_$VERSION +": %1.%2.%3.%4", iMajor, iMinor, iRelease, iBuild))
51729>>>>>                End
51729>>>>>>
51729>>>>>            End
51729>>>>>>
51729>>>>>        End
51729>>>>>>
51729>>>>>        Forward Send End_Construct_Object
51731>>>>>    End_Procedure
51732>>>>>
51732>>>>>End_Class
51733>>>>>
51733>>>>>
51733>>>>>//Object About_Dialog is an AboutDialog
51733>>>>>//    set productname to "Visual DataFlex"
51733>>>>>//    set version to "version 4.0"
51733>>>>>//    set copyright to "Copyright 1997 Data Access Corporation"
51733>>>>>//    set author to ""
51733>>>>>//    set logo to "ablogo.bmp"  // square bitmaps of 42x42 work best
51733>>>>>//End_Object
51733>>>>>
51733>>>>>//Procedure Activate_About
51733>>>>>//   Send Popup_Modal of About_Dialog
51733>>>>>//End_Procedure
51733>>>
51733>>>
51733>>>
51733>>>
51733>>>// *************************************************************************
51733>>>//  Public message. This is the default message. It is expected that you will
51733>>>//   create your own message to override this
51733>>>// *************************************************************************
51733>>>
51733>>>Procedure Activate_About
51736>>>   Send DoAbout "" "" "" "" ""
51737>>>End_Procedure
51738>>>
51738>>>// *************************************************************************
51738>>>//  Public message. It is expected that you will send this message (most
51738>>>//  likely from Activate_About. This creates an about object, activates it
51738>>>//  and destroys it when done. It is not exepected that you will augment this.
51738>>>// *************************************************************************
51738>>>
51738>>>Procedure DoAbout String sTitle String sVersion String sCopyRight String sAuthor String sBitmap
51741>>>        Local Integer hoObj hoMain
51741>>>
51741>>>        // create object
51741>>>        Object About Is An AboutDialog
51743>>>            // if no title passed use the label of the main panel
51743>>>            // (if a main panel exists).
51743>>>            If sTitle     Eq '' Begin
51745>>>                Get Main_Window To hoMain
51746>>>                If hoMain Get Label Of hoMain To sTitle
51749>>>            End
51749>>>>
51749>>>            Set productname To sTitle
51750>>>            Set version     To sVersion
51751>>>            Set copyright   To sCopyRight
51752>>>            Set author      To sAuthor
51753>>>            If sBitmap    Ne '' ;               Set logo To sBitMap // square bitmaps of 42x42 work best
51756>>>            Move Current_Object To hoObj // object Id
51757>>>        End_Object
51758>>>        Send Popup To hoObj    // popup the about object
51759>>>        Send Request_Destroy_Object To hoObj // when done, it will be destroyed
51760>>>End_Procedure
51761>        //------
51761>        Use ExportFromSMSMI2.vw
Including file: ExportFromSMSMI2.vw    (L:\VDF14.1.Dev\TITAN_MIGRATE\AppSrc\ExportFromSMSMI2.vw)
51761>>>// L:\VDF14.1.Dev\TITAN_MIGRATE\AppSrc\ExportFromSMSMI2.vw
51761>>>// ExportFromSMSMI2
51761>>>//
51761>>>
51761>>>Use DFClient.pkg
51761>>>Use DFEntry.pkg
51761>>>
51761>>>Open MIClient
51763>>>Open MICN
51765>>>Open MICONSTR
51767>>>Open MISalesm
51769>>>Open MIMHXAN
51771>>>Open MIPRESP
51773>>>Open MICodtyp
51775>>>Open MIcodema
51777>>>Open MIORDH
51779>>>Open MIORDD
51781>>>Open MIAREAS
51783>>>Open MICities
51785>>>Open MITOWNS
51787>>>Open MICOUNTR 
51789>>>
51789>>>Open MINOMOS
Including file: MINOMOS.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MINOMOS.FD)
51791>>>Open MIDHMOS 
Including file: MIDHMOS.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MIDHMOS.FD)
51793>>>Open MIDRAST
Including file: MIDRAST.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\MIDRAST.FD)
51795>>>
51795>>>
51795>>>ACTIVATE_VIEW Activate_ExportFromSMSMI2 FOR ExportFromSMSMI2
51805>>>>
51805>>>
51805>>>Object ExportFromSMSMI2 is a dbView
51807>>>    Set Location to 4 9
51808>>>    Set Size to 122 411
51809>>>    Set Label to "ДеШЪрЪу ПЬвШлщд, УзЬчЯмдрд ПвЮиргщд, ыиЪрд, ЛЮоШдабщд, ДиЪжвсЩрд"
51810>>>    Set Border_Style to Border_Thick
51811>>>
51811>>>    Open rptmp
Including file: rptmp.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\rptmp.FD)
51813>>>
51813>>>    Procedure Activate_View Returns Integer
51816>>>        Integer rVal
51816>>>        Forward Get MSG_Activate_View to rVal
51818>>>    
51818>>>        Send IGNORE_ERROR to ERROR_INFO_OBJECT 4358
51819>>>        Make_Directory "C:\TitanMig"
51820>>>        Send TRAP_ERROR to ERROR_INFO_OBJECT 4358
51821>>>    
51821>>>        Open tmpPagia Mode DF_EXCLUSIVE
Including file: TMPPAGIA.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\TMPPAGIA.FD)
51823>>>        ZeroFile tmpPagia
51824>>>        Open tmpPagia Mode DF_SHARE
51826>>>    
51826>>>        Open tmplg Mode DF_EXCLUSIVE
Including file: Tmplg.FD    (L:\VDF14.1.Dev\TITAN_MIGRATE\DDSrc\Tmplg.FD)
51828>>>        ZeroFile tmplg
51829>>>        Open tmplg Mode DF_SHARE
51831>>>    
51831>>>    //    Open MINOMOS Mode DF_EXCLUSIVE
51831>>>    //    Open MIDHMOS Mode DF_EXCLUSIVE
51831>>>    //    Open MIDRAST Mode DF_EXCLUSIVE
51831>>>    //    Zerofile MINOMOS
51831>>>    //    Zerofile MIDHMOS
51831>>>    //    Zerofile MIDRAST
51831>>>    //    Open MINOMOS Mode DF_SHARE
51831>>>    //    Open MIDHMOS Mode DF_SHARE
51831>>>    //    Open MIDRAST Mode DF_SHARE
51831>>>    //    Send Fill_The_Files
51831>>>        Procedure_Return rVal
51832>>>    End_Procedure
51833>>>
51833>>>
51833>>>    Object frmFileName is a Form
51835>>>
51835>>>        //AB-StoreTopStart
51835>>>        //AB-StoreTopEnd
51835>>>
51835>>>        Set Size to 13 187
51836>>>        Set Location to 33 112
51837>>>        Set Label_Col_Offset to 2
51838>>>        Set Prompt_Button_Mode to pb_PromptOn
51839>>>        Set Form_TypeFace item 0 to "MS Sans Serif"
51840>>>        Set Value item 0 to "C:\TitanMig\MICLIENT_MICN_MIPRESP.csv"
51841>>>
51841>>>        //AB-StoreStart
51841>>>                                                                                                                                                                                                                                                                                                                        
51841>>>        Procedure Prompt
51844>>>            Boolean bSave
51844>>>            String sFileTitle sFileName
51844>>>            Get Show_Dialog of (SaveAsDialog1(Self)) to bSave
51845>>>            If (bSave) Begin
51847>>>                Get File_Title of (SaveAsDialog1(Self)) to sFileTitle
51848>>>                Get File_Name  of (SaveAsDialog1(Self)) to sFileName
51849>>>                Set Value of frmFileName item 0 to sFileName
51850>>>            End
51850>>>>
51850>>>        End_Procedure
51851>>>        
51851>>>        //AB-StoreEnd
51851>>>
51851>>>    End_Object    // frmFileName
51852>>>    
51852>>>    Object Button5 is a Button
51854>>>
51854>>>        //AB-StoreTopStart
51854>>>                
51854>>>        Property String psNotFoundClientDhmos Public ""
51856>>>        Property String psNotFoundClientNomos Public ""
51858>>>        Property String psNotFoundClientDrast Public ""
51860>>>        Property String psNotFoundClientTrPlh Public ""
51862>>>        
51862>>>        Property String psNotFoundErgoDhmos Public ""
51864>>>        Property String psNotFoundErgoNomos Public ""
51866>>>        Property String psNotFoundErgoDrast Public ""
51868>>>        Property String psNotFoundErgoTrPlh Public ""
51870>>>        
51870>>>        Property String psNotFoundPrespDhmos Public ""
51872>>>        Property String psNotFoundPrespNomos Public ""
51874>>>        Property String psNotFoundPrespDrast Public ""
51876>>>        Property String psNotFoundPrespTrPlh Public "" 
51878>>>        
51878>>>        Property String psNotFoundMhxanDhmos Public ""
51880>>>        Property String psNotFoundMhxanNomos Public ""
51882>>>        Property String psNotFoundMhxanDrast Public ""
51884>>>        Property String psNotFoundMhxanTrPlh Public ""
51886>>>        
51886>>>        Property String psNotFoundConstrDhmos Public ""
51888>>>        Property String psNotFoundConstrNomos Public ""
51890>>>        Property String psNotFoundConstrDrast Public ""
51892>>>        Property String psNotFoundConstrTrPlh Public ""
51894>>>        
51894>>>        Property String psNotFoundSalesDhmos Public ""
51896>>>        Property String psNotFoundSalesNomos Public ""
51898>>>        Property String psNotFoundSalesDrast Public ""
51900>>>        Property String psNotFoundSalesTrPlh Public ""
51902>>>        
51902>>>        
51902>>>        Function fsTropoiPlhromhsPelath String asOurCode Returns String
51905>>>            String sTheirCode
51905>>>        
51905>>>            If      (asOurCode="K000") Move "G000" to sTheirCode
51908>>>            Else If (asOurCode="K030") Move "G030" to sTheirCode
51912>>>            Else If (asOurCode="K060") Move "G060" to sTheirCode
51916>>>            Else If (asOurCode="K090") Move "G090" to sTheirCode
51920>>>            Else If (asOurCode="K120") Move "G120" to sTheirCode
51924>>>            Else If (asOurCode="K150") Move "G150" to sTheirCode
51928>>>            Else If (asOurCode="K180") Move "G180" to sTheirCode
51932>>>            Else If (asOurCode="K210") Move "G210" to sTheirCode
51936>>>            Else If (asOurCode="K240") Move "G240" to sTheirCode
51940>>>            Else If (asOurCode="K270") Move "G270" to sTheirCode
51944>>>            Else If (asOurCode="K300") Move "G300" to sTheirCode
51948>>>            Else If (asOurCode="K330") Move "G330" to sTheirCode
51952>>>            Else If (asOurCode="K360") Move "G360" to sTheirCode
51956>>>            Else Begin
51957>>>                Set psNotFoundClientTrPlh to (Trim("*** (AW+BN) "+asOurCode))
51958>>>                Move "ZZZZ" to sTheirCode
51959>>>            End
51959>>>>
51959>>>            Function_Return sTheirCode
51960>>>        End_Function
51961>>>        
51961>>>        
51961>>>        //AB-StoreTopEnd
51961>>>
51961>>>        Set Label to "ДНАВЧВЖ ГДГОЛДМЧМ"
51962>>>        Set Size to 20 391
51963>>>        Set Location to 51 10
51964>>>        Set Focus_Mode to Pointer_Only
51965>>>        Set Form_FontWeight item 0 to 600
51966>>>        Set Form_TypeFace item 0 to "MS Sans Serif"
51967>>>
51967>>>        //AB-StoreStart
51967>>>                
51967>>>        Procedure OnClick
51970>>>            String sFilename sLabel
51970>>>            Integer bIsCreated iFS
51970>>>            Integer iWhat iVal
51970>>>            Integer iCnt
51970>>>            Move 0 to iCnt
51971>>>
51971>>>            Get Label to sLabel
51972>>>            Get Value of frmFileName item 0 to sFilename
51973>>>            If (Trim(sFilename)="") Begin
51975>>>                Send Stop_Box "Тж цджгШ лжм ШиЬхжм ЬхдШа бЬдц" "СнсвгШ 1002"
51976>>>                Procedure_Return
51977>>>            End
51977>>>>
51977>>>            
51977>>>            //==================
51977>>>            // Yannis 16/10/2017
51977>>>            // Epeidh mporei na erthoun sthn enopoihmenh bash mono erga markarismena
51977>>>            // giati o pelaths exei hdh erthei alla anixthke neo ergo gia paradeigma,
51977>>>            // Den mporei h epexergasia na arxizei sto epipedo tou pelath opos htan 
51977>>>            // mexri tora giati tha xasoume ta nea erga.
51977>>>            // Saronoume loipon prokatabolika ta erga, kai an o pelaths den einai 
51977>>>            // markarismenos ton markaroume etsi oste na mhn allaxoume tipota stous 
51977>>>            // kodikes pou exagoun ta data gia ta arxeia kai ta excel.
51977>>>            File_Size MICN to iFS
51980>>>            String sMess
51980>>>        
51980>>>            Clear MICN
51981>>>            Find GE MICN.Recnum
51982>>>>
51982>>>            While (Found)
51986>>>                Add 1 to iCnt
51987>>>                Move ("ДвтЪождлШа жа ЬЪЪиШнтк... "+String(iCnt)+"/"+String(iFS)) to sMess
51988>>>                Set Label to sMess
51989>>>                If (MICN.EXPORTFLAG=1) Begin
51991>>>                    Clear MICLIENT
51992>>>                    Move MICN.CLIENT_ID to MIClient.CLIENT_ID
51993>>>                    Find Eq MICLIENT by Index.6
51994>>>>
51994>>>                    If ((Found) and (MIClient.EXPORTFLAG<>1)) Begin
51996>>>                        Reread MICLIENT
52000>>>                        Move 1 to MIClient.EXPORTFLAG
52001>>>                        SaveRecord MICLIENT
52002>>>                        Unlock
52003>>>>
52003>>>                    End
52003>>>>
52003>>>                End
52003>>>>
52003>>>                Find GT MICN.Recnum
52004>>>>
52004>>>            Loop
52005>>>>
52005>>>            
52005>>>            //==================
52005>>>            
52005>>>        
52005>>>            Direct_Output channel 9 sFilename
52007>>>        
52007>>>            String sFileName2
52007>>>            Move "C:\TitanMig\MIMhxan.csv" to sFileName2
52008>>>            Direct_Output channel 7 sFilename2
52010>>>        
52010>>>            String sFileName3
52010>>>            Move "C:\TitanMig\MIConstr.csv" to sFileName3
52011>>>            Direct_Output channel 8 sFilename3
52013>>>        
52013>>>            String sFileName4
52013>>>            Move "C:\TitanMig\MISalesm.csv" to sFileName4
52014>>>            Direct_Output channel 6 sFilename4
52016>>>        
52016>>>            Move 0 to iCnt
52017>>>            File_Size MIClient to iFS
52020>>>            Move "" to sMess
52021>>>        
52021>>>            Clear MIClient
52022>>>            Find GE MIClient.Recnum
52023>>>>
52023>>>            While (Found)
52027>>>                Add 1 to iCnt
52028>>>                Move ("ПЬвслЬк... "+String(iCnt)+"/"+String(iFS)) to sMess
52029>>>                Set Label to sMess  //(Trim(MIClient.Client_ID)+"  "+Trim(MIClient.Client_Name))
52030>>>                If (MIClient.EXPORTFLAG=1) Send OutputClient
52033>>>                Find GT MIClient.Recnum
52034>>>>
52034>>>            Loop
52035>>>>
52035>>>        
52035>>>            Close_Output channel 9
52037>>>            Close_Output channel 8
52039>>>            Close_Output channel 7
52041>>>            Close_Output channel 6
52043>>>            Set Label to sLabel
52044>>>            Send Info_Box "Process Finished, the Excel file is saved" "Information"
52045>>>        End_Procedure // OnClick
52046>>>        
52046>>>        
52046>>>        Procedure OutputClient
52049>>>            String  sClientID sDeli sPrespID
52049>>>            Integer iCheckAFM iRecnum
52049>>>        
52049>>>            Move MIClient.Recnum     to iRecnum
52050>>>            Move MIClient.Client_ID  to sClientID
52051>>>        
52051>>>            Move ","                to sDeli
52052>>>        
52052>>>            Set psNotFoundClientDhmos to ""
52053>>>            Set psNotFoundClientNomos to ""
52054>>>            Set psNotFoundClientDrast to ""
52055>>>            Set psNotFoundClientTrPlh to ""
52056>>>        
52056>>>            //---
52056>>>            Write   channel 9   '"'
52058>>>            Write   channel 9   'Y001'
52060>>>            Write   channel 9   '"'
52062>>>            Write   channel 9   sDeli // End of Excel Column B  ОгсЫШ КжЪШиаШйгжч (з.о. зЬвслЮк, Ship - to бвз)
52064>>>            Write   channel 9   '"'
52066>>>            Write   channel 9   (Trim(MIClient.Client_ID))
52068>>>            Write   channel 9   '"'
52070>>>            Write   channel 9   sDeli // End of Excel Column C  ПШвШацк бчиажк брЫабцк зЬвслЮ SAP
52072>>>            Write   channel 9   sDeli // End of Excel Column D  СмгзвЮищдЬлШа ЪаШ лжмк Ship - to
52074>>>            Write   channel 9   '"'
52076>>>            Write   channel 9   (Trim(MIClient.Presp_ID))
52078>>>            Write   channel 9   '"'
52080>>>            Write   channel 9   sDeli // End of Excel Column E  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52082>>>            Move (Trim(MIClient.Presp_ID)) to sPrespID
52083>>>            Write   channel 9   sDeli // End of Excel Column F  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52085>>>            Write   channel 9   sDeli // End of Excel Column G  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52087>>>            Write   channel 9   sDeli // End of Excel Column H  ОихЭЬлШа ж ЬиЪжвсЩжк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
52089>>>            Write   channel 9   sDeli // End of Excel Column I  ОихЭЬлШа ж гЮоШдабцк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
52091>>>            Write   channel 9   sDeli // End of Excel Column J  ОихЭЬлШа ж зрвЮлук & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж гЬлсзлрйЮк зрвЮлщд
52093>>>            Write   channel 9   '"'
52095>>>            Write   channel 9   'GR02'
52097>>>            Write   channel 9   '"'
52099>>>            Write   channel 9   sDeli // End of Excel Column K  ЙрЫабцк ДлШаихШк ДввсЫШк
52101>>>            Write   channel 9   '"'
52103>>>            Write   channel 9   'GR02'
52105>>>            Write   channel 9   '"'
52107>>>            Write   channel 9   sDeli // End of Excel Column L ОиЪШдайгцк ПрвуйЬрд ДввсЫШк
52109>>>            Write   channel 9   '"'
52111>>>            Write   channel 9   '03'
52113>>>            Write   channel 9   '"'
52115>>>            Write   channel 9   sDeli // End of Excel Column M ЙШдсва ГаШджгук
52117>>>            Write   channel 9   '"'
52119>>>            Write   channel 9   '04'
52121>>>            Write   channel 9   '"'
52123>>>            Write   channel 9   sDeli // End of Excel Column N ТгугШ (Segment)
52125>>>            String s1 sLianikh
52125>>>            If      (MIClient.Client_ptyppar='113')              Move "Z009" to s1
52128>>>            Else If (MIClient.Client_Name contains "Й/Н")        Move "Z006" to s1
52132>>>            Else If (MIClient.Client_Name contains "ГЖЛОСИО")    Move "Z008" to s1
52136>>>            Else                                                 Move "Z005" to s1
52138>>>            Move s1 to sLianikh
52139>>>            Write   channel 9   '"'
52141>>>            Write   channel 9   (Trim(s1))
52143>>>            Write   channel 9   '"'
52145>>>            Write   channel 9   sDeli // End of Excel Column O  ДлШаиабу джгабу ждлцлЮлШ
52147>>>            Write   channel 9   '"'
52149>>>            Write   channel 9   (Trim(Left(MIClient.Client_Name,35)))
52151>>>            Write   channel 9   '"'
52153>>>            Write   channel 9   sDeli // End of Excel Column P  юджгШ зЬвслЮ
52155>>>            Move "" to s1
52156>>>            If (Trim(Mid(MIClient.Client_Name,35,36))<>"") Move ('"'+Trim(Mid(MIClient.Client_Name,35,36))+'"') to s1
52159>>>            Write   channel 9   (Trim(s1))
52161>>>            Write   channel 9   sDeli // End of Excel Column Q  СмгзвЮиргШлабц зЬЫхж йЬ зЬихзлрйЮ зжм губжк лжм зЬЫхжм Name 1 ЫЬд ЬхдШа ЬзШибтк
52163>>>            Move "" to s1
52164>>>            If (Trim(Mid(MIClient.Client_Name,35,71))<>"") Move ('"'+Trim(Mid(MIClient.Client_Name,35,71))+'"') to s1
52167>>>            Write   channel 9   (Trim(s1))
52169>>>            Write   channel 9   sDeli // End of Excel Column R  ПвуиЮк ЬзрдмгхШ зЬвслЮ
52171>>>            Write   channel 9   sDeli // End of Excel Column S
52173>>>            Write   channel 9   sDeli // End of Excel Column T  СмдлжгхШ ждцгШлжк зЬвслЮ - оиЮйагжзжаЬхлШа ЪаШ ЪиуЪжиЮ ШдШЭулЮйЮ
52175>>>            Write   channel 9   sDeli // End of Excel Column U  СмдлжгхШ ждцгШлжк зЬвслЮ у лхлвжк ЬлШаихШк - оиЮйагжзжаЬхлШа ЪаШ ЪиуЪжиЮ ШдШЭулЮйЮ
52177>>>            Write   channel 9   '"'
52179>>>            Write   channel 9   (Trim(MIClient.Client_Address))
52181>>>            Write   channel 9   '"'
52183>>>            Write   channel 9   sDeli // End of Excel Column V  ОЫцк зЬвслЮ
52185>>>            Write   channel 9   '"'
52187>>>            Write   channel 9   (Trim(MIClient.Client_add_no))
52189>>>            Write   channel 9   '"'
52191>>>            Write   channel 9   sDeli // End of Excel Column W  АиаЯгцк
52193>>>            Write   channel 9   '"'
52195>>>            Write   channel 9   (Trim(MIClient.Client_Zipcode))
52197>>>            Write   channel 9   '"'
52199>>>            Write   channel 9   sDeli // End of Excel Column X  Т.Й.
52201>>>            Move "" to s1
52202>>>            Clear MIAreas
52203>>>            Move MIClient.Client_Area to MIAreas.Area_id
52204>>>            Find Eq MIAreas by Index.1
52205>>>>
52205>>>            Clear MIDHMOS
52206>>>            Move (Trim(MIAreas.Area_Descr)) to MIDHMOS.Dhmos
52207>>>            Find EQ MIDHMOS by Index.1
52208>>>>
52208>>>            If (Found)  Move (Trim(MIDHMOS.Dhmos))  to s1
52211>>>            Else Begin
52212>>>                Set psNotFoundClientDhmos to ("*** (Y) "+Trim(MIAreas.Area_Descr))
52213>>>                Move "ZZZZ"               to s1
52214>>>            End
52214>>>>
52214>>>            Write   channel 9   '"'
52216>>>            Write   channel 9   s1
52218>>>            Write   channel 9   '"'
52220>>>            Write   channel 9   sDeli // End of Excel Column Y  Гугжк
52222>>>            Move "GR" to s1
52223>>>            String sIsGreece
52223>>>            Move s1 to sIsGreece
52224>>>            Write   channel 9   '"'
52226>>>            Write   channel 9   (Trim(s1))
52228>>>            Write   channel 9   '"'
52230>>>            Write   channel 9   sDeli // End of Excel Column Z  ХщиШ
52232>>>            Move "" to s1
52233>>>            Clear MICities
52234>>>            Move MIClient.Client_City_ID to MICities.City_id
52235>>>            Find Eq MICities by Index.1
52236>>>>
52236>>>            Clear MINOMOS
52237>>>            Move (Trim(MICities.City_Descr)) to MINOMOS.DESCR
52238>>>            Find EQ MINOMOS by Index.2
52239>>>>
52239>>>            If (Found)  Move (Trim(MINOMOS.CODE)) to s1
52242>>>            Else Begin
52243>>>                Set psNotFoundClientNomos to ("*** (AA) "+Trim(MICities.City_Descr))
52244>>>                Move "ZZZZ"               to s1
52245>>>            End
52245>>>>
52245>>>            Write   channel 9   '"'
52247>>>            Write   channel 9   s1
52249>>>            Write   channel 9   '"'
52251>>>            Write   channel 9   sDeli // End of Excel Column AA Мжгцк
52253>>>            Write   channel 9   sDeli // End of Excel Column AB ГЮгжлабу ДдцлЮлШ
52255>>>            Write   channel 9   '"'
52257>>>            Write   channel 9   'EL'
52259>>>            Write   channel 9   '"'
52261>>>            Write   channel 9   sDeli // End of Excel Column AC ВвщййШ
52263>>>            Write   channel 9   '"'
52265>>>            Write   channel 9   (Trim(MIClient.Client_Phone))
52267>>>            Write   channel 9   '"'
52269>>>            Write   channel 9   sDeli // End of Excel Column AD ТЮвтнрдж зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд лЮвЬнщдрд йлж sheet Communication)
52271>>>            Write   channel 9   '"'
52273>>>            Write   channel 9   (Trim(MIClient.Client_Mobile))
52275>>>            Write   channel 9   '"'
52277>>>            Write   channel 9   sDeli // End of Excel Column AE "ЙадЮлц зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд бадЮлщд йлж sheet Communication)
52279>>>            Write   channel 9   '"'
52281>>>            Write   channel 9   (Trim(MIClient.Client_Fax))
52283>>>            Write   channel 9   '"'
52285>>>            Write   channel 9   sDeli // End of Excel Column AF Fax зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд fax йлж sheet Communication)
52287>>>            Write   channel 9   '"'
52289>>>            Write   channel 9   (Trim(MIClient.Client_email))
52291>>>            Write   channel 9   '"'
52293>>>            Write   channel 9   sDeli // End of Excel Column AG Email зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд e-mail йлж sheet Communication)
52295>>>            Write   channel 9   sDeli // End of Excel Column AH СмгзвЮищдЬлШа ж reference брЫабцк зижгЮЯЬмлу Ьсд ж зЬвслЮк ЬхдШа бШа зижгЮЯЬмлук
52297>>>        
52297>>>            Move "" to s1
52298>>>//            Clear Codemast
52298>>>//            Move "JOB"                  to Codemast.Type
52298>>>//            Move MIClient.Client_Job    to Codemast.Code
52298>>>//            Find Eq Codemast by Index.1
52298>>>//            Clear MIDRAST
52298>>>//            Move (Trim(Codemast.Description)) to MIDRAST.Descr
52298>>>//            Find Eq MIDRAST by Index.2
52298>>>//            If (Found) Move MIDRAST.Code to s1
52298>>>//            Else Begin
52298>>>//                Set psNotFoundClientDrast to ("*** (AI) "+Trim(Codemast.Description))
52298>>>                Move "ZZZZ" to s1
52299>>>//            End
52299>>>            Write   channel 9   '"'
52301>>>            Write   channel 9   s1
52303>>>            Write   channel 9   '"'
52305>>>            Write   channel 9   sDeli // End of Excel Column AI ГиШйлЮиацлЮлШ зЬвслЮ
52307>>>        
52307>>>            Write   channel 9   '"'
52309>>>            Write   channel 9   (Trim(MIClient.Client_AFM))
52311>>>            Write   channel 9   '"'
52313>>>            Write   channel 9   sDeli // End of Excel Column AJ "АФЛ УзжоиЬрлабц ЪаШ GR зЬвслЬк
52315>>>            Move ("EL"+Trim(MIClient.Client_AFM)) to s1
52316>>>            Write   channel 9   '"'
52318>>>            Write   channel 9   (Trim(s1))
52320>>>            Write   channel 9   '"'
52322>>>            Write   channel 9   sDeli // End of Excel Column AK EL+АФЛ УзжоиЬрлабц ЪаШ зЬвслЬк ДмирзШфбук ыдрйЮк
52324>>>            Write   channel 9   sDeli // End of Excel Column AL ГЮгжлабу ДдцлЮлШ
52326>>>            Write   channel 9   sDeli // End of Excel Column AM Sales Office
52328>>>            Write   channel 9   sDeli // End of Excel Column AN Sales Group
52330>>>            Write   channel 9   sDeli // End of Excel Column AO ДиЪжвсЩжк / ЛЮоШдабцк
52332>>>            Write   channel 9   '"'
52334>>>            Write   channel 9   'EUR'
52336>>>            Write   channel 9   '"'
52338>>>            Write   channel 9   sDeli // End of Excel Column AP МцгайгШ зщвЮйЮк
52340>>>            Write   channel 9   '"'
52342>>>            Write   channel 9   '1'
52344>>>            Write   channel 9   '"'
52346>>>            Write   channel 9   sDeli // End of Excel Column AQ ПижйЫажихЭЬа лЮд ЫаШЫабШйхШ лагжЫцлЮйЮк
52348>>>            Write   channel 9   '"'
52350>>>            Write   channel 9   '1'
52352>>>            Write   channel 9   '"'
52354>>>            Write   channel 9   sDeli // End of Excel Column AR ПижйЫажихЭЬа лЮд жгсЫШ йлШлайлабщд зЬвслЮ
52356>>>            Write   channel 9   '"'
52358>>>            Write   channel 9   '11'
52360>>>            Write   channel 9   '"'
52362>>>            Write   channel 9   sDeli // End of Excel Column AS СмдЯубЮ Шзжйлжвук
52364>>>            Write   channel 9   sDeli // End of Excel Column AT ДиЪжйлсйаж лижнжЫайхШк
52366>>>            Write   channel 9   '"'
52368>>>            Write   channel 9   'X'
52370>>>            Write   channel 9   '"'
52372>>>            Write   channel 9   sDeli // End of Excel Column AU СмгзвЮищдЬлШа Ьсд Ю ЫаШЫабШйхШ лагжЫцлЮйЮк зиШЪгШлжзжаЬхлШа ЪаШ лжд зЬвслЮ
52374>>>            Write   channel 9   sDeli // End of Excel Column AV Incoterms
52376>>>            Write   channel 9   '"'
52378>>>            Write   channel 9   (Trim(fsTropoiPlhromhsPelath(Self,Trim(MIClient.Polh_recr))))
52380>>>            Write   channel 9   '"'
52382>>>            Write   channel 9   sDeli // End of Excel Column AW юижа ПвЮиргук
52384>>>            If (sLianikh="Z009")  Move "02" to s1
52387>>>            Else                  Move "01" to s1
52389>>>            Write   channel 9   '"'
52391>>>            Write   channel 9   (Trim(s1))
52393>>>            Write   channel 9   '"'
52395>>>            Write   channel 9   sDeli // End of Excel Column AХ ОгШЫжзжхЮйЮ ЪаШ лжд зижйЫажиайгц вжЪШиаШйгжч ЬйцЫрд
52397>>>            Write   channel 9   '"'
52399>>>            Write   channel 9   'GR'
52401>>>            Write   channel 9   '"'
52403>>>            Write   channel 9   sDeli // End of Excel Column AY ХщиШ нжижвцЪЮйЮк
52405>>>            Write   channel 9   '"'
52407>>>            Write   channel 9   'MWST'
52409>>>            Write   channel 9   '"'
52411>>>            Write   channel 9   sDeli // End of Excel Column AЕ ЙШлЮЪжихШ нцижм
52413>>>            Write   channel 9   '"'
52415>>>            Write   channel 9   '0'
52417>>>            Write   channel 9   '"'
52419>>>            Write   channel 9   sDeli // End of Excel Column БA ЙШлЮЪжиажзжхЮйЮ нцижм
52421>>>            Write   channel 9   sDeli // End of Excel Column БB Аи. ФжилЮЪщд
52423>>>            Write   channel 9   sDeli // End of Excel Column БC РмЯгцк ПШисЫжйЮк
52425>>>            Write   channel 9   sDeli // End of Excel Column БD ТШочлЮлШ ДбнцилрйЮк
52427>>>            Write   channel 9   sDeli // End of Excel Column БE ДввЬазтк Фжилхж
52429>>>            Write   channel 9   sDeli // End of Excel Column БF ЛтЪайлЮ ПжйцлЮлШ ПШисЫжйЮк
52431>>>            Write   channel 9   sDeli // End of Excel Column БG ЙрЫабцк ыиЪжм ПЬвслЮ
52433>>>            Write   channel 9   sDeli // End of Excel Column БH Аи. ъЫЬаШк ыиЪжм
52435>>>            Write   channel 9   sDeli // End of Excel Column БI Жг. ъЫЬаШк ыиЪжм
52437>>>            Write   channel 9   '"'
52439>>>            Write   channel 9   '3000000000'
52441>>>            Write   channel 9   '"'
52443>>>            Write   channel 9   sDeli // End of Excel Column БJ КжЪШиаШйгцк СмгнрдхШк
52445>>>            Write   channel 9   '"'
52447>>>            Write   channel 9   'R02'
52449>>>            Write   channel 9   '"'
52451>>>            Write   channel 9   sDeli // End of Excel Column БK ОгШЫжзжхЮйЮ зЬвШлщд ЪаШ йбжзжчк cash flow
52453>>>            Write   channel 9   sDeli // End of Excel Column БL ГаШйчдЫЬйЮ ЙЬдлиабщд - УзжбШлсйлЮгШ. СмгзвЮищдЬлШа ЪаШ цвШ лШ тиЪШ (header Ship - to) бШа мзж тиЪШ (ship - to)
52455>>>            Write   channel 9   sDeli // End of Excel Column БM ЛтЯжЫжк звЮиргук ???
52457>>>            Write   channel 9   '"'
52459>>>            Write   channel 9   (Trim(fsTropoiPlhromhsPelath(Self,Trim(MIClient.Polh_recr))))
52461>>>            Write   channel 9   '"'
52463>>>            Write   channel 9   sDeli // End of Excel Column БN
52465>>>            //---
52465>>>            Write   channel 9   '"'
52467>>>            Write   channel 9   (Trim(psNotFoundClientDhmos(Self)))
52469>>>            Write   channel 9   '"'
52471>>>            Write   channel 9   sDeli
52473>>>        
52473>>>            Write   channel 9   '"'
52475>>>            Write   channel 9   (Trim(psNotFoundClientNomos(Self)))
52477>>>            Write   channel 9   '"'
52479>>>            Write   channel 9   sDeli
52481>>>        
52481>>>            Write   channel 9   '"'
52483>>>            Write   channel 9   (Trim(psNotFoundClientTrPlh(Self)))
52485>>>            Write   channel 9   '"'
52487>>>            Write   channel 9   sDeli
52489>>>        
52489>>>            Write   channel 9   '"'
52491>>>            Write   channel 9   (Trim(psNotFoundClientDrast(Self)))
52493>>>            Write   channel 9   '"'
52495>>>            //Write   Channel 9   sDeli
52495>>>        
52495>>>            //---
52495>>>            Writeln channel 9
52497>>>        
52497>>>            Send OutputPresp (Trim(sPrespID))
52498>>>        
52498>>>            // Ta erga tha pane me ton kodiko pelath pou diavazoume kai oxi
52498>>>            // me ton endexomeno kodiko pelath pou pro yphrxe bash AFM kai
52498>>>            // tou opoiou xrhsimopoihsame ta stoixeia tou.
52498>>>            // Theloume ta erga tou pelath me allo kodiko alla idio AFM
52498>>>            // Na desoune ston proto kodiko pelath pou vrethike me ayto to AFM
52498>>>            Send OutputCN    (Trim(sClientID))
52499>>>        
52499>>>            // Aparaithth epanatopothethsh sto geniko loop
52499>>>            // ton pelaton bash recnum afou endexetai na allaxame
52499>>>            // trexon recod pelath and to afm tou yparxei hdh se allo pelath
52499>>>            Clear MIClient
52500>>>            Move iRecnum to MIClient.Recnum
52501>>>            Find Eq MIClient.Recnum
52502>>>>
52502>>>        
52502>>>        End_Procedure
52503>>>        
52503>>>        
52503>>>        
52503>>>        Procedure OutputPresp String asPrespID
52506>>>            String sPrespID s1
52506>>>        
52506>>>            Set psNotFoundPrespDhmos to ""
52507>>>            Set psNotFoundPrespNomos to ""
52508>>>            Set psNotFoundPrespDrast to ""
52509>>>            Set psNotFoundPrespTrPlh to ""
52510>>>        
52510>>>            Clear MIPresp
52511>>>            Move asPrespID to MIPresp.Presp_ID
52512>>>            Find GE MIPresp by Index.7
52513>>>>
52513>>>            While ((Found) and (MIPresp.Presp_ID=asPrespID))
52517>>>                String sDeli
52517>>>                Move ","                to sDeli
52518>>>                Move MIPresp.Presp_ID   to sPrespID
52519>>>                //---
52519>>>                Write   channel 9   '"'
52521>>>                Write   channel 9   'Y012'
52523>>>                Write   channel 9   '"'
52525>>>                Write   channel 9   sDeli // End of Excel Column B  ОгсЫШ КжЪШиаШйгжч (з.о. зЬвслЮк, Ship - to бвз)
52527>>>                Write   channel 9   '"'
52529>>>                Write   channel 9   (Trim(MIPresp.Presp_ID))
52531>>>                Write   channel 9   '"'
52533>>>                Write   channel 9   sDeli // End of Excel Column C  ПШвШацк бчиажк брЫабцк зЬвслЮ SAP
52535>>>                Write   channel 9   sDeli // End of Excel Column D  СмгзвЮищдЬлШа ЪаШ лжмк Ship - to
52537>>>                Write   channel 9   sDeli // End of Excel Column E  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52539>>>                Write   channel 9   sDeli // End of Excel Column F  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52541>>>                Write   channel 9   sDeli // End of Excel Column G  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52543>>>                Write   channel 9   sDeli // End of Excel Column H  ОихЭЬлШа ж ЬиЪжвсЩжк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
52545>>>                Write   channel 9   sDeli // End of Excel Column I  ОихЭЬлШа ж гЮоШдабцк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
52547>>>                Write   channel 9   sDeli // End of Excel Column J  ОихЭЬлШа ж зрвЮлук & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж гЬлсзлрйЮк зрвЮлщд
52549>>>                Write   channel 9   '"'
52551>>>                Write   channel 9   'GR02'
52553>>>                Write   channel 9   '"'
52555>>>                Write   channel 9   sDeli // End of Excel Column K  ЙрЫабцк ДлШаихШк ДввсЫШк
52557>>>                Write   channel 9   '"'
52559>>>                Write   channel 9   'GR02'
52561>>>                Write   channel 9   '"'
52563>>>                Write   channel 9   sDeli // End of Excel Column L ОиЪШдайгцк ПрвуйЬрд ДввсЫШк
52565>>>                Write   channel 9   '"'
52567>>>                Write   channel 9   '03'
52569>>>                Write   channel 9   '"'
52571>>>                Write   channel 9   sDeli // End of Excel Column M ЙШдсва ГаШджгук
52573>>>                Write   channel 9   '"'
52575>>>                Write   channel 9   '04'
52577>>>                Write   channel 9   '"'
52579>>>                Write   channel 9   sDeli // End of Excel Column N ТгугШ (Segment)
52581>>>                Write   channel 9   sDeli // End of Excel Column O  ДлШаиабу джгабу ждлцлЮлШ
52583>>>                Write   channel 9   '"'
52585>>>                Write   channel 9   (Trim(Left(MIPresp.Presp_Name,35)))
52587>>>                Write   channel 9   '"'
52589>>>                Write   channel 9   sDeli // End of Excel Column P  юджгШ Уз. ПвЮи
52591>>>                Move "" to s1
52592>>>                If (Trim(Mid(MIPresp.Presp_Name,35,36))<>"") Move ('"'+Trim(Mid(MIPresp.Presp_Name,35,36))+'"') to s1
52595>>>                Write   channel 9   (Trim(s1))
52597>>>                Write   channel 9   sDeli // End of Excel Column Q  СмгзвЮиргШлабц зЬЫхж йЬ зЬихзлрйЮ зжм губжк лжм зЬЫхжм Name 1 ЫЬд ЬхдШа ЬзШибтк
52599>>>                Move "" to s1
52600>>>                If (Trim(Mid(MIPresp.Presp_Name,35,71))<>"") Move ('"'+Trim(Mid(MIPresp.Presp_Name,35,71))+'"') to s1
52603>>>                Write   channel 9   (Trim(s1))
52605>>>                Write   channel 9   sDeli // End of Excel Column R  ПвуиЮк ЬзрдмгхШ зЬвслЮ
52607>>>                Write   channel 9   sDeli // End of Excel Column S
52609>>>                Write   channel 9   sDeli // End of Excel Column T  СмдлжгхШ ждцгШлжк зЬвслЮ - оиЮйагжзжаЬхлШа ЪаШ ЪиуЪжиЮ ШдШЭулЮйЮ
52611>>>                Write   channel 9   sDeli // End of Excel Column U  СмдлжгхШ ждцгШлжк зЬвслЮ у лхлвжк ЬлШаихШк - оиЮйагжзжаЬхлШа ЪаШ ЪиуЪжиЮ ШдШЭулЮйЮ
52613>>>                Write   channel 9   '"'
52615>>>                Write   channel 9   (Trim(MIPresp.Presp_Address))
52617>>>                Write   channel 9   '"'
52619>>>                Write   channel 9   sDeli // End of Excel Column V  ОЫцк зЬвслЮ
52621>>>                Write   channel 9   '"'
52623>>>                Write   channel 9   (Trim(MIPresp.Presp_add_no))
52625>>>                Write   channel 9   '"'
52627>>>                Write   channel 9   sDeli // End of Excel Column W  АиаЯгцк
52629>>>                Write   channel 9   '"'
52631>>>                Write   channel 9   (Trim(MIPresp.Presp_Zipcode))
52633>>>                Write   channel 9   '"'
52635>>>                Write   channel 9   sDeli // End of Excel Column X  Т.Й.
52637>>>        
52637>>>                Move "" to s1
52638>>>                Clear MIAreas
52639>>>                Move MIPresp.Presp_Area to MIAreas.Area_id
52640>>>                Find Eq MIAreas by Index.1
52641>>>>
52641>>>                Clear MIDHMOS
52642>>>                Move (Trim(MIAreas.Area_Descr)) to MIDHMOS.Dhmos
52643>>>                Find EQ MIDHMOS by Index.1
52644>>>>
52644>>>                If (Found)  Move (Trim(MIDHMOS.Dhmos))  to s1
52647>>>                Else Begin
52648>>>                    Set psNotFoundPrespDhmos to ("*** (Y) "+Trim(MIAreas.Area_Descr))
52649>>>                    Move "ZZZZ"              to s1
52650>>>                End
52650>>>>
52650>>>                Write   channel 9   '"'
52652>>>                Write   channel 9   s1
52654>>>                Write   channel 9   '"'
52656>>>                Write   channel 9   sDeli // End of Excel Column Y  Гугжк
52658>>>        
52658>>>                Move "GR" to s1
52659>>>                String sIsGreece
52659>>>                Move s1 to sIsGreece
52660>>>                Write   channel 9   '"'
52662>>>                Write   channel 9   (Trim(s1))
52664>>>                Write   channel 9   '"'
52666>>>                Write   channel 9   sDeli // End of Excel Column Z  ХщиШ
52668>>>        
52668>>>        
52668>>>                Move "" to s1
52669>>>                Clear MICities
52670>>>                Move MIPresp.Presp_City_ID to MICities.City_id
52671>>>                Find Eq MICities by Index.1
52672>>>>
52672>>>                Clear MINOMOS
52673>>>                Move (Trim(MICities.City_Descr)) to MINOMOS.DESCR
52674>>>                Find EQ MINOMOS by Index.2
52675>>>>
52675>>>                If (Found)  Move (Trim(MINOMOS.CODE)) to s1
52678>>>                Else Begin
52679>>>                    Set psNotFoundPrespNomos to ("*** (AA) "+Trim(MICities.City_Descr))
52680>>>                    Move "ZZZZ"              to s1
52681>>>                End
52681>>>>
52681>>>                Write   channel 9   '"'
52683>>>                Write   channel 9   s1
52685>>>                Write   channel 9   '"'
52687>>>                Write   channel 9   sDeli // End of Excel Column AA Мжгцк
52689>>>                Write   channel 9   sDeli // End of Excel Column AB ГЮгжлабу ДдцлЮлШ
52691>>>                Write   channel 9   '"'
52693>>>                Write   channel 9   'EL'
52695>>>                Write   channel 9   '"'
52697>>>                Write   channel 9   sDeli // End of Excel Column AC ВвщййШ
52699>>>                Write   channel 9   '"'
52701>>>                Write   channel 9   (Trim(MIPresp.Presp_Phone))
52703>>>                Write   channel 9   '"'
52705>>>                Write   channel 9   sDeli // End of Excel Column AD ТЮвтнрдж зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд лЮвЬнщдрд йлж sheet Communication)
52707>>>                Write   channel 9   '"'
52709>>>                Write   channel 9   (Trim(MIPresp.Presp_Mobile))
52711>>>                Write   channel 9   '"'
52713>>>                Write   channel 9   sDeli // End of Excel Column AE "ЙадЮлц зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд бадЮлщд йлж sheet Communication)
52715>>>                Write   channel 9   '"'
52717>>>                Write   channel 9   (Trim(MIPresp.Presp_Fax))
52719>>>                Write   channel 9   '"'
52721>>>                Write   channel 9   sDeli // End of Excel Column AF Fax зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд fax йлж sheet Communication)
52723>>>                Write   channel 9   '"'
52725>>>                Write   channel 9   (Trim(MIPresp.Presp_email))
52727>>>                Write   channel 9   '"'
52729>>>                Write   channel 9   sDeli // End of Excel Column AG Email зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд e-mail йлж sheet Communication)
52731>>>                Write   channel 9   sDeli // End of Excel Column AH СмгзвЮищдЬлШа ж reference брЫабцк зижгЮЯЬмлу Ьсд ж зЬвслЮк ЬхдШа бШа зижгЮЯЬмлук
52733>>>        
52733>>>                Move "" to s1
52734>>>//                Clear Codemast
52734>>>//                Move "JOB"              to Codemast.Type
52734>>>//                Move MIPresp.Presp_Job to Codemast.Code
52734>>>//                Find Eq Codemast by Index.1
52734>>>//                Clear MIDRAST
52734>>>//                Move (Trim(Codemast.Description)) to MIDRAST.Descr
52734>>>//                Find Eq MIDRAST by Index.2
52734>>>//                If (Found) Move MIDRAST.Code to s1
52734>>>//                Else Begin
52734>>>//                    Set psNotFoundPrespDrast to ("*** (AI) "+Trim(Codemast.Description))
52734>>>                    Move "ZZZZ" to s1
52735>>>//                End
52735>>>                Write   channel 9   '"'
52737>>>                Write   channel 9   s1
52739>>>                Write   channel 9   '"'
52741>>>                Write   channel 9   sDeli // End of Excel Column AI ГиШйлЮиацлЮлШ зЬвслЮ
52743>>>        
52743>>>                Write   channel 9   '"'
52745>>>                Write   channel 9   (Trim(MIPresp.Presp_AFM))
52747>>>                Write   channel 9   '"'
52749>>>                Write   channel 9   sDeli // End of Excel Column AJ "АФЛ УзжоиЬрлабц ЪаШ GR зЬвслЬк
52751>>>                Move ("EL"+Trim(MIPresp.Presp_AFM)) to s1
52752>>>                Write   channel 9   '"'
52754>>>                Write   channel 9   (Trim(s1))
52756>>>                Write   channel 9   '"'
52758>>>                Write   channel 9   sDeli // End of Excel Column AK EL+АФЛ УзжоиЬрлабц ЪаШ зЬвслЬк ДмирзШфбук ыдрйЮк
52760>>>                Write   channel 9   sDeli // End of Excel Column AL ГЮгжлабу ДдцлЮлШ
52762>>>                Write   channel 9   sDeli // End of Excel Column AM Sales Office
52764>>>                Write   channel 9   sDeli // End of Excel Column AN Sales Group
52766>>>                Write   channel 9   sDeli // End of Excel Column AO ДиЪжвсЩжк / ЛЮоШдабцк
52768>>>                Write   channel 9   '"'
52770>>>                Write   channel 9   'EUR'
52772>>>                Write   channel 9   '"'
52774>>>                Write   channel 9   sDeli // End of Excel Column AP МцгайгШ зщвЮйЮк
52776>>>                Write   channel 9   '"'
52778>>>                Write   channel 9   '1'
52780>>>                Write   channel 9   '"'
52782>>>                Write   channel 9   sDeli // End of Excel Column AQ ПижйЫажихЭЬа лЮд ЫаШЫабШйхШ лагжЫцлЮйЮк
52784>>>                Write   channel 9   '"'
52786>>>                Write   channel 9   '1'
52788>>>                Write   channel 9   '"'
52790>>>                Write   channel 9   sDeli // End of Excel Column AR ПижйЫажихЭЬа лЮд жгсЫШ йлШлайлабщд зЬвслЮ
52792>>>                Write   channel 9   '"'
52794>>>                Write   channel 9   '11'
52796>>>                Write   channel 9   '"'
52798>>>                Write   channel 9   sDeli // End of Excel Column AS СмдЯубЮ Шзжйлжвук
52800>>>                Write   channel 9   sDeli // End of Excel Column AT ДиЪжйлсйаж лижнжЫайхШк
52802>>>                Write   channel 9   sDeli // End of Excel Column AU СмгзвЮищдЬлШа Ьсд Ю ЫаШЫабШйхШ лагжЫцлЮйЮк зиШЪгШлжзжаЬхлШа ЪаШ лжд зЬвслЮ
52804>>>                Write   channel 9   sDeli // End of Excel Column AV Incoterms
52806>>>                Write   channel 9   sDeli // End of Excel Column AW юижа ПвЮиргук
52808>>>                Write   channel 9   sDeli // End of Excel Column AХ ОгШЫжзжхЮйЮ ЪаШ лжд зижйЫажиайгц вжЪШиаШйгжч ЬйцЫрд
52810>>>                Write   channel 9   '"'
52812>>>                Write   channel 9   'GR'
52814>>>                Write   channel 9   '"'
52816>>>                Write   channel 9   sDeli // End of Excel Column AY ХщиШ нжижвцЪЮйЮк
52818>>>                Write   channel 9   '"'
52820>>>                Write   channel 9   'MWST'
52822>>>                Write   channel 9   '"'
52824>>>                Write   channel 9   sDeli // End of Excel Column AЕ ЙШлЮЪжихШ нцижм
52826>>>                Write   channel 9   '"'
52828>>>                Write   channel 9   '0'
52830>>>                Write   channel 9   '"'
52832>>>                Write   channel 9   sDeli // End of Excel Column БA ЙШлЮЪжиажзжхЮйЮ нцижм
52834>>>                Write   channel 9   sDeli // End of Excel Column БB Аи. ФжилЮЪщд
52836>>>                Write   channel 9   sDeli // End of Excel Column БC РмЯгцк ПШисЫжйЮк
52838>>>                Write   channel 9   sDeli // End of Excel Column БD ТШочлЮлШ ДбнцилрйЮк
52840>>>                Write   channel 9   sDeli // End of Excel Column БE ДввЬазтк Фжилхж
52842>>>                Write   channel 9   sDeli // End of Excel Column БF ЛтЪайлЮ ПжйцлЮлШ ПШисЫжйЮк
52844>>>                Write   channel 9   sDeli // End of Excel Column БG ЙрЫабцк ыиЪжм ПЬвслЮ
52846>>>                Write   channel 9   sDeli // End of Excel Column БH Аи. ъЫЬаШк ыиЪжм
52848>>>                Write   channel 9   sDeli // End of Excel Column БI Жг. ъЫЬаШк ыиЪжм
52850>>>                Write   channel 9   '"'
52852>>>                Write   channel 9   '3000000000'
52854>>>                Write   channel 9   '"'
52856>>>                Write   channel 9   sDeli // End of Excel Column БJ КжЪШиаШйгцк СмгнрдхШк
52858>>>                Write   channel 9   '"'
52860>>>                Write   channel 9   'R02'
52862>>>                Write   channel 9   '"'
52864>>>                Write   channel 9   sDeli // End of Excel Column БK ОгШЫжзжхЮйЮ зЬвШлщд ЪаШ йбжзжчк cash flow
52866>>>                Write   channel 9   sDeli // End of Excel Column БL ГаШйчдЫЬйЮ ЙЬдлиабщд - УзжбШлсйлЮгШ. СмгзвЮищдЬлШа ЪаШ цвШ лШ тиЪШ (header Ship - to) бШа мзж тиЪШ (ship - to)
52868>>>                Write   channel 9   sDeli // End of Excel Column БM ЛтЯжЫжк звЮиргук
52870>>>                Write   channel 9   sDeli // End of Excel Column БN Terms of Payment
52872>>>                //---
52872>>>        
52872>>>                Write   channel 9   '"'
52874>>>                Write   channel 9   (Trim(psNotFoundPrespDhmos(Self)))
52876>>>                Write   channel 9   '"'
52878>>>                Write   channel 9   sDeli
52880>>>        
52880>>>                Write   channel 9   '"'
52882>>>                Write   channel 9   (Trim(psNotFoundPrespNomos(Self)))
52884>>>                Write   channel 9   '"'
52886>>>                Write   channel 9   sDeli
52888>>>        
52888>>>                Write   channel 9   '"'
52890>>>                Write   channel 9   (Trim(psNotFoundPrespTrPlh(Self)))
52892>>>                Write   channel 9   '"'
52894>>>                Write   channel 9   sDeli
52896>>>        
52896>>>                Write   channel 9   '"'
52898>>>                Write   channel 9   (Trim(psNotFoundPrespDrast(Self)))
52900>>>                Write   channel 9   '"'
52902>>>                //Write   Channel 9   sDeli
52902>>>        
52902>>>                //---
52902>>>                Writeln channel 9
52904>>>        
52904>>>                Find GT MIPresp by Index.7
52905>>>>
52905>>>        
52905>>>            Loop
52906>>>>
52906>>>        End_Procedure
52907>>>        
52907>>>        
52907>>>        Procedure OutputCN String asClientID
52910>>>        
52910>>>            String sSLS sCNT sMHX
52910>>>        
52910>>>            Clear MICN
52911>>>            Move asClientID to MICN.Client_ID
52912>>>            Find GE MICN by Index.4 // Client_ID+CN_Code
52913>>>>
52913>>>            While ((Found) and (MICN.Client_ID=asClientID))
52917>>>        
52917>>>                Set psNotFoundErgoDhmos to ""
52918>>>                Set psNotFoundErgoNomos to ""
52919>>>                Set psNotFoundErgoDrast to ""
52920>>>                Set psNotFoundErgoTrPlh to ""
52921>>>                
52921>>>                If (MICN.EXPORTFLAG=1) Begin
52923>>>    
52923>>>                    String sDeli
52923>>>                    Move "," to sDeli
52924>>>                    //---
52924>>>                    Write   channel 9   '"' 
52926>>>                    Write   channel 9   'Y005'
52928>>>                    Write   channel 9   '"'
52930>>>                    Write   channel 9   sDeli // End of Excel Column B  ОгсЫШ КжЪШиаШйгжч (з.о. зЬвслЮк, Ship - to бвз)
52932>>>                    Write   channel 9   '"'
52934>>>                    Write   channel 9   (Trim(MICN.CN_Code))
52936>>>                    Write   channel 9   '"'
52938>>>                    Write   channel 9   sDeli // End of Excel Column C  ПШвШацк бчиажк брЫабцк ДиЪжм
52940>>>                    Write   channel 9   '"'
52942>>>                    Write   channel 9   (Trim(MICN.Client_ID))
52944>>>                    Write   channel 9   '"'
52946>>>                    Write   channel 9   sDeli // End of Excel Column D  ЙрЫ. ПЬвслЮ
52948>>>                    Write   channel 9   sDeli // End of Excel Column E  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52950>>>                    Write   channel 9   sDeli // End of Excel Column F  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52952>>>                    Write   channel 9   sDeli // End of Excel Column G  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
52954>>>        
52954>>>                    Clear MIConstr
52955>>>                    Move MICN.CN_Cnt_Recr to MIConstr.Cnt_Recr
52956>>>                    Find Eq MIConstr by Index.2
52957>>>>
52957>>>                    Write   channel 9   '"'
52959>>>                    Write   channel 9   (Trim(MIConstr.Cnt_ID))
52961>>>                    Write   channel 9   '"'
52963>>>                    Write   channel 9   sDeli // End of Excel Column H  ОихЭЬлШа ж ЬиЪжвсЩжк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
52965>>>        
52965>>>                    Write   channel 9   '"'
52967>>>                    Write   channel 9   (Trim(MICN.Mhxanik_ID))
52969>>>                    Write   channel 9   '"'
52971>>>                    Write   channel 9   sDeli // End of Excel Column I  ОихЭЬлШа ж гЮоШдабцк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
52973>>>        
52973>>>                    Clear MISalesm
52974>>>                    Move MICN.CN_Sls_Recr to MISalesm.Sls_Recr
52975>>>                    Find Eq MISalesm by Index.2
52976>>>>
52976>>>                    Write   channel 9   '"'
52978>>>                    Write   channel 9   (Trim(MISalesm.Sls_ID))
52980>>>                    Write   channel 9   '"'
52982>>>                    Write   channel 9   sDeli // End of Excel Column J  ОихЭЬлШа ж зрвЮлук & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж гЬлсзлрйЮк зрвЮлщд
52984>>>        
52984>>>                    Move (Trim(MISalesm.Sls_ID))    to sSLS
52985>>>                    Move (Trim(MIConstr.Cnt_ID))    to sCNT
52986>>>                    Move (Trim(MICN.Mhxanik_ID))    to sMHX
52987>>>        
52987>>>        
52987>>>                    Write   channel 9   '"'
52989>>>                    Write   channel 9   'GR02'
52991>>>                    Write   channel 9   '"'
52993>>>                    Write   channel 9   sDeli // End of Excel Column K  ЙрЫабцк ДлШаихШк ДввсЫШк
52995>>>                    Write   channel 9   '"'
52997>>>                    Write   channel 9   'GR02'
52999>>>                    Write   channel 9   '"'
53001>>>                    Write   channel 9   sDeli // End of Excel Column L ОиЪШдайгцк ПрвуйЬрд ДввсЫШк
53003>>>                    Write   channel 9   '"'
53005>>>                    Write   channel 9   '03'
53007>>>                    Write   channel 9   '"'
53009>>>                    Write   channel 9   sDeli // End of Excel Column M ЙШдсва ГаШджгук
53011>>>                    Write   channel 9   '"'
53013>>>                    Write   channel 9   '04'
53015>>>                    Write   channel 9   '"'
53017>>>                    Write   channel 9   sDeli // End of Excel Column N ТгугШ (Segment)
53019>>>                    Write   channel 9   sDeli // End of Excel Column O  ДлШаиабу джгабу ждлцлЮлШ
53021>>>                    Write   channel 9   '"'
53023>>>                    Write   channel 9   (Trim(Left(MICN.CN_Descr,35)))
53025>>>                    Write   channel 9   '"'
53027>>>                    Write   channel 9   sDeli // End of Excel Column P  ПЬиаЪиШнЮ ДиЪжм
53029>>>                    String s1
53029>>>                    Move "" to s1
53030>>>                    If (Trim(Mid(MICN.CN_Descr,35,36))<>"") Move ('"'+Trim(Mid(MICN.CN_Descr,35,36))+'"') to s1
53033>>>                    Write   channel 9   (Trim(s1))
53035>>>                    Write   channel 9   sDeli // End of Excel Column Q  СмгзвЮиргШлабц зЬЫхж йЬ зЬихзлрйЮ зжм губжк лжм зЬЫхжм Name 1 ЫЬд ЬхдШа ЬзШибтк
53037>>>                    Move "" to s1
53038>>>                    If (Trim(Mid(MICN.CN_Descr,35,71))<>"") Move ('"'+Trim(Mid(MICN.CN_Descr,35,71))+'"') to s1
53041>>>                    Write   channel 9   (Trim(s1))
53043>>>                    Write   channel 9   sDeli // End of Excel Column R  ПвуиЮк ЬзрдмгхШ зЬвслЮ
53045>>>                    Write   channel 9   sDeli // End of Excel Column S
53047>>>                    Write   channel 9   sDeli // End of Excel Column T  СмдлжгхШ ждцгШлжк зЬвслЮ - оиЮйагжзжаЬхлШа ЪаШ ЪиуЪжиЮ ШдШЭулЮйЮ
53049>>>                    Write   channel 9   sDeli // End of Excel Column U  СмдлжгхШ ждцгШлжк зЬвслЮ у лхлвжк ЬлШаихШк - оиЮйагжзжаЬхлШа ЪаШ ЪиуЪжиЮ ШдШЭулЮйЮ
53051>>>                    Write   channel 9   '"'
53053>>>                    Write   channel 9   (Trim(MICN.CN_Address))
53055>>>                    Write   channel 9   '"'
53057>>>                    Write   channel 9   sDeli // End of Excel Column V  ОЫцк зЬвслЮ
53059>>>                    Write   channel 9   '"'
53061>>>                    Write   channel 9   (Trim(MICN.CN_add_no))
53063>>>                    Write   channel 9   '"'
53065>>>                    Write   channel 9   sDeli // End of Excel Column W  АиаЯгцк
53067>>>                    Write   channel 9   '"'
53069>>>                    Write   channel 9   (Trim(MICN.CN_Zipcode))
53071>>>                    Write   channel 9   '"'
53073>>>                    Write   channel 9   sDeli // End of Excel Column X  Т.Й.
53075>>>        
53075>>>                    Move "" to s1
53076>>>                    Clear MIAreas
53077>>>                    Move MICN.CN_Area to MIAreas.Area_id
53078>>>                    Find Eq MIAreas by Index.1
53079>>>>
53079>>>                    Clear MIDHMOS
53080>>>                    Move (Trim(MIAreas.Area_Descr)) to MIDHMOS.Dhmos
53081>>>                    Find EQ MIDHMOS by Index.1
53082>>>>
53082>>>                    If (Found)  Move (Trim(MIDHMOS.Dhmos))  to s1
53085>>>                    Else Begin
53086>>>                        Set psNotFoundErgoDhmos to ("*** (Y) "+Trim(MIAreas.Area_Descr))
53087>>>                        Move "ZZZZ"             to s1
53088>>>                    End
53088>>>>
53088>>>                    Write   channel 9   '"'
53090>>>                    Write   channel 9   s1
53092>>>                    Write   channel 9   '"'
53094>>>                    Write   channel 9   sDeli // End of Excel Column Y  Гугжк
53096>>>        
53096>>>                    Move "GR" to s1
53097>>>                    String sIsGreece
53097>>>                    Move s1 to sIsGreece
53098>>>                    Write   channel 9   '"'
53100>>>                    Write   channel 9   (Trim(s1))
53102>>>                    Write   channel 9   '"'
53104>>>                    Write   channel 9   sDeli // End of Excel Column Z  ХщиШ
53106>>>        
53106>>>                    Move "" to s1
53107>>>                    Clear MICities
53108>>>                    Move MICN.CN_City to MICities.City_id
53109>>>                    Find Eq MICities by Index.1
53110>>>>
53110>>>                    Clear MINOMOS
53111>>>                    Move (Trim(MICities.City_Descr)) to MINOMOS.DESCR
53112>>>                    Find EQ MINOMOS by Index.2
53113>>>>
53113>>>                    If (Found)  Move (Trim(MINOMOS.CODE)) to s1
53116>>>                    Else Begin
53117>>>                        Set psNotFoundErgoNomos to ("*** (AA) "+Trim(MICities.City_Descr))
53118>>>                        Move "ZZZZ"             to s1
53119>>>                    End
53119>>>>
53119>>>                    Write   channel 9   '"'
53121>>>                    Write   channel 9   s1
53123>>>                    Write   channel 9   '"'
53125>>>                    Write   channel 9   sDeli // End of Excel Column AA Мжгцк
53127>>>                    Write   channel 9   sDeli // End of Excel Column AB ГЮгжлабу ДдцлЮлШ
53129>>>                    Write   channel 9   sDeli // End of Excel Column AC ВвщййШ
53131>>>                    Write   channel 9   sDeli // End of Excel Column AD ТЮвтнрдж зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд лЮвЬнщдрд йлж sheet Communication)
53133>>>                    Write   channel 9   sDeli // End of Excel Column AE "ЙадЮлц зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд бадЮлщд йлж sheet Communication)
53135>>>                    Write   channel 9   sDeli // End of Excel Column AF Fax зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд fax йлж sheet Communication)
53137>>>                    Write   channel 9   sDeli // End of Excel Column AG Email зЬвслЮ (ЙШлШощиЮйЮ зЬиаййцлЬирд e-mail йлж sheet Communication)
53139>>>                    Write   channel 9   sDeli // End of Excel Column AH СмгзвЮищдЬлШа ж reference брЫабцк зижгЮЯЬмлу Ьсд ж зЬвслЮк ЬхдШа бШа зижгЮЯЬмлук
53141>>>                    Write   channel 9   sDeli // End of Excel Column AI ГиШйлЮиацлЮлШ зЬвслЮ
53143>>>                    Write   channel 9   sDeli // End of Excel Column AJ "АФЛ УзжоиЬрлабц ЪаШ GR зЬвслЬк
53145>>>                    Write   channel 9   sDeli // End of Excel Column AK EL+АФЛ УзжоиЬрлабц ЪаШ зЬвслЬк ДмирзШфбук ыдрйЮк
53147>>>                    Write   channel 9   sDeli // End of Excel Column AL ГЮгжлабу ДдцлЮлШ
53149>>>    
53149>>>    //                Write   channel 9   '"'
53149>>>    //                Write   channel 9   "" //(Trim(Branch.Branch_Resp))   
53149>>>    //                Write   channel 9   '"'
53149>>>    //                Write   channel 9   sDeli // End of Excel Column AM Sales Office
53149>>>                    Write   channel 9   '"'
53151>>>                    Write   channel 9   (Trim(MICN.CN_PUMPID))
53153>>>                    Write   channel 9   '"'
53155>>>                    Write   channel 9   sDeli // End of Excel Column AM Sales Office
53157>>>    
53157>>>                    Write   channel 9   '"'
53159>>>                    Write   channel 9   "" //(Trim(Branch.Branch_Bitmap))
53161>>>                    Write   channel 9   '"'
53163>>>                    Write   channel 9   sDeli // End of Excel Column AN Sales Group
53165>>>                    Write   channel 9   sDeli // End of Excel Column AO Customer Group ДиЪжвсЩжк / ЛЮоШдабцк
53167>>>                    Write   channel 9   '"'
53169>>>                    Write   channel 9   'EUR'
53171>>>                    Write   channel 9   '"'
53173>>>                    Write   channel 9   sDeli // End of Excel Column AP МцгайгШ зщвЮйЮк
53175>>>                    Write   channel 9   '"'
53177>>>                    Write   channel 9   '1'
53179>>>                    Write   channel 9   '"'
53181>>>                    Write   channel 9   sDeli // End of Excel Column AQ ПижйЫажихЭЬа лЮд ЫаШЫабШйхШ лагжЫцлЮйЮк
53183>>>                    Write   channel 9   '"'
53185>>>                    Write   channel 9   '1'
53187>>>                    Write   channel 9   '"'
53189>>>                    Write   channel 9   sDeli // End of Excel Column AR ПижйЫажихЭЬа лЮд жгсЫШ йлШлайлабщд зЬвслЮ
53191>>>                    Write   channel 9   '"'
53193>>>                    Write   channel 9   '11'
53195>>>                    Write   channel 9   '"'
53197>>>                    Write   channel 9   sDeli // End of Excel Column AS СмдЯубЮ Шзжйлжвук
53199>>>    
53199>>>    //                Write   channel 9   '"'
53199>>>    //                Write   channel 9   ""  //(Trim(Branch.Branch_Email))
53199>>>    //                Write   channel 9   '"'
53199>>>    //                Write   channel 9   sDeli // End of Excel Column AT ДиЪжйлсйаж лижнжЫайхШк
53199>>>                    Write   channel 9   '"'
53201>>>                    Write   channel 9   (Trim(MICN.CN_PUMPLICENSE))
53203>>>                    Write   channel 9   '"'
53205>>>                    Write   channel 9   sDeli // End of Excel Column AT ДиЪжйлсйаж лижнжЫайхШк
53207>>>    
53207>>>                    Write   channel 9   '"'
53209>>>                    Write   channel 9   'X'
53211>>>                    Write   channel 9   '"'
53213>>>                    Write   channel 9   sDeli // End of Excel Column AU СмгзвЮищдЬлШа Ьсд Ю ЫаШЫабШйхШ лагжЫцлЮйЮк зиШЪгШлжзжаЬхлШа ЪаШ лжд зЬвслЮ
53215>>>                    Write   channel 9   sDeli // End of Excel Column AV Incoterms
53217>>>                    Write   channel 9   sDeli // End of Excel Column AW юижа ПвЮиргук
53219>>>                    Write   channel 9   sDeli // End of Excel Column AХ ОгШЫжзжхЮйЮ ЪаШ лжд зижйЫажиайгц вжЪШиаШйгжч ЬйцЫрд
53221>>>                    Write   channel 9   '"'
53223>>>                    Write   channel 9   'GR'
53225>>>                    Write   channel 9   '"'
53227>>>                    Write   channel 9   sDeli // End of Excel Column AY ХщиШ нжижвцЪЮйЮк
53229>>>                    Write   channel 9   '"'
53231>>>                    Write   channel 9   'MWST'
53233>>>                    Write   channel 9   '"'
53235>>>                    Write   channel 9   sDeli // End of Excel Column AЕ ЙШлЮЪжихШ нцижм
53237>>>                    Write   channel 9   '"'
53239>>>                    Write   channel 9   '0'
53241>>>                    Write   channel 9   '"'
53243>>>                    Write   channel 9   sDeli // End of Excel Column БA ЙШлЮЪжиажзжхЮйЮ нцижм
53245>>>                    Write   channel 9   sDeli // End of Excel Column БB Аи. ФжилЮЪщд
53247>>>                    Write   channel 9   sDeli // End of Excel Column БC РмЯгцк ПШисЫжйЮк
53249>>>                    Write   channel 9   sDeli // End of Excel Column БD ТШочлЮлШ ДбнцилрйЮк
53251>>>        
53251>>>                    Move "" to s1
53252>>>    //                Date dHm
53252>>>    //                Move "31/12/2100" to dHm
53252>>>    //                Clear BtnOrdH
53252>>>    //                Move asClientID     to BtnOrdH.Client_ID
53252>>>    //                Move MICN.CN_Code   to BtnOrdH.CN_Code
53252>>>    //                Move dHm            to BtnOrdH.Deop_Lhxh
53252>>>    //                Move "ZZZZZZZZZZ"   to BtnOrdH.AA_Deop
53252>>>    //                Move "ZZZZZZZZZZ"   to BtnOrdH.Recr
53252>>>    //                Find LE BtnOrdH by Index.6
53252>>>    //                If ((Found) and (BtnOrdH.Client_ID=asClientID) and (BtnOrdH.CN_Code=MICN.CN_Code)) Begin
53252>>>    //                    Move ('"'+String(Btnordh.Eleiph)+'"') to s1
53252>>>    //                End
53252>>>                    Write   channel 9   (Trim(s1))
53254>>>                    Write   channel 9   sDeli // End of Excel Column БE ДввЬазтк Фжилхж
53256>>>        
53256>>>                    Write   channel 9   sDeli // End of Excel Column БF ЛтЪайлЮ ПжйцлЮлШ ПШисЫжйЮк
53258>>>                    Write   channel 9   sDeli // End of Excel Column БG ЙрЫабцк ыиЪжм ПЬвслЮ
53260>>>                    Write   channel 9   sDeli // End of Excel Column БH Аи. ъЫЬаШк ыиЪжм
53262>>>                    Write   channel 9   sDeli // End of Excel Column БI Жг. ъЫЬаШк ыиЪжм
53264>>>                    Write   channel 9   sDeli // End of Excel Column БJ КжЪШиаШйгцк СмгнрдхШк
53266>>>                    Write   channel 9   sDeli // End of Excel Column БK ОгШЫжзжхЮйЮ зЬвШлщд ЪаШ йбжзжчк cash flow
53268>>>                    Write   channel 9   sDeli // End of Excel Column БL ГаШйчдЫЬйЮ ЙЬдлиабщд - УзжбШлсйлЮгШ. СмгзвЮищдЬлШа ЪаШ цвШ лШ тиЪШ (header Ship - to) бШа мзж тиЪШ (ship - to)
53270>>>                    Write   channel 9   sDeli // End of Excel Column БM ЛтЯжЫжк звЮиргук ???
53272>>>                    Write   channel 9   sDeli // End of Excel Column БN
53274>>>                    //---
53274>>>        
53274>>>                    Write   channel 9   '"'
53276>>>                    Write   channel 9   (Trim(psNotFoundErgoDhmos(Self)))
53278>>>                    Write   channel 9   '"'
53280>>>                    Write   channel 9   sDeli // End of Excel Column БO
53282>>>        
53282>>>                    Write   channel 9   '"'
53284>>>                    Write   channel 9   (Trim(psNotFoundErgoNomos(Self)))
53286>>>                    Write   channel 9   '"'
53288>>>                    Write   channel 9   sDeli // End of Excel Column БP
53290>>>        
53290>>>                    Write   channel 9   '"'
53292>>>                    Write   channel 9   (Trim(psNotFoundErgoTrPlh(Self)))
53294>>>                    Write   channel 9   '"'
53296>>>                    Write   channel 9   sDeli // End of Excel Column БQ
53298>>>        
53298>>>                    Write   channel 9   '"'
53300>>>                    Write   channel 9   (Trim(psNotFoundErgoDrast(Self)))
53302>>>                    Write   channel 9   '"'
53304>>>                    Write   channel 9   sDeli  // End of Excel Column БR
53306>>>    
53306>>>                    // 05/09/2017 ADDED CN Trigonikh Paradosh Details from CN
53306>>>                    Write   channel 9   '"'
53308>>>                    Write   channel 9   (Trim(MICN.CN_EXFD1))
53310>>>                    Write   channel 9   '"'
53312>>>                    Write   channel 9   sDeli   // End of Excel Column БS
53314>>>                    Write   channel 9   '"'
53316>>>                    Write   channel 9   (Trim(MICN.CN_EXFD2))
53318>>>                    Write   channel 9   '"'
53320>>>                    Write   channel 9   sDeli  // End of Excel Column БT
53322>>>                    Write   channel 9   '"'
53324>>>                    Write   channel 9   (Trim(MICN.CN_EXFD3))
53326>>>                    Write   channel 9   '"'
53328>>>                    Write   channel 9   sDeli  // End of Excel Column БU
53330>>>                    Write   channel 9   '"'
53332>>>                    Write   channel 9   (Trim(MICN.CN_EXFD4))
53334>>>                    Write   channel 9   '"'
53336>>>                    Write   channel 9   sDeli  // End of Excel Column БV
53338>>>                    Write   channel 9   '"'
53340>>>                    Write   channel 9   (Trim(MICN.CN_EXFD5))
53342>>>                    Write   channel 9   '"'
53344>>>                    Write   channel 9   sDeli  // End of Excel Column БW
53346>>>                    Write   channel 9   '"'
53348>>>                    Write   channel 9   (Trim(MICN.CN_EXFD6))
53350>>>                    Write   channel 9   '"'     // End of Excel Column БX
53352>>>                    //Write   channel 9   sDeli  
53352>>>                    //---
53352>>>                    Writeln channel 9
53354>>>        
53354>>>                    Send Output_Others
53355>>>
53355>>>                End // If (CN.EXPORTFLAG=1) Begin
53355>>>>
53355>>>                Find GT MICN by Index.4 // Client_ID+CN_Code
53356>>>>
53356>>>            Loop
53357>>>>
53357>>>        End_Procedure
53358>>>        
53358>>>        
53358>>>        Procedure Output_Others
53361>>>            String sDeli s1
53361>>>            Move "," to sDeli
53362>>>        
53362>>>            Set psNotFoundMhxanDhmos to ""
53363>>>            Set psNotFoundMhxanNomos to ""
53364>>>            Set psNotFoundMhxanDrast to ""
53365>>>            Set psNotFoundMhxanTrPlh to ""
53366>>>        
53366>>>            Set psNotFoundConstrDhmos to ""
53367>>>            Set psNotFoundConstrNomos to ""
53368>>>            Set psNotFoundConstrDrast to ""
53369>>>            Set psNotFoundConstrTrPlh to ""
53370>>>        
53370>>>            Set psNotFoundSalesDhmos to ""
53371>>>            Set psNotFoundSalesNomos to ""
53372>>>            Set psNotFoundSalesDrast to ""
53373>>>            Set psNotFoundSalesTrPlh to ""
53374>>>        
53374>>>            If (MICN.Mhxanik_ID<>"") Begin
53376>>>                Clear MIMhxan
53377>>>                Move MICN.Mhxanik_ID to MIMhxan.Mhx_ID
53378>>>                Find Eq MIMhxan by Index.4
53379>>>>
53379>>>                If (Found) Begin
53381>>>                    Clear tmpPagia
53382>>>                    Move "02"           to tmpPagia.Company_Code
53383>>>                    Move MICN.Mhxanik_ID  to tmpPagia.Pagia_Code
53384>>>                    Find Eq tmpPagia by Index.1
53385>>>>
53385>>>                    If (not(Found)) Begin
53387>>>                        SaveRecord tmpPagia
53388>>>                        //---
53388>>>                        Write   channel 7   '"'
53390>>>                        Write   channel 7   '02'
53392>>>                        Write   channel 7   '"'
53394>>>                        Write   channel 7   sDeli // End of Excel Column B  ОгсЫШ КжЪШиаШйгжч (з.о. зЬвслЮк, Ship - to бвз)
53396>>>                        Write   channel 7   '"'
53398>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_ID))
53400>>>                        Write   channel 7   '"'
53402>>>                        Write   channel 7   sDeli // End of Excel Column C  ПШвШацк бчиажк брЫабцк зЬвслЮ SAP
53404>>>                        Write   channel 7   sDeli // End of Excel Column D  СмгзвЮищдЬлШа ЪаШ лжмк Ship - to
53406>>>                        Write   channel 7   sDeli // End of Excel Column E  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
53408>>>                        Write   channel 7   sDeli // End of Excel Column F  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
53410>>>                        Write   channel 7   '"'
53412>>>                        Write   channel 7   (Trim(Left(MIMhxan.Mhx_Name,35)))
53414>>>                        Write   channel 7   '"'
53416>>>                        Write   channel 7   sDeli // End of Excel Column G  юджгШ Уз. ПвЮи
53418>>>                        Move "" to s1
53419>>>                        If (Trim(Mid(MIMhxan.Mhx_Name,35,36))<>"") Move ('"'+Trim(Mid(MIMhxan.Mhx_Name,35,36))+'"') to s1
53422>>>                        Write   channel 7   (Trim(s1))
53424>>>                        Write   channel 7   sDeli // End of Excel Column H  СмгзвЮиргШлабц зЬЫхж йЬ зЬихзлрйЮ зжм губжк лжм зЬЫхжм Name 1 ЫЬд ЬхдШа ЬзШибтк
53426>>>                        Write   channel 7   sDeli // End of Excel Column I  ОихЭЬлШа ж гЮоШдабцк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
53428>>>                        Write   channel 7   sDeli // End of Excel Column J  ОихЭЬлШа ж зрвЮлук & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж гЬлсзлрйЮк зрвЮлщд
53430>>>        
53430>>>                        Write   channel 7   '"'
53432>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_Address))
53434>>>                        Write   channel 7   '"'
53436>>>                        Write   channel 7   sDeli // End of Excel Column K  ОЫцк зЬвслЮ
53438>>>                        Write   channel 7   '"'
53440>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_add_no))
53442>>>                        Write   channel 7   '"'
53444>>>                        Write   channel 7   sDeli // End of Excel Column L  АиаЯгцк
53446>>>                        Write   channel 7   '"'
53448>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_Zipcode))
53450>>>                        Write   channel 7   '"'
53452>>>                        Write   channel 7   sDeli // End of Excel Column M  Т.Й.
53454>>>        
53454>>>                        Move "" to s1
53455>>>                        Clear MIAreas
53456>>>                        Move MIMhxan.Mhx_Area to MIAreas.Area_id
53457>>>                        Find Eq MIAreas by Index.1
53458>>>>
53458>>>                        Clear MIDHMOS
53459>>>                        Move (Trim(MIAreas.Area_Descr)) to MIDHMOS.Dhmos
53460>>>                        Find EQ MIDHMOS by Index.1
53461>>>>
53461>>>                        If (Found)  Move (Trim(MIDHMOS.Dhmos))  to s1
53464>>>                        Else Begin
53465>>>                            Set psNotFoundMhxanDhmos to ("*** (N) "+Trim(MIAreas.Area_Descr))
53466>>>                            Move "ZZZZ"              to s1
53467>>>                        End
53467>>>>
53467>>>                        Write   channel 7   '"'
53469>>>                        Write   channel 7   s1
53471>>>                        Write   channel 7   '"'
53473>>>                        Write   channel 7   sDeli // End of Excel Column N  Гугжк
53475>>>        
53475>>>                        Move "GR" to s1
53476>>>                        String sIsGreece
53476>>>                        Move s1 to sIsGreece
53477>>>                        Write   channel 7   '"'
53479>>>                        Write   channel 7   (Trim(s1))
53481>>>                        Write   channel 7   '"'
53483>>>                        Write   channel 7   sDeli // End of Excel Column O  ХщиШ
53485>>>        
53485>>>        
53485>>>                        Move "" to s1
53486>>>                        Clear MICities
53487>>>                        Move MIMhxan.Mhx_City to MICities.City_id
53488>>>                        Find Eq MICities by Index.1
53489>>>>
53489>>>                        Clear MINOMOS
53490>>>                        Move (Trim(MICities.City_Descr)) to MINOMOS.DESCR
53491>>>                        Find EQ MINOMOS by Index.2
53492>>>>
53492>>>                        If (Found)  Move (Trim(MINOMOS.CODE)) to s1
53495>>>                        Else Begin
53496>>>                            Set psNotFoundMhxanNomos to ("*** (P) "+Trim(MICities.City_Descr))
53497>>>                            Move "ZZZZ"              to s1
53498>>>                        End
53498>>>>
53498>>>                        Write   channel 7   '"'
53500>>>                        Write   channel 7   s1
53502>>>                        Write   channel 7   '"'
53504>>>                        Write   channel 7   sDeli // End of Excel Column P
53506>>>                        Write   channel 7   sDeli // End of Excel Column Q
53508>>>                        Write   channel 7   sDeli // End of Excel Column R
53510>>>                        Write   channel 7   '"'
53512>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_Phone))
53514>>>                        Write   channel 7   '"'
53516>>>                        Write   channel 7   sDeli // End of Excel Column S
53518>>>                        Write   channel 7   '"'
53520>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_Mobile))
53522>>>                        Write   channel 7   '"'
53524>>>                        Write   channel 7   sDeli // End of Excel Column T
53526>>>                        Write   channel 7   '"'
53528>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_Fax))
53530>>>                        Write   channel 7   '"'
53532>>>                        Write   channel 7   sDeli // End of Excel Column U
53534>>>                        Write   channel 7   '"'
53536>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_Email))
53538>>>                        Write   channel 7   '"'
53540>>>                        Write   channel 7   sDeli // End of Excel Column V
53542>>>                        Write   channel 7   sDeli // End of Excel Column W
53544>>>                        Write   channel 7   '"'
53546>>>                        Write   channel 7   (Trim(MIMhxan.Mhx_AFM))
53548>>>                        Write   channel 7   '"'
53550>>>                        Write   channel 7   sDeli // End of Excel Column X
53552>>>                        Write   channel 7   '"'
53554>>>                        Write   channel 7   ("EL"+Trim(MIMhxan.Mhx_AFM))
53556>>>                        Write   channel 7   '"'
53558>>>                        Write   channel 7   sDeli // End of Excel Column Y
53560>>>                        Write   channel 7   sDeli // End of Excel Column Z
53562>>>                        Write   channel 7   sDeli // End of Excel Column AA
53564>>>                        //---
53564>>>        
53564>>>                        Write   channel 7   '"'
53566>>>                        Write   channel 7   (Trim(psNotFoundMhxanDhmos(Self)))
53568>>>                        Write   channel 7   '"'
53570>>>                        Write   channel 7   sDeli
53572>>>        
53572>>>                        Write   channel 7   '"'
53574>>>                        Write   channel 7   (Trim(psNotFoundMhxanNomos(Self)))
53576>>>                        Write   channel 7   '"'
53578>>>                        Write   channel 7   sDeli
53580>>>        
53580>>>                        Write   channel 7   '"'
53582>>>                        Write   channel 7   (Trim(psNotFoundMhxanTrPlh(Self)))
53584>>>                        Write   channel 7   '"'
53586>>>                        Write   channel 7   sDeli
53588>>>        
53588>>>                        Write   channel 7   '"'
53590>>>                        Write   channel 7   (Trim(psNotFoundMhxanDrast(Self)))
53592>>>                        Write   channel 7   '"'
53594>>>                        //Write   Channel 7   sDeli
53594>>>        
53594>>>                        //---
53594>>>                        Writeln channel 7
53596>>>                    End // If not found tmpPagia
53596>>>>
53596>>>                End // If (Found) Begin
53596>>>>
53596>>>            End // If (MICN.Mhxanik_ID<>"") Begin
53596>>>>
53596>>>        
53596>>>        
53596>>>        
53596>>>            If (MICN.CN_CNT_ID<>"") Begin
53598>>>                Clear MIConstr
53599>>>                Move MICN.CN_CNT_ID to MIConstr.CNT_ID
53600>>>                Find Eq MIConstr by Index.5
53601>>>>
53601>>>                If (Found) Begin
53603>>>                    //---
53603>>>                    Clear tmpPagia
53604>>>                    Move "03"           to tmpPagia.Company_Code
53605>>>                    Move MICN.CN_CNT_ID   to tmpPagia.Pagia_Code
53606>>>                    Find Eq tmpPagia by Index.1
53607>>>>
53607>>>                    If (not(Found)) Begin
53609>>>                        SaveRecord tmpPagia
53610>>>                        //---
53610>>>                        Write   channel 8   '"'
53612>>>                        Write   channel 8   '03'
53614>>>                        Write   channel 8   '"'
53616>>>                        Write   channel 8   sDeli // End of Excel Column B  ОгсЫШ КжЪШиаШйгжч (з.о. зЬвслЮк, Ship - to бвз)
53618>>>                        Write   channel 8   '"'
53620>>>                        Write   channel 8   (Trim(MIConstr.CNT_ID))
53622>>>                        Write   channel 8   '"'
53624>>>                        Write   channel 8   sDeli // End of Excel Column C  ПШвШацк бчиажк брЫабцк зЬвслЮ SAP
53626>>>                        Write   channel 8   sDeli // End of Excel Column D  СмгзвЮищдЬлШа ЪаШ лжмк Ship - to
53628>>>                        Write   channel 8   sDeli // End of Excel Column E  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
53630>>>                        Write   channel 8   sDeli // End of Excel Column F  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
53632>>>                        Write   channel 8   '"'
53634>>>                        Write   channel 8   (Trim(Left(MIConstr.CNT_Name,35)))
53636>>>                        Write   channel 8   '"'
53638>>>                        Write   channel 8   sDeli // End of Excel Column G  юджгШ Уз. ПвЮи
53640>>>                        Move "" to s1
53641>>>                        If (Trim(Mid(MIConstr.CNT_Name,35,36))<>"") Move ('"'+Trim(Mid(MIConstr.CNT_Name,35,36))+'"') to s1
53644>>>                        Write   channel 8   (Trim(s1))
53646>>>                        Write   channel 8   sDeli // End of Excel Column H  СмгзвЮиргШлабц зЬЫхж йЬ зЬихзлрйЮ зжм губжк лжм зЬЫхжм Name 1 ЫЬд ЬхдШа ЬзШибтк
53648>>>                        Write   channel 8   sDeli // End of Excel Column I  ОихЭЬлШа ж гЮоШдабцк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
53650>>>                        Write   channel 8   sDeli // End of Excel Column J  ОихЭЬлШа ж зрвЮлук & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж гЬлсзлрйЮк зрвЮлщд
53652>>>        
53652>>>                        Write   channel 8   '"'
53654>>>                        Write   channel 8   (Trim(MIConstr.CNT_Address))
53656>>>                        Write   channel 8   '"'
53658>>>                        Write   channel 8   sDeli // End of Excel Column K  ОЫцк зЬвслЮ
53660>>>                        Write   channel 8   '"'
53662>>>                        Write   channel 8   (Trim(MIConstr.CNT_add_no))
53664>>>                        Write   channel 8   '"'
53666>>>                        Write   channel 8   sDeli // End of Excel Column L  АиаЯгцк
53668>>>                        Write   channel 8   '"'
53670>>>                        Write   channel 8   (Trim(MIConstr.CNT_Zipcode))
53672>>>                        Write   channel 8   '"'
53674>>>                        Write   channel 8   sDeli // End of Excel Column M  Т.Й.
53676>>>        
53676>>>                        Move "" to s1
53677>>>                        Clear MIAreas
53678>>>                        Move MIConstr.CNT_Area to MIAreas.Area_id
53679>>>                        Find Eq MIAreas by Index.1
53680>>>>
53680>>>                        Clear MIDHMOS
53681>>>                        Move (Trim(MIAreas.Area_Descr)) to MIDHMOS.Dhmos
53682>>>                        Find EQ MIDHMOS by Index.1
53683>>>>
53683>>>                        If (Found)  Move (Trim(MIDHMOS.Dhmos))  to s1
53686>>>                        Else Begin
53687>>>                            Set psNotFoundConstrDhmos to ("*** (N) "+Trim(MIAreas.Area_Descr))
53688>>>                            Move "ZZZZ"              to s1
53689>>>                        End
53689>>>>
53689>>>                        Write   channel 8   '"'
53691>>>                        Write   channel 8   s1
53693>>>                        Write   channel 8   '"'
53695>>>                        Write   channel 8   sDeli // End of Excel Column N  Гугжк
53697>>>        
53697>>>                        Move "GR" to s1
53698>>>                        Move s1 to sIsGreece
53699>>>                        Write   channel 8   '"'
53701>>>                        Write   channel 8   (Trim(s1))
53703>>>                        Write   channel 8   '"'
53705>>>                        Write   channel 8   sDeli // End of Excel Column O  ХщиШ
53707>>>        
53707>>>                        Move "" to s1
53708>>>                        Clear MICities
53709>>>                        Move MIConstr.CNT_City to MICities.City_id
53710>>>                        Find Eq MICities by Index.1
53711>>>>
53711>>>                        Clear MINOMOS
53712>>>                        Move (Trim(MICities.City_Descr)) to MINOMOS.DESCR
53713>>>                        Find EQ MINOMOS by Index.2
53714>>>>
53714>>>                        If (Found)  Move (Trim(MINOMOS.CODE)) to s1
53717>>>                        Else Begin
53718>>>                            Set psNotFoundConstrNomos to ("*** (P) "+Trim(MICities.City_Descr))
53719>>>                            Move "ZZZZ"              to s1
53720>>>                        End
53720>>>>
53720>>>                        Write   channel 8   '"'
53722>>>                        Write   channel 8   s1
53724>>>                        Write   channel 8   '"'
53726>>>                        Write   channel 8   sDeli // End of Excel Column P
53728>>>                        Write   channel 8   sDeli // End of Excel Column Q
53730>>>                        Write   channel 8   sDeli // End of Excel Column R
53732>>>                        Write   channel 8   '"'
53734>>>                        Write   channel 8   (Trim(MIConstr.CNT_Phone))
53736>>>                        Write   channel 8   '"'
53738>>>                        Write   channel 8   sDeli // End of Excel Column S
53740>>>                        Write   channel 8   '"'
53742>>>                        Write   channel 8   (Trim(MIConstr.CNT_Mobile))
53744>>>                        Write   channel 8   '"'
53746>>>                        Write   channel 8   sDeli // End of Excel Column T
53748>>>                        Write   channel 8   '"'
53750>>>                        Write   channel 8   (Trim(MIConstr.CNT_Fax))
53752>>>                        Write   channel 8   '"'
53754>>>                        Write   channel 8   sDeli // End of Excel Column U
53756>>>                        Write   channel 8   '"'
53758>>>                        Write   channel 8   (Trim(MIConstr.CNT_Email))
53760>>>                        Write   channel 8   '"'
53762>>>                        Write   channel 8   sDeli // End of Excel Column V
53764>>>                        Write   channel 8   sDeli // End of Excel Column W
53766>>>                        Write   channel 8   '"'
53768>>>                        Write   channel 8   (Trim(MIConstr.CNT_AFM))
53770>>>                        Write   channel 8   '"'
53772>>>                        Write   channel 8   sDeli // End of Excel Column X
53774>>>                        Write   channel 8   '"'
53776>>>                        Write   channel 8   ("EL"+Trim(MIConstr.CNT_AFM))
53778>>>                        Write   channel 8   '"'
53780>>>                        Write   channel 8   sDeli // End of Excel Column Y
53782>>>                        Write   channel 8   sDeli // End of Excel Column Z
53784>>>                        Write   channel 8   sDeli // End of Excel Column AA
53786>>>                        //---
53786>>>        
53786>>>                        Write   channel 8   '"'
53788>>>                        Write   channel 8   (Trim(psNotFoundConstrDhmos(Self)))
53790>>>                        Write   channel 8   '"'
53792>>>                        Write   channel 8   sDeli
53794>>>        
53794>>>                        Write   channel 8   '"'
53796>>>                        Write   channel 8   (Trim(psNotFoundConstrNomos(Self)))
53798>>>                        Write   channel 8   '"'
53800>>>                        Write   channel 8   sDeli
53802>>>        
53802>>>                        Write   channel 8   '"'
53804>>>                        Write   channel 8   (Trim(psNotFoundConstrTrPlh(Self)))
53806>>>                        Write   channel 8   '"'
53808>>>                        Write   channel 8   sDeli
53810>>>        
53810>>>                        Write   channel 8   '"'
53812>>>                        Write   channel 8   (Trim(psNotFoundConstrDrast(Self)))
53814>>>                        Write   channel 8   '"'
53816>>>                        //Write   Channel 8   sDeli
53816>>>        
53816>>>                        //---
53816>>>                        Writeln channel 8
53818>>>                    End // If not found tmpPagia
53818>>>>
53818>>>                End // If (Found) Begin
53818>>>>
53818>>>            End // If (MICN.CN_CNT_ID<>"") Begin
53818>>>>
53818>>>        
53818>>>        
53818>>>        
53818>>>            If (MICN.CN_SLS_ID<>"") Begin
53820>>>                Clear MISalesm
53821>>>                Move MICN.CN_SLS_ID to MISalesm.SLS_ID
53822>>>                Find Eq MISalesm by Index.4
53823>>>>
53823>>>                If (Found) Begin
53825>>>                    //---
53825>>>                    Clear tmpPagia
53826>>>                    Move "04"           to tmpPagia.Company_Code
53827>>>                    Move MICN.CN_SLS_ID   to tmpPagia.Pagia_Code
53828>>>                    Find Eq tmpPagia by Index.1
53829>>>>
53829>>>                    If (not(Found)) Begin
53831>>>                        SaveRecord tmpPagia
53832>>>                        //---
53832>>>                        Write   channel 6   '"'
53834>>>                        Write   channel 6   '04'
53836>>>                        Write   channel 6   '"'
53838>>>                        Write   channel 6   sDeli // End of Excel Column B  ОгсЫШ КжЪШиаШйгжч (з.о. зЬвслЮк, Ship - to бвз)
53840>>>                        Write   channel 6   '"'
53842>>>                        Write   channel 6   (Trim(MISalesm.SLS_ID))
53844>>>                        Write   channel 6   '"'
53846>>>                        Write   channel 6   sDeli // End of Excel Column C  ПШвШацк бчиажк брЫабцк зЬвслЮ SAP
53848>>>                        Write   channel 6   sDeli // End of Excel Column D  СмгзвЮищдЬлШа ЪаШ лжмк Ship - to
53850>>>                        Write   channel 6   sDeli // End of Excel Column E  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
53852>>>                        Write   channel 6   sDeli // End of Excel Column F  СЬ зЬихзлрйЮ зжм ж звЮирлук ЫаШнтиЬа Шзц лжд Operational Customer, йлжд Operational жихЭЬлШа ж звЮирлук
53854>>>                        Write   channel 6   '"'
53856>>>                        Write   channel 6   (Trim(Left(MISalesm.SLS_Name,35)))
53858>>>                        Write   channel 6   '"'
53860>>>                        Write   channel 6   sDeli // End of Excel Column G  юджгШ Уз. ПвЮи
53862>>>                        Move "" to s1
53863>>>                        If (Trim(Mid(MISalesm.SLS_Name,35,36))<>"") Move ('"'+Trim(Mid(MISalesm.SLS_Name,35,36))+'"') to s1
53866>>>                        Write   channel 6   (Trim(s1))
53868>>>                        Write   channel 6   sDeli // End of Excel Column H  СмгзвЮиргШлабц зЬЫхж йЬ зЬихзлрйЮ зжм губжк лжм зЬЫхжм Name 1 ЫЬд ЬхдШа ЬзШибтк
53870>>>                        Write   channel 6   sDeli // End of Excel Column I  ОихЭЬлШа ж гЮоШдабцк & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж "Customer Master Records_GR Others"
53872>>>                        Write   channel 6   sDeli // End of Excel Column J  ОихЭЬлШа ж зрвЮлук & оиЮйагжзжаЬхлШа ж брЫабцк зжм тоЬа бШлШориЮЯЬх йлж ШиоЬхж гЬлсзлрйЮк зрвЮлщд
53874>>>        
53874>>>                        Write   channel 6   '"'
53876>>>                        Write   channel 6   (Trim(MISalesm.SLS_Address))
53878>>>                        Write   channel 6   '"'
53880>>>                        Write   channel 6   sDeli // End of Excel Column K  ОЫцк зЬвслЮ
53882>>>                        Write   channel 6   '"'
53884>>>                        Write   channel 6   (Trim(MISalesm.SLS_add_no))
53886>>>                        Write   channel 6   '"'
53888>>>                        Write   channel 6   sDeli // End of Excel Column L  АиаЯгцк
53890>>>                        Write   channel 6   '"'
53892>>>                        Write   channel 6   (Trim(MISalesm.SLS_Zipcode))
53894>>>                        Write   channel 6   '"'
53896>>>                        Write   channel 6   sDeli // End of Excel Column M  Т.Й.
53898>>>        
53898>>>                        Move "" to s1
53899>>>                        Clear MIAreas
53900>>>                        Move MISalesm.SLS_Area to MIAreas.Area_id
53901>>>                        Find Eq MIAreas by Index.1
53902>>>>
53902>>>                        Clear MIDHMOS
53903>>>                        Move (Trim(MIAreas.Area_Descr)) to MIDHMOS.Dhmos
53904>>>                        Find EQ MIDHMOS by Index.1
53905>>>>
53905>>>                        If (Found)  Move (Trim(MIDHMOS.Dhmos))  to s1
53908>>>                        Else Begin
53909>>>                            Set psNotFoundSalesDhmos to ("*** (N) "+Trim(MIAreas.Area_Descr))
53910>>>                            Move "ZZZZ"              to s1
53911>>>                        End
53911>>>>
53911>>>                        Write   channel 6   '"'
53913>>>                        Write   channel 6   s1
53915>>>                        Write   channel 6   '"'
53917>>>                        Write   channel 6   sDeli // End of Excel Column N  Гугжк
53919>>>        
53919>>>                        Move "GR" to s1
53920>>>                        Move s1 to sIsGreece
53921>>>                        Write   channel 6   '"'
53923>>>                        Write   channel 6   (Trim(s1))
53925>>>                        Write   channel 6   '"'
53927>>>                        Write   channel 6   sDeli // End of Excel Column O  ХщиШ
53929>>>        
53929>>>                        Move "" to s1
53930>>>                        Clear MICities
53931>>>                        Move MISalesm.SLS_City to MICities.City_id
53932>>>                        Find Eq MICities by Index.1
53933>>>>
53933>>>                        Clear MINOMOS
53934>>>                        Move (Trim(MICities.City_Descr)) to MINOMOS.DESCR
53935>>>                        Find EQ MINOMOS by Index.2
53936>>>>
53936>>>                        If (Found)  Move (Trim(MINOMOS.CODE)) to s1
53939>>>                        Else Begin
53940>>>                            Set psNotFoundSalesNomos to ("*** (P) "+Trim(MICities.City_Descr))
53941>>>                            Move "ZZZZ"              to s1
53942>>>                        End
53942>>>>
53942>>>                        Write   channel 6   '"'
53944>>>                        Write   channel 6   s1
53946>>>                        Write   channel 6   '"'
53948>>>                        Write   channel 6   sDeli // End of Excel Column P
53950>>>                        Write   channel 6   sDeli // End of Excel Column Q
53952>>>                        Write   channel 6   sDeli // End of Excel Column R
53954>>>                        Write   channel 6   '"'
53956>>>                        Write   channel 6   (Trim(MISalesm.SLS_Phone))
53958>>>                        Write   channel 6   '"'
53960>>>                        Write   channel 6   sDeli // End of Excel Column S
53962>>>                        Write   channel 6   '"'
53964>>>                        Write   channel 6   (Trim(MISalesm.SLS_Mobile))
53966>>>                        Write   channel 6   '"'
53968>>>                        Write   channel 6   sDeli // End of Excel Column T
53970>>>                        Write   channel 6   '"'
53972>>>                        Write   channel 6   (Trim(MISalesm.SLS_Fax))
53974>>>                        Write   channel 6   '"'
53976>>>                        Write   channel 6   sDeli // End of Excel Column U
53978>>>                        Write   channel 6   '"'
53980>>>                        Write   channel 6   (Trim(MISalesm.SLS_Email))
53982>>>                        Write   channel 6   '"'
53984>>>                        Write   channel 6   sDeli // End of Excel Column V
53986>>>                        Write   channel 6   sDeli // End of Excel Column W
53988>>>                        Write   channel 6   '"'
53990>>>                        Write   channel 6   (Trim(MISalesm.SLS_AFM))
53992>>>                        Write   channel 6   '"'
53994>>>                        Write   channel 6   sDeli // End of Excel Column X
53996>>>                        Write   channel 6   '"'
53998>>>                        Write   channel 6   ("EL"+Trim(MISalesm.SLS_AFM))
54000>>>                        Write   channel 6   '"'
54002>>>                        Write   channel 6   sDeli // End of Excel Column Y
54004>>>                        Write   channel 6   sDeli // End of Excel Column Z
54006>>>                        Write   channel 6   sDeli // End of Excel Column AA
54008>>>                        //---
54008>>>        
54008>>>                        Write   channel 6   '"'
54010>>>                        Write   channel 6   (Trim(psNotFoundSalesDhmos(Self)))
54012>>>                        Write   channel 6   '"'
54014>>>                        Write   channel 6   sDeli
54016>>>        
54016>>>                        Write   channel 6   '"'
54018>>>                        Write   channel 6   (Trim(psNotFoundSalesNomos(Self)))
54020>>>                        Write   channel 6   '"'
54022>>>                        Write   channel 6   sDeli
54024>>>        
54024>>>                        Write   channel 6   '"'
54026>>>                        Write   channel 6   (Trim(psNotFoundSalesTrPlh(Self)))
54028>>>                        Write   channel 6   '"'
54030>>>                        Write   channel 6   sDeli
54032>>>        
54032>>>                        Write   channel 6   '"'
54034>>>                        Write   channel 6   (Trim(psNotFoundSalesDrast(Self)))
54036>>>                        Write   channel 6   '"'
54038>>>                        //Write   Channel 6   sDeli
54038>>>        
54038>>>                        //---
54038>>>                        Writeln channel 6
54040>>>                    End // If not found tmpPagia
54040>>>>
54040>>>                End // If (Found) Begin
54040>>>>
54040>>>            End // If (MICN.CN_SLS_ID<>"") Begin
54040>>>>
54040>>>        
54040>>>        
54040>>>        End_Procedure
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        
54041>>>        //AB-StoreEnd
54041>>>
54041>>>    End_Object    // Button5
54042>>>    Object TextBox10 is a TextBox
54044>>>        Set Label to "юджгШ ШиоЬхжм"
54045>>>        Set Auto_Size_State to False
54046>>>        Set Location to 34 53
54047>>>        Set Size to 10 55
54048>>>        Set TypeFace to "MS Sans Serif"
54049>>>    End_Object    // TextBox10
54050>>>
54050>>>    Object SaveAsDialog1 is a SaveAsDialog
54052>>>        Set Location to 292 33
54053>>>
54053>>>        //AB-StoreStart
54053>>>        //Show_Dialog is a predefined function method in the SaveAsDialog class
54053>>>        //get Show_Dialog to an integer variable to call the SaveAsDialog
54053>>>        //
54053>>>        //DoCallSaveAsDialog is NOT a predefined method in the SaveAsDialog class
54053>>>        //DoCallSaveAsDialog it is just used an example
54053>>>        //you can send DoCallSaveAsDialog from another object, such as a button
54053>>>        //
54053>>>        //Procedure DoCallSaveAsDialog
54053>>>        //    integer iVoid
54053>>>        //    get Show_Dialog of SaveAsDialog1 to iVoid
54053>>>        //End_Procedure  // DoCallSaveAsDialog
54053>>>        //AB-StoreEnd
54053>>>
54053>>>    End_Object    // SaveAsDialog1
54054>>>
54054>>>End_Object // ExportFromSMSMI2
54055>        //Use ExportFromSMSMI2DEOP_NEW.vw
54055>        //Use ExportDeopNew1.vw
54055>        Use ExportDeopNew2.vw
Including file: ExportDeopNew2.vw    (L:\VDF14.1.Dev\TITAN_MIGRATE\AppSrc\ExportDeopNew2.vw)
54055>>>// L:\VDF14.1.Dev\TITAN_MIGRATE\AppSrc\ExportDEOPNew2.vw
54055>>>// ExportDEOPNew2
54055>>>//
54055>>>
54055>>>Use DFClient.pkg
54055>>>Use DFEntry.pkg
54055>>>
54055>>>//Open MIClient
54055>>>//Open MICN
54055>>>//Open MICONSTR
54055>>>//Open MISalesm
54055>>>//Open MIMHXAN
54055>>>//Open MIPRESP
54055>>>//Open MICodtyp
54055>>>//Open MIcodema
54055>>>//Open MIORDH
54055>>>//Open MIORDD
54055>>>//Open MIAREAS
54055>>>//Open MICities
54055>>>//Open MITOWNS
54055>>>//Open MICOUNTR
54055>>>//
54055>>>////Open MINOMOS
54055>>>////Open MIDHMOS
54055>>>////Open MIDRAST
54055>>>
54055>>>
54055>>>Activate_View Activate_ExportDeopNew2 for ExportDEOPNew2
54065>>>>
54065>>>Object ExportDEOPNew2 is a dbView
54067>>>    Set Location to 4 9
54068>>>    Set Size to 122 411
54069>>>    Set Label to "ДеШЪрЪу ГДОП"
54070>>>    Set Border_Style to Border_Thick
54071>>>    Set Color to 13631219
54072>>>
54072>>>    Open rptmp
54074>>>
54074>>>    Procedure Activate_View Returns Integer
54077>>>        Integer rVal
54077>>>        Forward Get MSG_Activate_View to rVal
54079>>>
54079>>>        Send IGNORE_ERROR to ERROR_INFO_OBJECT 4358
54080>>>        Make_Directory "C:\TitanMig"
54081>>>        Send TRAP_ERROR to ERROR_INFO_OBJECT 4358
54082>>>
54082>>>        Procedure_Return rVal
54083>>>    End_Procedure
54084>>>
54084>>>
54084>>>    Object frmFileName is a Form
54086>>>
54086>>>        //AB-StoreTopStart
54086>>>        //AB-StoreTopEnd
54086>>>
54086>>>        Set Size to 13 187
54087>>>        Set Location to 33 112
54088>>>        Set Label_Col_Offset to 2
54089>>>        Set Prompt_Button_Mode to pb_PromptOn
54090>>>        Set Form_TypeFace item 0 to "MS Sans Serif"
54091>>>        Set Value item 0 to "C:\TitanMig\SMSMI_DEOP_Header.csv"
54092>>>
54092>>>        //AB-StoreStart
54092>>>
54092>>>        Procedure Prompt
54095>>>            Boolean bSave
54095>>>            String sFileTitle sFileName
54095>>>            Get Show_Dialog of (SaveAsDialog1(Self)) to bSave
54096>>>            If (bSave) Begin
54098>>>                Get File_Title of (SaveAsDialog1(Self)) to sFileTitle
54099>>>                Get File_Name  of (SaveAsDialog1(Self)) to sFileName
54100>>>                Set Value of frmFileName item 0 to sFileName
54101>>>            End
54101>>>>
54101>>>        End_Procedure
54102>>>
54102>>>        //AB-StoreEnd
54102>>>
54102>>>    End_Object    // frmFileName
54103>>>
54103>>>    Object Button5 is a Button
54105>>>
54105>>>        //AB-StoreTopStart
54105>>>
54105>>>        Property String psNotFoundClientDhmos Public ""
54107>>>        Property String psNotFoundClientNomos Public ""
54109>>>        Property String psNotFoundClientDrast Public ""
54111>>>        Property String psNotFoundClientTrPlh Public ""
54113>>>
54113>>>        Property String psNotFoundErgoDhmos Public ""
54115>>>        Property String psNotFoundErgoNomos Public ""
54117>>>        Property String psNotFoundErgoDrast Public ""
54119>>>        Property String psNotFoundErgoTrPlh Public ""
54121>>>
54121>>>        Property String psNotFoundPrespDhmos Public ""
54123>>>        Property String psNotFoundPrespNomos Public ""
54125>>>        Property String psNotFoundPrespDrast Public ""
54127>>>        Property String psNotFoundPrespTrPlh Public ""
54129>>>
54129>>>        Property String psNotFoundMhxanDhmos Public ""
54131>>>        Property String psNotFoundMhxanNomos Public ""
54133>>>        Property String psNotFoundMhxanDrast Public ""
54135>>>        Property String psNotFoundMhxanTrPlh Public ""
54137>>>
54137>>>        Property String psNotFoundConstrDhmos Public ""
54139>>>        Property String psNotFoundConstrNomos Public ""
54141>>>        Property String psNotFoundConstrDrast Public ""
54143>>>        Property String psNotFoundConstrTrPlh Public ""
54145>>>
54145>>>        Property String psNotFoundSalesDhmos Public ""
54147>>>        Property String psNotFoundSalesNomos Public ""
54149>>>        Property String psNotFoundSalesDrast Public ""
54151>>>        Property String psNotFoundSalesTrPlh Public ""
54153>>>
54153>>>
54153>>>        Function fsTropoiPlhromhsPelath String asOurCode Returns String
54156>>>            String sTheirCode
54156>>>
54156>>>            If      (asOurCode="K000") Move "G000" to sTheirCode
54159>>>            Else If (asOurCode="K030") Move "G030" to sTheirCode
54163>>>            Else If (asOurCode="K060") Move "G060" to sTheirCode
54167>>>            Else If (asOurCode="K090") Move "G090" to sTheirCode
54171>>>            Else If (asOurCode="K120") Move "G120" to sTheirCode
54175>>>            Else If (asOurCode="K150") Move "G150" to sTheirCode
54179>>>            Else If (asOurCode="K180") Move "G180" to sTheirCode
54183>>>            Else If (asOurCode="K210") Move "G210" to sTheirCode
54187>>>            Else If (asOurCode="K240") Move "G240" to sTheirCode
54191>>>            Else If (asOurCode="K270") Move "G270" to sTheirCode
54195>>>            Else If (asOurCode="K300") Move "G300" to sTheirCode
54199>>>            Else If (asOurCode="K330") Move "G330" to sTheirCode
54203>>>            Else If (asOurCode="K360") Move "G360" to sTheirCode
54207>>>            Else Begin
54208>>>                Set psNotFoundClientTrPlh to (Trim("*** (AW+BN) "+asOurCode))
54209>>>                Move "ZZZZ" to sTheirCode
54210>>>            End
54210>>>>
54210>>>            Function_Return sTheirCode
54211>>>        End_Function
54212>>>
54212>>>
54212>>>        //AB-StoreTopEnd
54212>>>
54212>>>        Set Label to "ДНАВЧВЖ ГДГОЛДМЧМ"
54213>>>        Set Size to 20 391
54214>>>        Set Location to 51 10
54215>>>        Set Focus_Mode to Pointer_Only
54216>>>        Set Form_FontWeight item 0 to 600
54217>>>        Set Form_TypeFace item 0 to "MS Sans Serif"
54218>>>
54218>>>        //AB-StoreStart
54218>>>
54218>>>        Procedure OnClick
54221>>>            String sFilename sLabel
54221>>>            Integer bIsCreated
54221>>>            Integer iWhat iVal
54221>>>            Get Label to sLabel
54222>>>            Get Value of frmFileName item 0 to sFilename
54223>>>            If (Trim(sFilename)="") Begin
54225>>>                Send Stop_Box "Тж цджгШ лжм ШиЬхжм ЬхдШа бЬдц" "СнсвгШ 1002"
54226>>>                Procedure_Return
54227>>>            End
54227>>>>
54227>>>
54227>>>            Direct_Output channel 9 sFilename
54229>>>
54229>>>            String sFileName1
54229>>>            Move "C:\TitanMig\SMSMI_DEOP_Details1.csv" to sFileName1
54230>>>            Direct_Output channel 5 sFileName1
54232>>>
54232>>>            String sFileName2
54232>>>            Move "C:\TitanMig\SMSMI_DEOP_Details2.csv" to sFileName2
54233>>>            Direct_Output channel 6 sFileName2
54235>>>
54235>>>            String sFileName3
54235>>>            Move "C:\TitanMig\SMSMI_DEOP_Details3.csv" to sFileName3
54236>>>            Direct_Output channel 7 sFileName3
54238>>>
54238>>>            String sFileName4
54238>>>            Move "C:\TitanMig\SMSMI_DEOP_Details4.csv" to sFileName4
54239>>>            Direct_Output channel 8 sFileName4
54241>>>
54241>>>            Integer iCnt iFS
54241>>>            Move 0 to iCnt
54242>>>            File_Size MIClient to iFS
54245>>>            String sMess
54245>>>
54245>>>            Clear MIORDH
54246>>>            Find GE MIORDH.Recnum
54247>>>>
54247>>>            While (Found)
54251>>>                Add 1 to iCnt
54252>>>                Move (String(iCnt)+"/"+String(iFS)) to sMess
54253>>>                Set Label to sMess
54254>>>
54254>>>                Send Output_DEOP_Header
54255>>>                Send Output_DEOP_Details
54256>>>
54256>>>                Find GT MIORDH.Recnum
54257>>>>
54257>>>            Loop
54258>>>>
54258>>>
54258>>>            Close_Output channel 5
54260>>>            Close_Output channel 6
54262>>>            Close_Output channel 7
54264>>>            Close_Output channel 8
54266>>>            Close_Output channel 9
54268>>>
54268>>>            Set Label to sLabel
54269>>>            Send Info_Box "Process Finished, the file is saved" "Information"
54270>>>        End_Procedure // OnClick
54271>>>
54271>>>
54271>>>        Procedure Output_DEOP_Header
54274>>>            String  sAADeop sDeli sMIOrdHRecr s1
54274>>>            Integer iRecnum
54274>>>
54274>>>            Move MIORDH.Recnum  to iRecnum
54275>>>            Move MIORDH.AA_DEOP to sAADeop
54276>>>            If (iRecnum<=0) Begin
54278>>>                Send Stop_Box ("ПицЩвЮгШ гЬ лЮд ЬдЬиЪу ЬЪЪиШну лжм ГДОП: "+Trim(MIORDH.AA_DEOP)) "СнвШгШ 1101"
54279>>>                Procedure_Return
54280>>>            End
54280>>>>
54280>>>            Move ","                to sDeli
54281>>>
54281>>>            Write   channel 9   '"'
54283>>>            Write   channel 9   'YCQR'
54285>>>            Write   channel 9   '"'
54287>>>            Write   channel 9   sDeli // End of Excel Column B  Тчзжк СмгЩжвШхжм
54289>>>            Write   channel 9   '"'
54291>>>            Write   channel 9   'GR02'
54293>>>            Write   channel 9   '"'
54295>>>            Write   channel 9   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд ДввсЫШк
54297>>>            Write   channel 9   '"'
54299>>>            Write   channel 9   "03"
54301>>>            Write   channel 9   '"'
54303>>>            Write   channel 9   sDeli // End of Excel Column D  ЙШдсва ГаШджгук
54305>>>            Write   channel 9   '"'
54307>>>            Write   channel 9   "04"
54309>>>            Write   channel 9   '"'
54311>>>            Write   channel 9   sDeli // End of Excel Column E  ТгугШ (Segment)
54313>>>            Write   channel 9   '"'
54315>>>
54315>>>            Write   channel 9   (Trim(MICN.CN_PUMPID))          // GR32 - Sales Office
54317>>>
54317>>>            Write   channel 9   '"'
54319>>>            Write   channel 9   sDeli // End of Excel Column F  Sales Office
54321>>>            Write   channel 9   '"'
54323>>>            Write   channel 9   ''  // 001 - Metamorfosi
54325>>>            Write   channel 9   '"'
54327>>>            Write   channel 9   sDeli // End of Excel Column G  Sales Group
54329>>>            Write   channel 9   '"'
54331>>>            Write   channel 9   (Trim(MIORDH.CLIENT_ID))
54333>>>            Write   channel 9   '"'
54335>>>            Write   channel 9   sDeli // End of Excel Column H  ПШвШацк бчиажк брЫабцк зЬвслЮ
54337>>>            Write   channel 9   '"'
54339>>>            Write   channel 9   (Trim(MIORDH.CN_CODE))
54341>>>            Write   channel 9   '"'
54343>>>            Write   channel 9   sDeli // End of Excel Column I  ПШвШацк бчиажк брЫабцк зШиШвузлЮ (тиЪжм)
54345>>>            Clear MICN
54346>>>            Move MIORDH.CN_CODE to MICN.CN_CODE
54347>>>            Find Eq MICN by Index.5
54348>>>>
54348>>>            Write   channel 9   '"'
54350>>>            Write   channel 9   (Trim(MICN.CN_SLS_ID))
54352>>>            Write   channel 9   '"'
54354>>>            Write   channel 9   sDeli // End of Excel Column J  ПШвШацк бчиажк брЫабцк ПрвЮлу
54356>>>            Clear MICLIENT
54357>>>            Move MIORDH.CLIENT_ID to MICLIENT.CLIENT_ID
54358>>>            Find Eq MICLIENT by Index.6
54359>>>>
54359>>>            Clear MIPRESP
54360>>>            Move MICLIENT.PRESP_ID to MIPRESP.PRESP_ID
54361>>>            Find EQ MIPRESP by Index.7
54362>>>>
54362>>>            Write   channel 9   '"'
54364>>>            Write   channel 9   (Trim(MIPRESP.PRESP_ID))
54366>>>            Write   channel 9   '"'
54368>>>            Write   channel 9   sDeli // End of Excel Column K  ПШвШацк бчиажк брЫабцк ПвЮирлу
54370>>>            Write   channel 9   '"'
54372>>>            Write   channel 9   (Trim(MICN.CN_CNT_ID))
54374>>>            Write   channel 9   '"'
54376>>>            Write   channel 9   sDeli // End of Excel Column L  ПШвШацк бчиажк брЫабцк ДиЪжвсЩжм
54378>>>            Write   channel 9   '"'
54380>>>            Write   channel 9   (Trim(MICN.MHXANIK_ID))
54382>>>            Write   channel 9   '"'
54384>>>            Write   channel 9   sDeli // End of Excel Column M  ПШвШацк бчиажк брЫабцк ЛЮоШдабжч
54386>>>            Write   channel 9   '"'
54388>>>            Write   channel 9   (Trim(MIORDH.CN_CODE))
54390>>>            Write   channel 9   '"'
54392>>>            Write   channel 9   sDeli // End of Excel Column N  ПШвШацк бчиажк брЫабцк ыиЪжм (Узж-ыиЪжм)
54394>>>            Write   channel 9   '"'
54396>>>            Write   channel 9   (Trim(MIORDH.DEOP_DATE))
54398>>>            Write   channel 9   '"'
54400>>>            Write   channel 9   sDeli // End of Excel Column O  Ийочк Азц
54402>>>            Write   channel 9   '"'
54404>>>            Write   channel 9   (Trim(MIORDH.DEOP_LHXH))
54406>>>            Write   channel 9   '"'
54408>>>            Write   channel 9   sDeli // End of Excel Column P  Ийочк ырк
54410>>>            If (MICN.TROPOS_METAF="C&F") Move "CFR" to s1
54413>>>            Else                         Move "FOB" to s1
54415>>>            Write   channel 9   '"'
54417>>>            Write   channel 9   s1
54419>>>            Write   channel 9   '"'
54421>>>            Write   channel 9   sDeli // End of Excel Column Q  юижк ПШисЫжйЮк
54423>>>            Write   channel 9   '"'
54425>>>            Write   channel 9   (Trim(fsTropoiPlhromhsPelath(Self,Trim(MIORDH.TIMEOUT))))
54427>>>            Write   channel 9   '"'
54429>>>            Write   channel 9   sDeli // End of Excel Column R  юижк ПвЮиргук
54431>>>            Write   channel 9   '"'
54433>>>            Write   channel 9   '' // X - INCOMING CHECKS
54435>>>            Write   channel 9   '"'
54437>>>            Write   channel 9   sDeli // End of Excel Column S  Тицзжк ПвЮиргук
54439>>>            Write   channel 9   '"'
54441>>>            Write   channel 9   (Trim(MIORDH.ELEIPH))
54443>>>            Write   channel 9   '"'
54445>>>            Write   channel 9   sDeli // End of Excel Column T  ДввЬазтк Фжилхж (йЬ m3)
54447>>>
54447>>>            Write   channel 9   '"'
54449>>>            Write   channel 9   ''
54451>>>            Write   channel 9   '"'
54453>>>            Write   channel 9   sDeli // End of Excel Column U  ГасйлЮгШ Шзц лж жзжхж оиЬщдждлШа бШЯмйлЬиуйЬак
54455>>>            Write   channel 9   '"'
54457>>>            Write   channel 9   ''
54459>>>            Write   channel 9   '"'
54461>>>            Write   channel 9   sDeli // End of Excel Column V  Sales Group     ПаЯШду ПсЪаШ ХитрйЮ ПШиШЪрЪук
54463>>>            Write   channel 9   '"'
54465>>>            Write   channel 9   ''
54467>>>            Write   channel 9   '"'
54469>>>            Write   channel 9   sDeli // End of Excel Column W  ДзтблШйЮ ЧиШихжм Азц
54471>>>            Write   channel 9   '"'
54473>>>            Write   channel 9   ''
54475>>>            Write   channel 9   '"'
54477>>>            Write   channel 9   sDeli // End of Excel Column X  ДзтблШйЮ ЧиШихжм ырк
54479>>>            Write   channel 9   '"'
54481>>>            Write   channel 9   '' // 111111111 (ЙрЫабцк СбмижЫтгШлжк)
54483>>>            Write   channel 9   '"'
54485>>>            Write   channel 9   sDeli // End of Excel Column Y  Reference ЙрЫабцк Увабжч (цзрк тоЬа жиайлЬх йлШ migration ШиоЬхШ лжм MM)
54487>>>            Write   channel 9   '"'
54489>>>            Write   channel 9   (Trim(MICN.CN_PUMPLICENSE)) // R001 - ЛждсЫШ Дл.СбмижЫ. АдлагсоЬаШк
54491>>>            Write   channel 9   '"'
54493>>>            Write   channel 9   sDeli // End of Excel Column Z  ДиЪжйлсйаж зШисЫжйЮк
54495>>>            Write   channel 9   '"'
54497>>>            Write   channel 9   (Trim(MICN.CN_VDETAILS)) // ZONH ПДИВРАФЖ (ДожмгЬ бШа лШ ШввШ ймжаоЬаШ йлШ ПЬЫаШ
54499>>>                                                         //Move (Trim(Zones.ZONE_DESCR))   to MICN.CN_VDETAILS
54499>>>                                                         //Move Zones.ZONE_ID              to MICN.CN_CLIENTMATCH
54499>>>                                                         //Move Brzones.BRZONE_RECR        to MICN.CN_ZONE
54499>>>            Write   channel 9   '"'
54501>>>            Write   channel 9   sDeli // End of Excel Column AA  ЕщдЮ
54503>>>            Write   channel 9   '"'
54505>>>            Write   channel 9   MICN.CN_M3
54507>>>            Write   channel 9   '"'
54509>>>            Write   channel 9   sDeli // End of Excel Column AB  ПжйцлЮлШ
54511>>>            Write   channel 9   '"'
54513>>>            Write   channel 9   'm3'
54515>>>            Write   channel 9   '"'
54517>>>            Write   channel 9   sDeli // End of Excel Column AC  ЛждсЫШ ЛтлиЮйЮк
54519>>>            Write   channel 9   '"'
54521>>>            Write   channel 9   'EUR'
54523>>>            Write   channel 9   '"'
54525>>>            Write   channel 9   sDeli // End of Excel Column AD  МцгайгШ
54527>>>
54527>>>            // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП
54527>>>            Write   channel 9   '"'
54529>>>            Write   channel 9   (Trim(MIORDH.AA_DEOP))
54531>>>            Write   channel 9   '"'
54533>>>            Write   channel 9   sDeli // End of Excel Column AE
54535>>>            // ПижйЯЬлжмгЬ ЬгЬак лж ОКА ПКУМ АМДУ
54535>>>            Move "" to s1
54536>>>            If      (Trim(MIOrdH.VELXR)='2') Move "ОКА"     to s1
54539>>>            Else If (Trim(MIOrdH.VELXR)='0') Move "АМДУ"    to s1
54543>>>            Else If (Trim(MIOrdH.VELXR)='1') Move "ПКУМ"    to s1
54547>>>            Write   channel 9   '"'
54549>>>            Write   channel 9   (Trim(s1))  // End of Excel Column AF
54551>>>            Write   channel 9   '"'
54553>>>            //Write   Channel 9   sDeli
54553>>>            //---
54553>>>            Writeln channel 9
54555>>>        End_Procedure
54556>>>
54556>>>        Procedure Output_DEOP_Details
54559>>>            String  sAADeop sDeli sMIOrdHRecr s1 sOrdH_Recr
54559>>>            Integer iRecnum
54559>>>
54559>>>            Move MIORDH.Recnum  to iRecnum
54560>>>            Move MIORDH.AA_DEOP to sAADeop
54561>>>            Move MIORDH.RECR    to sOrdH_Recr
54562>>>            If (iRecnum<=0) Begin
54564>>>                Send Stop_Box ("ПицЩвЮгШ гЬ лЮд ЬдЬиЪу ЬЪЪиШну лжм ГДОП: "+Trim(MIORDH.AA_DEOP)) "СнвШгШ 3333"
54565>>>                Procedure_Return
54566>>>            End
54566>>>>
54566>>>            Move ","                to sDeli
54567>>>
54567>>>
54567>>>            Clear MIORDD
54568>>>            Move sOrdH_Recr to MIORDD.BTNORDH_RECR
54569>>>            Find GE MIORDD by Index.1
54570>>>>
54570>>>            While ((Found=1) and (MIORDD.BTNORDH_RECR=sOrdH_Recr))
54574>>>                //========================================================
54574>>>                //========================================================
54574>>>                // Des ean to eidos einai:
54574>>>                // a) Etoima Proionta  16000000                 >> Direct_Output channel 5 sFileName1
54574>>>                // b) Antlies Pxx me pagia Xreosh               >> Direct_Output channel 6 sFileName2
54574>>>                //    Antlies Pxx me pagia Xreosh               >> Direct_Output channel 7 sFileName2
54574>>>                // c) Antlies Pxx me kanonikh Xreosh            >> Direct_Output channel 7 sFileName3
54574>>>                //    (an exei pagia xreosh grafetai kai edo)
54574>>>                // d) Loipa                                     >> Direct_Output channel 8 sFileName4
54574>>>
54574>>>
54574>>>                //If (item.WAPOKAT_CODE=Sysfile.WAPOKAT_ETOIMA) Move 1 to MIORDD.ITEM_TI_EINAI
54574>>>                //Else If (UPPERCASE(Left(MIORDD.VITEM,1))="P") Move 2 to MIORDD.ITEM_TI_EINAI
54574>>>                //Else If           (Left(MIORDD.VITEM,1) ="К") Move 3 to MIORDD.ITEM_TI_EINAI
54574>>>                //Else If           (Left(MIORDD.VITEM,1) ="в") Move 3 to MIORDD.ITEM_TI_EINAI
54574>>>
54574>>>
54574>>>
54574>>>                If (MIORDD.ITEM_TI_EINAI=1) Begin
54576>>>                    // Periptosh a) apo pano
54576>>>                    // (item.WAPOKAT_CODE=Sysfile.WAPOKAT_ETOIMA) >> Etoima Proionta
54576>>>                    Write   channel 5   '"'
54578>>>                    Write   channel 5   'YP01'
54580>>>                    Write   channel 5   '"'
54582>>>                    Write   channel 5   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк
54584>>>                    Write   channel 5   '"'
54586>>>                    Write   channel 5   'GR02'
54588>>>                    Write   channel 5   '"'
54590>>>                    Write   channel 5   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
54592>>>                    Write   channel 5   '"'
54594>>>                    Write   channel 5   "03"
54596>>>                    Write   channel 5   '"'
54598>>>                    Write   channel 5   sDeli // End of Excel Column D  ЙШдсва ГаШджгук
54600>>>                    Write   channel 5   '"'
54602>>>                    Write   channel 5   "04"
54604>>>                    Write   channel 5   '"'
54606>>>                    Write   channel 5   sDeli // End of Excel Column E  ТгугШ (Segment)
54608>>>                    Write   channel 5   '"'
54610>>>                    Write   channel 5   (Trim(MIORDH.CLIENT_ID))
54612>>>                    Write   channel 5   '"'
54614>>>                    Write   channel 5   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
54616>>>                    Write   channel 5   '"'
54618>>>                    Write   channel 5   (Trim(MIORDH.CN_CODE))
54620>>>                    Write   channel 5   '"'
54622>>>                    Write   channel 5   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ
54624>>>                    Write   channel 5   '"'
54626>>>                    Write   channel 5   (Trim(MIORDD.VITEM))
54628>>>                    Write   channel 5   '"'
54630>>>                    Write   channel 5   sDeli // End of Excel Column H  Reference ЙрЫабцк Увабжч (цзрк тоЬа жиайлЬх йлШ migration ШиоЬхШ лжм MM)
54632>>>                    Write   channel 5   '"'
54634>>>                    Write   channel 5   MIORDD.VUNITPRICE  // SOS Yannis ????
54636>>>                    Write   channel 5   '"'
54638>>>                    Write   channel 5   sDeli // End of Excel Column I  Пжйц
54640>>>                    Write   channel 5   '"'
54642>>>                    Write   channel 5   'EUR'
54644>>>                    Write   channel 5   '"'
54646>>>                    Write   channel 5   sDeli // End of Excel Column J  МцгайгШ
54648>>>                    Write   channel 5   '"'
54650>>>                    Write   channel 5   'm3'
54652>>>                    Write   channel 5   '"'
54654>>>                    Write   channel 5   sDeli // End of Excel Column K  ЛждсЫШ ЛтлиЮйЮк
54656>>>                    Write   channel 5   '"'
54658>>>                    Write   channel 5   MIORDH.DEOP_DATE
54660>>>                    Write   channel 5   '"'
54662>>>                    Write   channel 5   sDeli // End of Excel Column L  Ийочк Азц
54664>>>                    Write   channel 5   '"'
54666>>>                    Write   channel 5   MIORDH.DEOP_LHXH
54668>>>                    Write   channel 5   '"'
54670>>>                    Write   channel 5   sDeli // End of Excel Column M  Ийочк ырк
54672>>>
54672>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП
54672>>>                    Write   channel 5   '"'
54674>>>                    Write   channel 5   (Trim(MIORDH.AA_DEOP))    // End of Excel Column N  AA DEOP
54676>>>                    Write   channel 5   '"'
54678>>>                    //Write   Channel 5   sDeli
54678>>>                    //---
54678>>>                    Writeln channel 5
54680>>>                End
54680>>>>
54680>>>
54680>>>
54680>>>                If ((MIORDD.ITEM_TI_EINAI=2) and (MIORDD.VPAGIAXRM3>0)) Begin
54682>>>                    // Edo spane epishs se 2 merh, aytes me pagia xreosh
54682>>>                    // kai aytes me kanonikh, grafoume 2 arxeia Periptosh b) & c) apo pano
54682>>>                    // // (UPPERCASE(Left(MIORDD.VITEM,1))="P")
54682>>>                    // Periptosh b) apo pano
54682>>>                    Write   channel 6   '"'
54684>>>                    Write   channel 6   'YPMF'
54686>>>                    Write   channel 6   '"'
54688>>>                    Write   channel 6   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк
54690>>>                    Write   channel 6   '"'
54692>>>                    Write   channel 6   'GR02'
54694>>>                    Write   channel 6   '"'
54696>>>                    Write   channel 6   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
54698>>>                    Write   channel 6   '"'
54700>>>                    Write   channel 6   "03"
54702>>>                    Write   channel 6   '"'
54704>>>                    Write   channel 6   sDeli // End of Excel Column D  ЙШдсва ГаШджгук
54706>>>                    Write   channel 6   '"'
54708>>>                    Write   channel 6   "04"
54710>>>                    Write   channel 6   '"'
54712>>>                    Write   channel 6   sDeli // End of Excel Column E  ТгугШ (Segment)
54714>>>                    Write   channel 6   '"'
54716>>>                    Write   channel 6   (Trim(MIORDH.CLIENT_ID))
54718>>>                    Write   channel 6   '"'
54720>>>                    Write   channel 6   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
54722>>>                    Write   channel 6   '"'
54724>>>                    Write   channel 6   (Trim(MIORDH.CN_CODE))
54726>>>                    Write   channel 6   '"'
54728>>>                    Write   channel 6   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ
54730>>>                    Write   channel 6   '"'
54732>>>                    Write   channel 6   (Trim(MIORDD.VITEM))
54734>>>                    Write   channel 6   '"'
54736>>>                    Write   channel 6   sDeli // End of Excel Column H  Тчзжк АдлвхШк
54738>>>                    Write   channel 6   '"'
54740>>>                    Write   channel 6   (MIORDD.VPRICE * MIORDD.VPAGIAXRM3)
54742>>>                    Write   channel 6   '"'
54744>>>                    Write   channel 6   sDeli // End of Excel Column I  Пжйц (Fixed)
54746>>>                    Write   channel 6   '"'
54748>>>                    Write   channel 6   'EUR'
54750>>>                    Write   channel 6   '"'
54752>>>                    Write   channel 6   sDeli // End of Excel Column J  МцгайгШ
54754>>>                    Write   channel 6   '"'
54756>>>                    Write   channel 6   MIORDD.VPAGIAXRM3
54758>>>                    Write   channel 6   '"'
54760>>>                    Write   channel 6   sDeli // End of Excel Column K  ПжйжлЮлШ гЬоиа лЮд жзжаШ айомЬа Ю зШЪаШ оиЬрйЮ
54762>>>                    Write   channel 6   '"'
54764>>>                    Write   channel 6   'm3' 
54766>>>                    Write   channel 6   '"'
54768>>>                    Write   channel 6   sDeli // End of Excel Column L  ЛждсЫШ ЛтлиЮйЮк 
54770>>>                    Write   channel 6   '"'
54772>>>                    Write   channel 6   MIORDH.DEOP_DATE
54774>>>                    Write   channel 6   '"'
54776>>>                    Write   channel 6   sDeli // End of Excel Column M  Ийочк Азц
54778>>>                    Write   channel 6   '"'
54780>>>                    Write   channel 6   MIORDH.DEOP_LHXH
54782>>>                    Write   channel 6   '"'
54784>>>                    Write   channel 6   sDeli // End of Excel Column N  Ийочк ырк
54786>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
54786>>>                    Write   channel 6   '"'
54788>>>                    Write   channel 6   (Trim(MIORDH.AA_DEOP))    // End of Excel Column O  AA DEOP
54790>>>                    Write   channel 6   '"'
54792>>>                    //Write   Channel 6   sDeli
54792>>>                    //---
54792>>>                    Writeln channel 6
54794>>>                   
54794>>>
54794>>>                    // Grafoume KAI san c)
54794>>>                    // Periptosh c) apo pano 
54794>>>                    Write   channel 7   '"'
54796>>>                    Write   channel 7   'YPMF'
54798>>>                    Write   channel 7   '"'
54800>>>                    Write   channel 7   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк  
54802>>>                    Write   channel 7   '"'
54804>>>                    Write   channel 7   'GR02' 
54806>>>                    Write   channel 7   '"'
54808>>>                    Write   channel 7   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
54810>>>                    Write   channel 7   '"'
54812>>>                    Write   channel 7   "03"
54814>>>                    Write   channel 7   '"'
54816>>>                    Write   channel 7   sDeli // End of Excel Column D  ЙШдсва ГаШджгук 
54818>>>                    Write   channel 7   '"'
54820>>>                    Write   channel 7   "04" 
54822>>>                    Write   channel 7   '"'
54824>>>                    Write   channel 7   sDeli // End of Excel Column E  ТгугШ (Segment)
54826>>>                    Write   channel 7   '"'
54828>>>                    Write   channel 7   (Trim(MIORDH.CLIENT_ID))
54830>>>                    Write   channel 7   '"'
54832>>>                    Write   channel 7   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
54834>>>                    Write   channel 7   '"'
54836>>>                    Write   channel 7   (Trim(MIORDH.CN_CODE))
54838>>>                    Write   channel 7   '"'
54840>>>                    Write   channel 7   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ 
54842>>>                    Write   channel 7   '"'
54844>>>                    Write   channel 7   (Trim(MIORDD.VITEM))
54846>>>                    Write   channel 7   '"'
54848>>>                    Write   channel 7   sDeli // End of Excel Column H  Тчзжк АдлвхШк
54850>>>                    Write   channel 7   '"'
54852>>>                    Write   channel 7   MIORDD.VUNITPRICE  // SOS Yannis ??? Ti einai, h timh monados h timh monados x posothta ???
54854>>>                    Write   channel 7   '"'
54856>>>                    Write   channel 7   sDeli // End of Excel Column I  Пжйц ШдШ m3
54858>>>                    Write   channel 7   '"'
54860>>>                    Write   channel 7   'EUR' 
54862>>>                    Write   channel 7   '"' 
54864>>>                    Write   channel 7   sDeli // End of Excel Column J  МцгайгШ
54866>>>                    Write   channel 7   '"'
54868>>>                    Write   channel 7   'm3' 
54870>>>                    Write   channel 7   '"'
54872>>>                    Write   channel 7   sDeli // End of Excel Column K  ЛждсЫШ ЛтлиЮйЮк 
54874>>>                    Write   channel 7   '"'
54876>>>                    Write   channel 7   MIORDD.VPAGIAXRM3
54878>>>                    Write   channel 7   '"'
54880>>>                    Write   channel 7   sDeli // End of Excel Column L  ПжйжлЮлШ Шзж лЮд жзжаШ айомЬа Ю оиЬрйЮ ШдШ m3
54882>>>                    Write   channel 7   '"'
54884>>>                    Write   channel 7   'm3' 
54886>>>                    Write   channel 7   '"'
54888>>>                    Write   channel 7   sDeli // End of Excel Column M  ЛждсЫШ ЛтлиЮйЮк 
54890>>>                    Write   channel 7   '"'
54892>>>                    Write   channel 7   MIORDH.DEOP_DATE
54894>>>                    Write   channel 7   '"'
54896>>>                    Write   channel 7   sDeli // End of Excel Column N  Ийочк Азц
54898>>>                    Write   channel 7   '"'
54900>>>                    Write   channel 7   MIORDH.DEOP_LHXH
54902>>>                    Write   channel 7   '"'
54904>>>                    Write   channel 7   sDeli // End of Excel Column O  Ийочк ырк
54906>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
54906>>>                    Write   channel 7   '"'
54908>>>                    Write   channel 7   (Trim(MIORDH.AA_DEOP))    // End of Excel Column P  AA DEOP
54910>>>                    Write   channel 7   '"'
54912>>>                    //Write   Channel 7   sDeli
54912>>>                    //---
54912>>>                    Writeln channel 7
54914>>>                    
54914>>>                End
54914>>>>
54914>>>                Else If ((MIORDD.ITEM_TI_EINAI=2) and (MIORDD.VPAGIAXRM3=0)) Begin
54917>>>                    // Edo spane epishs se 2 merh, aytes me pagia xreosh 
54917>>>                    // kai aytes me kanonikh, grafoume 2 arxeia Periptosh b) & c) apo pano 
54917>>>                    // // (UPPERCASE(Left(MIORDD.VITEM,1))="P")
54917>>>                    // Periptosh c) apo pano 
54917>>>                    Write   channel 7   '"'
54919>>>                    Write   channel 7   'YPMF'
54921>>>                    Write   channel 7   '"'
54923>>>                    Write   channel 7   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк  
54925>>>                    Write   channel 7   '"'
54927>>>                    Write   channel 7   'GR02' 
54929>>>                    Write   channel 7   '"'
54931>>>                    Write   channel 7   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
54933>>>                    Write   channel 7   '"'
54935>>>                    Write   channel 7   "03"
54937>>>                    Write   channel 7   '"'
54939>>>                    Write   channel 7   sDeli // End of Excel Column D  ЙШдсва ГаШджгук 
54941>>>                    Write   channel 7   '"'
54943>>>                    Write   channel 7   "04"
54945>>>                    Write   channel 7   '"'
54947>>>                    Write   channel 7   sDeli // End of Excel Column E  ТгугШ (Segment)
54949>>>                    Write   channel 7   '"'
54951>>>                    Write   channel 7   (Trim(MIORDH.CLIENT_ID))
54953>>>                    Write   channel 7   '"'
54955>>>                    Write   channel 7   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
54957>>>                    Write   channel 7   '"'
54959>>>                    Write   channel 7   (Trim(MIORDH.CN_CODE))
54961>>>                    Write   channel 7   '"'
54963>>>                    Write   channel 7   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ 
54965>>>                    Write   channel 7   '"'
54967>>>                    Write   channel 7   (Trim(MIORDD.VITEM))
54969>>>                    Write   channel 7   '"'
54971>>>                    Write   channel 7   sDeli // End of Excel Column H  Тчзжк АдлвхШк
54973>>>                    Write   channel 7   '"'
54975>>>                    Write   channel 7   MIORDD.VUNITPRICE  // SOS Yannis ??? Ti einai, h timh monados h timh monados x posothta ???
54977>>>                    Write   channel 7   '"'
54979>>>                    Write   channel 7   sDeli // End of Excel Column I  Пжйц ШдШ m3
54981>>>                    Write   channel 7   '"'
54983>>>                    Write   channel 7   'EUR' 
54985>>>                    Write   channel 7   '"'
54987>>>                    Write   channel 7   sDeli // End of Excel Column J  МцгайгШ
54989>>>                    Write   channel 7   '"'
54991>>>                    Write   channel 7   'm3' 
54993>>>                    Write   channel 7   '"'
54995>>>                    Write   channel 7   sDeli // End of Excel Column K  ЛждсЫШ ЛтлиЮйЮк 
54997>>>                    Write   channel 7   '"'
54999>>>                    Write   channel 7   MIORDD.VPAGIAXRM3
55001>>>                    Write   channel 7   '"'
55003>>>                    Write   channel 7   sDeli // End of Excel Column L  ПжйжлЮлШ Шзж лЮд жзжаШ айомЬа Ю оиЬрйЮ ШдШ m3
55005>>>                    Write   channel 7   '"'
55007>>>                    Write   channel 7   'm3' 
55009>>>                    Write   channel 7   '"'
55011>>>                    Write   channel 7   sDeli // End of Excel Column M  ЛждсЫШ ЛтлиЮйЮк 
55013>>>                    Write   channel 7   '"'
55015>>>                    Write   channel 7   MIORDH.DEOP_DATE
55017>>>                    Write   channel 7   '"'
55019>>>                    Write   channel 7   sDeli // End of Excel Column N  Ийочк Азц
55021>>>                    Write   channel 7   '"'
55023>>>                    Write   channel 7   MIORDH.DEOP_LHXH
55025>>>                    Write   channel 7   '"'
55027>>>                    Write   channel 7   sDeli // End of Excel Column O  Ийочк ырк
55029>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
55029>>>                    Write   channel 7   '"'
55031>>>                    Write   channel 7   (Trim(MIORDH.AA_DEOP))    // End of Excel Column P  AA DEOP
55033>>>                    Write   channel 7   '"'
55035>>>                    //Write   Channel 7   sDeli
55035>>>                    //---
55035>>>                    Writeln channel 7
55037>>>                End
55037>>>>
55037>>>                
55037>>>                If (MIORDD.ITEM_TI_EINAI=3) Begin
55039>>>                    // Periptosh d) apo pano 
55039>>>                    //If           (Left(MIORDD.VITEM,1) ="К") Move 3 to MIORDD.ITEM_TI_EINAI
55039>>>                    //If           (Left(MIORDD.VITEM,1) ="в") Move 3 to MIORDD.ITEM_TI_EINAI
55039>>>                    Write   channel 8   '"'
55041>>>                    Write   channel 8   'YPRD'
55043>>>                    Write   channel 8   '"'
55045>>>                    Write   channel 8   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк  
55047>>>                    Write   channel 8   '"'
55049>>>                    Write   channel 8   'GR02' 
55051>>>                    Write   channel 8   '"'
55053>>>                    Write   channel 8   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
55055>>>                    Write   channel 8   '"'
55057>>>                    Write   channel 8   "03" 
55059>>>                    Write   channel 8   '"'
55061>>>                    Write   channel 8   sDeli // End of Excel Column D  ЙШдсва ГаШджгук 
55063>>>                    Write   channel 8   '"'
55065>>>                    Write   channel 8   "04"
55067>>>                    Write   channel 8   '"'
55069>>>                    Write   channel 8   sDeli // End of Excel Column E  ТгугШ (Segment)
55071>>>                    Write   channel 8   '"'
55073>>>                    Write   channel 8   (Trim(MIORDH.CLIENT_ID))
55075>>>                    Write   channel 8   '"'
55077>>>                    Write   channel 8   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
55079>>>                    Write   channel 8   '"'
55081>>>                    Write   channel 8   (Trim(MIORDH.CN_CODE))
55083>>>                    Write   channel 8   '"'
55085>>>                    Write   channel 8   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ 
55087>>>                    Write   channel 8   '"'
55089>>>                    Write   channel 8   ''
55091>>>                    Write   channel 8   '"'
55093>>>                    Write   channel 8   sDeli // End of Excel Column H  Дчижк ЙШЯмйлтиЮйЮк
55095>>>                    Write   channel 8   '"'
55097>>>                    Write   channel 8   ''    
55099>>>                    Write   channel 8   '"'
55101>>>                    Write   channel 8   sDeli // End of Excel Column I  Пжйц fixed
55103>>>                    Write   channel 8   '"'
55105>>>                    Write   channel 8   'EUR' 
55107>>>                    Write   channel 8   '"'
55109>>>                    Write   channel 8   sDeli // End of Excel Column J  МцгайгШ
55111>>>                    Write   channel 8   '"'
55113>>>                    Write   channel 8   MIORDH.DEOP_DATE
55115>>>                    Write   channel 8   '"'
55117>>>                    Write   channel 8   sDeli // End of Excel Column K  Ийочк Азц
55119>>>                    Write   channel 8   '"'
55121>>>                    Write   channel 8   MIORDH.DEOP_LHXH
55123>>>                    Write   channel 8   '"'
55125>>>                    Write   channel 8   sDeli // End of Excel Column L  Ийочк ырк
55127>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
55127>>>                    Write   channel 8   '"'
55129>>>                    Write   channel 8   (Trim(MIORDH.AA_DEOP))    // End of Excel Column M  AA DEOP
55131>>>                    Write   channel 8   '"'
55133>>>                    Write   channel 8   sDeli
55135>>>                    Write   channel 8   '"'
55137>>>                    Write   channel 8   (Trim(MIORDD.VITEM))
55139>>>                    Write   channel 8   '"'
55141>>>                    Write   channel 8   sDeli // End of Excel Column N  ЙрЫабжк ДаЫжмк
55143>>>                    Write   channel 8   '"'
55145>>>                    Write   channel 8   (Trim(MIORDD.VITEM_DESCR)) 
55147>>>                    Write   channel 8   '"'
55149>>>                    Write   channel 8   sDeli // End of Excel Column O  ПЬиаЪиШнЮ ДаЫжмк
55151>>>                    Write   channel 8   '"'
55153>>>                    Write   channel 8   MIORDD.VQTY
55155>>>                    Write   channel 8   '"'
55157>>>                    Write   channel 8   sDeli // End of Excel Column P  ПжйцлЮлШ
55159>>>                    Write   channel 8   '"'
55161>>>                    Write   channel 8   MIORDD.VUNITPRICE
55163>>>                    Write   channel 8   '"' // End of Excel Column Q  Тагу ЛждсЫжк
55165>>>                    //Write   channel 8   sDeli 
55165>>>                    //---
55165>>>                    Writeln channel 8
55167>>>                End
55167>>>>
55167>>>                //========================================================
55167>>>                //========================================================
55167>>>                Find GT MIORDD by Index.1
55168>>>>
55168>>>            Loop
55169>>>>
55169>>>        End_Procedure        
55170>>>        
55170>>>        //AB-StoreEnd
55170>>>
55170>>>    End_Object    // Button5
55171>>>    Object TextBox10 is a TextBox
55173>>>        Set Label to "юджгШ ШиоЬхжм"
55174>>>        Set Auto_Size_State to False
55175>>>        Set Location to 34 53
55176>>>        Set Size to 10 55
55177>>>        Set TypeFace to "MS Sans Serif"
55178>>>        Set Color to 13631219
55179>>>    End_Object    // TextBox10
55180>>>
55180>>>    Object SaveAsDialog1 is a SaveAsDialog
55182>>>        Set Location to 292 33
55183>>>
55183>>>        //AB-StoreStart
55183>>>        //Show_Dialog is a predefined function method in the SaveAsDialog class
55183>>>        //get Show_Dialog to an integer variable to call the SaveAsDialog
55183>>>        //
55183>>>        //DoCallSaveAsDialog is NOT a predefined method in the SaveAsDialog class
55183>>>        //DoCallSaveAsDialog it is just used an example
55183>>>        //you can send DoCallSaveAsDialog from another object, such as a button
55183>>>        //
55183>>>        //Procedure DoCallSaveAsDialog
55183>>>        //    integer iVoid
55183>>>        //    get Show_Dialog of SaveAsDialog1 to iVoid
55183>>>        //End_Procedure  // DoCallSaveAsDialog
55183>>>        //AB-StoreEnd
55183>>>
55183>>>    End_Object    // SaveAsDialog1
55184>>>
55184>>>End_Object
55185>        Use ExportDEOPNew3.vw
Including file: ExportDEOPNew3.vw    (L:\VDF14.1.Dev\TITAN_MIGRATE\AppSrc\ExportDEOPNew3.vw)
55185>>>// L:\VDF14.1.Dev\TITAN_MIGRATE\AppSrc\ExportDEOPNew3.vw
55185>>>// ExportDEOPNew3
55185>>>//
55185>>>
55185>>>Use DFClient.pkg
55185>>>Use DFEntry.pkg
55185>>>
55185>>>//Open MIClient
55185>>>//Open MICN
55185>>>//Open MICONSTR
55185>>>//Open MISalesm
55185>>>//Open MIMHXAN
55185>>>//Open MIPRESP
55185>>>//Open MICodtyp
55185>>>//Open MIcodema
55185>>>//Open MIORDH
55185>>>//Open MIORDD
55185>>>//Open MIAREAS
55185>>>//Open MICities
55185>>>//Open MITOWNS
55185>>>//Open MICOUNTR
55185>>>//
55185>>>////Open MINOMOS
55185>>>////Open MIDHMOS
55185>>>////Open MIDRAST
55185>>>
55185>>>
55185>>>Activate_View Activate_ExportDeopNew3 for ExportDEOPNew3
55195>>>>
55195>>>Object ExportDEOPNew3 is a dbView
55197>>>    Set Location to 4 9
55198>>>    Set Size to 122 411
55199>>>    Set Label to "ДеШЪрЪу ГДОП (+ДхЫжк йлж header)"
55200>>>    Set Border_Style to Border_Thick
55201>>>    Set Color to 14024703
55202>>>
55202>>>    Open rptmp
55204>>>
55204>>>    Procedure Activate_View Returns Integer
55207>>>        Integer rVal
55207>>>        Forward Get MSG_Activate_View to rVal
55209>>>
55209>>>        Send IGNORE_ERROR to ERROR_INFO_OBJECT 4358
55210>>>        Make_Directory "C:\TitanMig"
55211>>>        Send TRAP_ERROR to ERROR_INFO_OBJECT 4358
55212>>>
55212>>>        Procedure_Return rVal
55213>>>    End_Procedure
55214>>>
55214>>>
55214>>>    Object frmFileName is a Form
55216>>>
55216>>>        //AB-StoreTopStart
55216>>>        //AB-StoreTopEnd
55216>>>
55216>>>        Set Size to 13 187
55217>>>        Set Location to 33 112
55218>>>        Set Label_Col_Offset to 2
55219>>>        Set Prompt_Button_Mode to pb_PromptOn
55220>>>        Set Form_TypeFace item 0 to "MS Sans Serif"
55221>>>        Set Value item 0 to "C:\TitanMig\SMSMI_DEOP_Header.csv"
55222>>>
55222>>>        //AB-StoreStart
55222>>>
55222>>>        Procedure Prompt
55225>>>            Boolean bSave
55225>>>            String sFileTitle sFileName
55225>>>            Get Show_Dialog of (SaveAsDialog1(Self)) to bSave
55226>>>            If (bSave) Begin
55228>>>                Get File_Title of (SaveAsDialog1(Self)) to sFileTitle
55229>>>                Get File_Name  of (SaveAsDialog1(Self)) to sFileName
55230>>>                Set Value of frmFileName item 0 to sFileName
55231>>>            End
55231>>>>
55231>>>        End_Procedure
55232>>>
55232>>>        //AB-StoreEnd
55232>>>
55232>>>    End_Object    // frmFileName
55233>>>
55233>>>    Object Button5 is a Button
55235>>>
55235>>>        //AB-StoreTopStart
55235>>>
55235>>>        Property String psNotFoundClientDhmos Public ""
55237>>>        Property String psNotFoundClientNomos Public ""
55239>>>        Property String psNotFoundClientDrast Public ""
55241>>>        Property String psNotFoundClientTrPlh Public ""
55243>>>
55243>>>        Property String psNotFoundErgoDhmos Public ""
55245>>>        Property String psNotFoundErgoNomos Public ""
55247>>>        Property String psNotFoundErgoDrast Public ""
55249>>>        Property String psNotFoundErgoTrPlh Public ""
55251>>>
55251>>>        Property String psNotFoundPrespDhmos Public ""
55253>>>        Property String psNotFoundPrespNomos Public ""
55255>>>        Property String psNotFoundPrespDrast Public ""
55257>>>        Property String psNotFoundPrespTrPlh Public ""
55259>>>
55259>>>        Property String psNotFoundMhxanDhmos Public ""
55261>>>        Property String psNotFoundMhxanNomos Public ""
55263>>>        Property String psNotFoundMhxanDrast Public ""
55265>>>        Property String psNotFoundMhxanTrPlh Public ""
55267>>>
55267>>>        Property String psNotFoundConstrDhmos Public ""
55269>>>        Property String psNotFoundConstrNomos Public ""
55271>>>        Property String psNotFoundConstrDrast Public ""
55273>>>        Property String psNotFoundConstrTrPlh Public ""
55275>>>
55275>>>        Property String psNotFoundSalesDhmos Public ""
55277>>>        Property String psNotFoundSalesNomos Public ""
55279>>>        Property String psNotFoundSalesDrast Public ""
55281>>>        Property String psNotFoundSalesTrPlh Public ""
55283>>>
55283>>>
55283>>>        Function fsTropoiPlhromhsPelath String asOurCode Returns String
55286>>>            String sTheirCode
55286>>>
55286>>>            If      (asOurCode="K000") Move "G000" to sTheirCode
55289>>>            Else If (asOurCode="K030") Move "G030" to sTheirCode
55293>>>            Else If (asOurCode="K060") Move "G060" to sTheirCode
55297>>>            Else If (asOurCode="K090") Move "G090" to sTheirCode
55301>>>            Else If (asOurCode="K120") Move "G120" to sTheirCode
55305>>>            Else If (asOurCode="K150") Move "G150" to sTheirCode
55309>>>            Else If (asOurCode="K180") Move "G180" to sTheirCode
55313>>>            Else If (asOurCode="K210") Move "G210" to sTheirCode
55317>>>            Else If (asOurCode="K240") Move "G240" to sTheirCode
55321>>>            Else If (asOurCode="K270") Move "G270" to sTheirCode
55325>>>            Else If (asOurCode="K300") Move "G300" to sTheirCode
55329>>>            Else If (asOurCode="K330") Move "G330" to sTheirCode
55333>>>            Else If (asOurCode="K360") Move "G360" to sTheirCode
55337>>>            Else Begin
55338>>>                Set psNotFoundClientTrPlh to (Trim("*** (AW+BN) "+asOurCode))
55339>>>                Move "ZZZZ" to sTheirCode
55340>>>            End
55340>>>>
55340>>>            Function_Return sTheirCode
55341>>>        End_Function
55342>>>
55342>>>
55342>>>        //AB-StoreTopEnd
55342>>>
55342>>>        Set Label to "ДНАВЧВЖ ГДГОЛДМЧМ"
55343>>>        Set Size to 20 391
55344>>>        Set Location to 51 10
55345>>>        Set Focus_Mode to Pointer_Only
55346>>>        Set Form_FontWeight item 0 to 600
55347>>>        Set Form_TypeFace item 0 to "MS Sans Serif"
55348>>>
55348>>>        //AB-StoreStart
55348>>>
55348>>>        Procedure OnClick
55351>>>            String sFilename sLabel
55351>>>            Integer bIsCreated
55351>>>            Integer iWhat iVal
55351>>>            Get Label to sLabel
55352>>>            Get Value of frmFileName item 0 to sFilename
55353>>>            If (Trim(sFilename)="") Begin
55355>>>                Send Stop_Box "Тж цджгШ лжм ШиЬхжм ЬхдШа бЬдц" "СнсвгШ 1002"
55356>>>                Procedure_Return
55357>>>            End
55357>>>>
55357>>>
55357>>>            Direct_Output channel 9 sFilename
55359>>>
55359>>>            String sFileName1
55359>>>            Move "C:\TitanMig\SMSMI_DEOP_Details1.csv" to sFileName1
55360>>>            Direct_Output channel 5 sFileName1
55362>>>
55362>>>            String sFileName2
55362>>>            Move "C:\TitanMig\SMSMI_DEOP_Details2.csv" to sFileName2
55363>>>            Direct_Output channel 6 sFileName2
55365>>>
55365>>>            String sFileName3
55365>>>            Move "C:\TitanMig\SMSMI_DEOP_Details3.csv" to sFileName3
55366>>>            Direct_Output channel 7 sFileName3
55368>>>
55368>>>            String sFileName4
55368>>>            Move "C:\TitanMig\SMSMI_DEOP_Details4.csv" to sFileName4
55369>>>            Direct_Output channel 8 sFileName4
55371>>>
55371>>>            Integer iCnt iFS 
55371>>>            Move 0 to iCnt
55372>>>            File_Size MIClient to iFS
55375>>>            String sMess
55375>>>
55375>>>            Clear MIORDH
55376>>>            Find GE MIORDH.Recnum
55377>>>>
55377>>>            While (Found)
55381>>>                Add 1 to iCnt
55382>>>                Move (String(iCnt)+"/"+String(iFS)) to sMess
55383>>>                Set Label to sMess
55384>>>                Clear MIORDD
55385>>>                Move MIORDH.RECR    to MIORDD.BTNORDH_RECR
55386>>>                Find GE MIORDD by Index.1
55387>>>>
55387>>>                While ((Found) and (MIORDD.BTNORDH_RECR=MIORDH.RECR))
55391>>>                    If (MIORDD.ITEM_TI_EINAI=1) Begin // Etoima Proionta Mono
55393>>>                        Send Output_DEOP_Header MIORDD.VITEM MIORDD.VQTY MIORDD.VPRICE
55394>>>                    End
55394>>>>
55394>>>                    Find GT MIORDD by Index.1
55395>>>>
55395>>>                Loop
55396>>>>
55396>>>                //
55396>>>                Send Output_DEOP_Details
55397>>>                Find GT MIORDH.Recnum
55398>>>>
55398>>>            Loop
55399>>>>
55399>>>
55399>>>            Close_Output channel 5
55401>>>            Close_Output channel 6
55403>>>            Close_Output channel 7
55405>>>            Close_Output channel 8
55407>>>            Close_Output channel 9
55409>>>
55409>>>            Set Label to sLabel
55410>>>            Send Info_Box "Process Finished, the file is saved" "Information"
55411>>>        End_Procedure // OnClick
55412>>>
55412>>>
55412>>>        Procedure Output_DEOP_Header String asItem Number anQty Number anPrice
55415>>>            String  sAADeop sDeli sMIOrdHRecr s1
55415>>>            Integer iRecnum
55415>>>
55415>>>            Move MIORDH.Recnum  to iRecnum
55416>>>            Move MIORDH.AA_DEOP to sAADeop
55417>>>            If (iRecnum<=0) Begin
55419>>>                Send Stop_Box ("ПицЩвЮгШ гЬ лЮд ЬдЬиЪу ЬЪЪиШну лжм ГДОП: "+Trim(MIORDH.AA_DEOP)) "СнвШгШ 1101"
55420>>>                Procedure_Return
55421>>>            End
55421>>>>
55421>>>            Move ","                to sDeli
55422>>>
55422>>>            Write   channel 9   '"'
55424>>>            Write   channel 9   'YCQR'
55426>>>            Write   channel 9   '"'
55428>>>            Write   channel 9   sDeli // End of Excel Column B  Тчзжк СмгЩжвШхжм
55430>>>            Write   channel 9   '"'
55432>>>            Write   channel 9   'GR02'
55434>>>            Write   channel 9   '"'
55436>>>            Write   channel 9   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд ДввсЫШк
55438>>>            Write   channel 9   '"'
55440>>>            Write   channel 9   "03"
55442>>>            Write   channel 9   '"'
55444>>>            Write   channel 9   sDeli // End of Excel Column D  ЙШдсва ГаШджгук
55446>>>            Write   channel 9   '"'
55448>>>            Write   channel 9   "04"
55450>>>            Write   channel 9   '"'
55452>>>            Write   channel 9   sDeli // End of Excel Column E  ТгугШ (Segment)
55454>>>            Write   channel 9   '"'
55456>>>
55456>>>            Write   channel 9   (Trim(MICN.CN_PUMPID))          // GR32 - Sales Office
55458>>>
55458>>>            Write   channel 9   '"'
55460>>>            Write   channel 9   sDeli // End of Excel Column F  Sales Office
55462>>>            Write   channel 9   '"'
55464>>>            Write   channel 9   ''  // 001 - Metamorfosi
55466>>>            Write   channel 9   '"'
55468>>>            Write   channel 9   sDeli // End of Excel Column G  Sales Group
55470>>>            Write   channel 9   '"'
55472>>>            Write   channel 9   (Trim(MIORDH.CLIENT_ID))
55474>>>            Write   channel 9   '"'
55476>>>            Write   channel 9   sDeli // End of Excel Column H  ПШвШацк бчиажк брЫабцк зЬвслЮ
55478>>>            Write   channel 9   '"'
55480>>>            Write   channel 9   (Trim(MIORDH.CN_CODE))
55482>>>            Write   channel 9   '"'
55484>>>            Write   channel 9   sDeli // End of Excel Column I  ПШвШацк бчиажк брЫабцк зШиШвузлЮ (тиЪжм)
55486>>>            Clear MICN
55487>>>            Move MIORDH.CN_CODE to MICN.CN_CODE
55488>>>            Find Eq MICN by Index.5
55489>>>>
55489>>>            Write   channel 9   '"'
55491>>>            Write   channel 9   (Trim(MICN.CN_SLS_ID))
55493>>>            Write   channel 9   '"'
55495>>>            Write   channel 9   sDeli // End of Excel Column J  ПШвШацк бчиажк брЫабцк ПрвЮлу
55497>>>            Clear MICLIENT
55498>>>            Move MIORDH.CLIENT_ID to MICLIENT.CLIENT_ID
55499>>>            Find Eq MICLIENT by Index.6
55500>>>>
55500>>>            Clear MIPRESP
55501>>>            Move MICLIENT.PRESP_ID to MIPRESP.PRESP_ID
55502>>>            Find EQ MIPRESP by Index.7
55503>>>>
55503>>>            Write   channel 9   '"'
55505>>>            Write   channel 9   (Trim(MIPRESP.PRESP_ID))
55507>>>            Write   channel 9   '"'
55509>>>            Write   channel 9   sDeli // End of Excel Column K  ПШвШацк бчиажк брЫабцк ПвЮирлу
55511>>>            Write   channel 9   '"'
55513>>>            Write   channel 9   (Trim(MICN.CN_CNT_ID))
55515>>>            Write   channel 9   '"'
55517>>>            Write   channel 9   sDeli // End of Excel Column L  ПШвШацк бчиажк брЫабцк ДиЪжвсЩжм
55519>>>            Write   channel 9   '"'
55521>>>            Write   channel 9   (Trim(MICN.MHXANIK_ID))
55523>>>            Write   channel 9   '"'
55525>>>            Write   channel 9   sDeli // End of Excel Column M  ПШвШацк бчиажк брЫабцк ЛЮоШдабжч
55527>>>            Write   channel 9   '"'
55529>>>            Write   channel 9   (Trim(MIORDH.CN_CODE))
55531>>>            Write   channel 9   '"'
55533>>>            Write   channel 9   sDeli // End of Excel Column N  ПШвШацк бчиажк брЫабцк ыиЪжм (Узж-ыиЪжм)
55535>>>            Write   channel 9   '"'
55537>>>            Write   channel 9   (Trim(MIORDH.DEOP_DATE))
55539>>>            Write   channel 9   '"'
55541>>>            Write   channel 9   sDeli // End of Excel Column O  Ийочк Азц
55543>>>            Write   channel 9   '"'
55545>>>            Write   channel 9   (Trim(MIORDH.DEOP_LHXH))
55547>>>            Write   channel 9   '"'
55549>>>            Write   channel 9   sDeli // End of Excel Column P  Ийочк ырк
55551>>>            If (MICN.TROPOS_METAF="C&F") Move "CFR" to s1
55554>>>            Else                         Move "FOB" to s1
55556>>>            Write   channel 9   '"'
55558>>>            Write   channel 9   s1
55560>>>            Write   channel 9   '"'
55562>>>            Write   channel 9   sDeli // End of Excel Column Q  юижк ПШисЫжйЮк
55564>>>            Write   channel 9   '"'
55566>>>            Write   channel 9   (Trim(fsTropoiPlhromhsPelath(Self,Trim(MIORDH.TIMEOUT))))
55568>>>            Write   channel 9   '"'
55570>>>            Write   channel 9   sDeli // End of Excel Column R  юижк ПвЮиргук
55572>>>            Write   channel 9   '"'
55574>>>            Write   channel 9   '' // X - INCOMING CHECKS
55576>>>            Write   channel 9   '"'
55578>>>            Write   channel 9   sDeli // End of Excel Column S  Тицзжк ПвЮиргук
55580>>>            Write   channel 9   '"'
55582>>>            Write   channel 9   (Trim(MIORDH.ELEIPH))
55584>>>            Write   channel 9   '"'
55586>>>            Write   channel 9   sDeli // End of Excel Column T  ДввЬазтк Фжилхж (йЬ m3)
55588>>>
55588>>>            Write   channel 9   '"'
55590>>>            Write   channel 9   ''
55592>>>            Write   channel 9   '"'
55594>>>            Write   channel 9   sDeli // End of Excel Column U  ГасйлЮгШ Шзц лж жзжхж оиЬщдждлШа бШЯмйлЬиуйЬак
55596>>>            Write   channel 9   '"'
55598>>>            Write   channel 9   ''
55600>>>            Write   channel 9   '"'
55602>>>            Write   channel 9   sDeli // End of Excel Column V  Sales Group     ПаЯШду ПсЪаШ ХитрйЮ ПШиШЪрЪук
55604>>>            Write   channel 9   '"'
55606>>>            Write   channel 9   ''
55608>>>            Write   channel 9   '"'
55610>>>            Write   channel 9   sDeli // End of Excel Column W  ДзтблШйЮ ЧиШихжм Азц
55612>>>            Write   channel 9   '"'
55614>>>            Write   channel 9   ''
55616>>>            Write   channel 9   '"'
55618>>>            Write   channel 9   sDeli // End of Excel Column X  ДзтблШйЮ ЧиШихжм ырк
55620>>>            Write   channel 9   '"'
55622>>>            Write   channel 9   (Trim(asItem))  // '' // 111111111 (ЙрЫабцк СбмижЫтгШлжк)
55624>>>            Write   channel 9   '"'
55626>>>            Write   channel 9   sDeli // End of Excel Column Y  Reference ЙрЫабцк Увабжч (цзрк тоЬа жиайлЬх йлШ migration ШиоЬхШ лжм MM)
55628>>>            Write   channel 9   '"'
55630>>>            Write   channel 9   (Trim(MICN.CN_PUMPLICENSE)) // R001 - ЛждсЫШ Дл.СбмижЫ. АдлагсоЬаШк
55632>>>            Write   channel 9   '"'
55634>>>            Write   channel 9   sDeli // End of Excel Column Z  ДиЪжйлсйаж зШисЫжйЮк
55636>>>            Write   channel 9   '"'
55638>>>            Write   channel 9   (Trim(MICN.CN_VDETAILS)) // ZONH ПДИВРАФЖ (ДожмгЬ бШа лШ ШввШ ймжаоЬаШ йлШ ПЬЫаШ
55640>>>                                                         //Move (Trim(Zones.ZONE_DESCR))   to MICN.CN_VDETAILS
55640>>>                                                         //Move Zones.ZONE_ID              to MICN.CN_CLIENTMATCH
55640>>>                                                         //Move Brzones.BRZONE_RECR        to MICN.CN_ZONE
55640>>>            Write   channel 9   '"'
55642>>>            Write   channel 9   sDeli // End of Excel Column AA  ЕщдЮ
55644>>>            Write   channel 9   '"'
55646>>>            Write   channel 9   MICN.CN_M3
55648>>>            Write   channel 9   '"'
55650>>>            Write   channel 9   sDeli // End of Excel Column AB  ПжйцлЮлШ
55652>>>            Write   channel 9   '"'
55654>>>            Write   channel 9   'm3'
55656>>>            Write   channel 9   '"'
55658>>>            Write   channel 9   sDeli // End of Excel Column AC  ЛждсЫШ ЛтлиЮйЮк
55660>>>            Write   channel 9   '"'
55662>>>            Write   channel 9   'EUR'
55664>>>            Write   channel 9   '"'
55666>>>            Write   channel 9   sDeli // End of Excel Column AD  МцгайгШ
55668>>>
55668>>>            // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП
55668>>>            Write   channel 9   '"'
55670>>>            Write   channel 9   (Trim(MIORDH.AA_DEOP))
55672>>>            Write   channel 9   '"'
55674>>>            Write   channel 9   sDeli // End of Excel Column AE
55676>>>            // ПижйЯЬлжмгЬ ЬгЬак лж ОКА ПКУМ АМДУ
55676>>>            Move "" to s1
55677>>>            If      (Trim(MIOrdH.VELXR)='2') Move "ОКА"     to s1
55680>>>            Else If (Trim(MIOrdH.VELXR)='0') Move "АМДУ"    to s1
55684>>>            Else If (Trim(MIOrdH.VELXR)='1') Move "ПКУМ"    to s1
55688>>>            Write   channel 9   '"'
55690>>>            Write   channel 9   (Trim(s1))  // End of Excel Column AF
55692>>>            Write   channel 9   '"'
55694>>>            //Write   Channel 9   sDeli
55694>>>            //---
55694>>>            Writeln channel 9
55696>>>        End_Procedure
55697>>>
55697>>>        Procedure Output_DEOP_Details
55700>>>            String  sAADeop sDeli sMIOrdHRecr s1 sOrdH_Recr
55700>>>            Integer iRecnum
55700>>>
55700>>>            Move MIORDH.Recnum  to iRecnum
55701>>>            Move MIORDH.AA_DEOP to sAADeop
55702>>>            Move MIORDH.RECR    to sOrdH_Recr
55703>>>            If (iRecnum<=0) Begin
55705>>>                Send Stop_Box ("ПицЩвЮгШ гЬ лЮд ЬдЬиЪу ЬЪЪиШну лжм ГДОП: "+Trim(MIORDH.AA_DEOP)) "СнвШгШ 3333"
55706>>>                Procedure_Return
55707>>>            End
55707>>>>
55707>>>            Move ","                to sDeli
55708>>>
55708>>>
55708>>>            Clear MIORDD
55709>>>            Move sOrdH_Recr to MIORDD.BTNORDH_RECR
55710>>>            Find GE MIORDD by Index.1
55711>>>>
55711>>>            While ((Found=1) and (MIORDD.BTNORDH_RECR=sOrdH_Recr))
55715>>>                //========================================================
55715>>>                //========================================================
55715>>>                // Des ean to eidos einai:
55715>>>                // a) Etoima Proionta  16000000                 >> Direct_Output channel 5 sFileName1
55715>>>                // b) Antlies Pxx me pagia Xreosh               >> Direct_Output channel 6 sFileName2
55715>>>                //    Antlies Pxx me pagia Xreosh               >> Direct_Output channel 7 sFileName2
55715>>>                // c) Antlies Pxx me kanonikh Xreosh            >> Direct_Output channel 7 sFileName3
55715>>>                //    (an exei pagia xreosh grafetai kai edo)
55715>>>                // d) Loipa                                     >> Direct_Output channel 8 sFileName4
55715>>>
55715>>>
55715>>>                //If (item.WAPOKAT_CODE=Sysfile.WAPOKAT_ETOIMA) Move 1 to MIORDD.ITEM_TI_EINAI
55715>>>                //Else If (UPPERCASE(Left(MIORDD.VITEM,1))="P") Move 2 to MIORDD.ITEM_TI_EINAI
55715>>>                //Else If           (Left(MIORDD.VITEM,1) ="К") Move 3 to MIORDD.ITEM_TI_EINAI
55715>>>                //Else If           (Left(MIORDD.VITEM,1) ="в") Move 3 to MIORDD.ITEM_TI_EINAI
55715>>>
55715>>>
55715>>>
55715>>>                If (MIORDD.ITEM_TI_EINAI=1) Begin
55717>>>                    // Periptosh a) apo pano
55717>>>                    // (item.WAPOKAT_CODE=Sysfile.WAPOKAT_ETOIMA) >> Etoima Proionta
55717>>>                    Write   channel 5   '"'
55719>>>                    Write   channel 5   'YP01'
55721>>>                    Write   channel 5   '"'
55723>>>                    Write   channel 5   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк
55725>>>                    Write   channel 5   '"'
55727>>>                    Write   channel 5   'GR02'
55729>>>                    Write   channel 5   '"'
55731>>>                    Write   channel 5   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
55733>>>                    Write   channel 5   '"'
55735>>>                    Write   channel 5   "03"
55737>>>                    Write   channel 5   '"'
55739>>>                    Write   channel 5   sDeli // End of Excel Column D  ЙШдсва ГаШджгук
55741>>>                    Write   channel 5   '"'
55743>>>                    Write   channel 5   "04"
55745>>>                    Write   channel 5   '"'
55747>>>                    Write   channel 5   sDeli // End of Excel Column E  ТгугШ (Segment)
55749>>>                    Write   channel 5   '"'
55751>>>                    Write   channel 5   (Trim(MIORDH.CLIENT_ID))
55753>>>                    Write   channel 5   '"'
55755>>>                    Write   channel 5   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
55757>>>                    Write   channel 5   '"'
55759>>>                    Write   channel 5   (Trim(MIORDH.CN_CODE))
55761>>>                    Write   channel 5   '"'
55763>>>                    Write   channel 5   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ
55765>>>                    Write   channel 5   '"'
55767>>>                    Write   channel 5   (Trim(MIORDD.VITEM))
55769>>>                    Write   channel 5   '"'
55771>>>                    Write   channel 5   sDeli // End of Excel Column H  Reference ЙрЫабцк Увабжч (цзрк тоЬа жиайлЬх йлШ migration ШиоЬхШ лжм MM)
55773>>>                    Write   channel 5   '"'
55775>>>                    Write   channel 5   MIORDD.VUNITPRICE  // SOS Yannis ????
55777>>>                    Write   channel 5   '"'
55779>>>                    Write   channel 5   sDeli // End of Excel Column I  Пжйц
55781>>>                    Write   channel 5   '"'
55783>>>                    Write   channel 5   'EUR'
55785>>>                    Write   channel 5   '"'
55787>>>                    Write   channel 5   sDeli // End of Excel Column J  МцгайгШ
55789>>>                    Write   channel 5   '"'
55791>>>                    Write   channel 5   'm3'
55793>>>                    Write   channel 5   '"'
55795>>>                    Write   channel 5   sDeli // End of Excel Column K  ЛждсЫШ ЛтлиЮйЮк
55797>>>                    Write   channel 5   '"'
55799>>>                    Write   channel 5   MIORDH.DEOP_DATE
55801>>>                    Write   channel 5   '"'
55803>>>                    Write   channel 5   sDeli // End of Excel Column L  Ийочк Азц
55805>>>                    Write   channel 5   '"'
55807>>>                    Write   channel 5   MIORDH.DEOP_LHXH
55809>>>                    Write   channel 5   '"'
55811>>>                    Write   channel 5   sDeli // End of Excel Column M  Ийочк ырк
55813>>>
55813>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП
55813>>>                    Write   channel 5   '"'
55815>>>                    Write   channel 5   (Trim(MIORDH.AA_DEOP))    // End of Excel Column N  AA DEOP
55817>>>                    Write   channel 5   '"'
55819>>>                    //Write   Channel 5   sDeli
55819>>>                    //---
55819>>>                    Writeln channel 5
55821>>>                End
55821>>>>
55821>>>
55821>>>
55821>>>                If ((MIORDD.ITEM_TI_EINAI=2) and (MIORDD.VPAGIAXRM3>0)) Begin
55823>>>                    // Edo spane epishs se 2 merh, aytes me pagia xreosh
55823>>>                    // kai aytes me kanonikh, grafoume 2 arxeia Periptosh b) & c) apo pano
55823>>>                    // // (UPPERCASE(Left(MIORDD.VITEM,1))="P")
55823>>>                    // Periptosh b) apo pano
55823>>>                    Write   channel 6   '"'
55825>>>                    Write   channel 6   'YPMF'
55827>>>                    Write   channel 6   '"'
55829>>>                    Write   channel 6   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк
55831>>>                    Write   channel 6   '"'
55833>>>                    Write   channel 6   'GR02'
55835>>>                    Write   channel 6   '"'
55837>>>                    Write   channel 6   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
55839>>>                    Write   channel 6   '"'
55841>>>                    Write   channel 6   "03"
55843>>>                    Write   channel 6   '"'
55845>>>                    Write   channel 6   sDeli // End of Excel Column D  ЙШдсва ГаШджгук
55847>>>                    Write   channel 6   '"'
55849>>>                    Write   channel 6   "04"
55851>>>                    Write   channel 6   '"'
55853>>>                    Write   channel 6   sDeli // End of Excel Column E  ТгугШ (Segment)
55855>>>                    Write   channel 6   '"'
55857>>>                    Write   channel 6   (Trim(MIORDH.CLIENT_ID))
55859>>>                    Write   channel 6   '"'
55861>>>                    Write   channel 6   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
55863>>>                    Write   channel 6   '"'
55865>>>                    Write   channel 6   (Trim(MIORDH.CN_CODE))
55867>>>                    Write   channel 6   '"'
55869>>>                    Write   channel 6   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ
55871>>>                    Write   channel 6   '"'
55873>>>                    Write   channel 6   (Trim(MIORDD.VITEM))
55875>>>                    Write   channel 6   '"'
55877>>>                    Write   channel 6   sDeli // End of Excel Column H  Тчзжк АдлвхШк
55879>>>                    Write   channel 6   '"'
55881>>>                    Write   channel 6   (MIORDD.VPRICE * MIORDD.VPAGIAXRM3)
55883>>>                    Write   channel 6   '"'
55885>>>                    Write   channel 6   sDeli // End of Excel Column I  Пжйц (Fixed)
55887>>>                    Write   channel 6   '"'
55889>>>                    Write   channel 6   'EUR'
55891>>>                    Write   channel 6   '"'
55893>>>                    Write   channel 6   sDeli // End of Excel Column J  МцгайгШ
55895>>>                    Write   channel 6   '"'
55897>>>                    Write   channel 6   MIORDD.VPAGIAXRM3
55899>>>                    Write   channel 6   '"'
55901>>>                    Write   channel 6   sDeli // End of Excel Column K  ПжйжлЮлШ гЬоиа лЮд жзжаШ айомЬа Ю зШЪаШ оиЬрйЮ
55903>>>                    Write   channel 6   '"'
55905>>>                    Write   channel 6   'm3' 
55907>>>                    Write   channel 6   '"'
55909>>>                    Write   channel 6   sDeli // End of Excel Column L  ЛждсЫШ ЛтлиЮйЮк 
55911>>>                    Write   channel 6   '"'
55913>>>                    Write   channel 6   MIORDH.DEOP_DATE
55915>>>                    Write   channel 6   '"'
55917>>>                    Write   channel 6   sDeli // End of Excel Column M  Ийочк Азц
55919>>>                    Write   channel 6   '"'
55921>>>                    Write   channel 6   MIORDH.DEOP_LHXH
55923>>>                    Write   channel 6   '"'
55925>>>                    Write   channel 6   sDeli // End of Excel Column N  Ийочк ырк
55927>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
55927>>>                    Write   channel 6   '"'
55929>>>                    Write   channel 6   (Trim(MIORDH.AA_DEOP))    // End of Excel Column O  AA DEOP
55931>>>                    Write   channel 6   '"'
55933>>>                    //Write   Channel 6   sDeli
55933>>>                    //---
55933>>>                    Writeln channel 6
55935>>>                   
55935>>>
55935>>>                    // Grafoume KAI san c)
55935>>>                    // Periptosh c) apo pano 
55935>>>                    Write   channel 7   '"'
55937>>>                    Write   channel 7   'YPMF'
55939>>>                    Write   channel 7   '"'
55941>>>                    Write   channel 7   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк  
55943>>>                    Write   channel 7   '"'
55945>>>                    Write   channel 7   'GR02' 
55947>>>                    Write   channel 7   '"'
55949>>>                    Write   channel 7   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
55951>>>                    Write   channel 7   '"'
55953>>>                    Write   channel 7   "03"
55955>>>                    Write   channel 7   '"'
55957>>>                    Write   channel 7   sDeli // End of Excel Column D  ЙШдсва ГаШджгук 
55959>>>                    Write   channel 7   '"'
55961>>>                    Write   channel 7   "04" 
55963>>>                    Write   channel 7   '"'
55965>>>                    Write   channel 7   sDeli // End of Excel Column E  ТгугШ (Segment)
55967>>>                    Write   channel 7   '"'
55969>>>                    Write   channel 7   (Trim(MIORDH.CLIENT_ID))
55971>>>                    Write   channel 7   '"'
55973>>>                    Write   channel 7   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
55975>>>                    Write   channel 7   '"'
55977>>>                    Write   channel 7   (Trim(MIORDH.CN_CODE))
55979>>>                    Write   channel 7   '"'
55981>>>                    Write   channel 7   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ 
55983>>>                    Write   channel 7   '"'
55985>>>                    Write   channel 7   (Trim(MIORDD.VITEM))
55987>>>                    Write   channel 7   '"'
55989>>>                    Write   channel 7   sDeli // End of Excel Column H  Тчзжк АдлвхШк
55991>>>                    Write   channel 7   '"'
55993>>>                    Write   channel 7   MIORDD.VUNITPRICE  // SOS Yannis ??? Ti einai, h timh monados h timh monados x posothta ???
55995>>>                    Write   channel 7   '"'
55997>>>                    Write   channel 7   sDeli // End of Excel Column I  Пжйц ШдШ m3
55999>>>                    Write   channel 7   '"'
56001>>>                    Write   channel 7   'EUR' 
56003>>>                    Write   channel 7   '"' 
56005>>>                    Write   channel 7   sDeli // End of Excel Column J  МцгайгШ
56007>>>                    Write   channel 7   '"'
56009>>>                    Write   channel 7   'm3' 
56011>>>                    Write   channel 7   '"'
56013>>>                    Write   channel 7   sDeli // End of Excel Column K  ЛждсЫШ ЛтлиЮйЮк 
56015>>>                    Write   channel 7   '"'
56017>>>                    Write   channel 7   MIORDD.VPAGIAXRM3
56019>>>                    Write   channel 7   '"'
56021>>>                    Write   channel 7   sDeli // End of Excel Column L  ПжйжлЮлШ Шзж лЮд жзжаШ айомЬа Ю оиЬрйЮ ШдШ m3
56023>>>                    Write   channel 7   '"'
56025>>>                    Write   channel 7   'm3' 
56027>>>                    Write   channel 7   '"'
56029>>>                    Write   channel 7   sDeli // End of Excel Column M  ЛждсЫШ ЛтлиЮйЮк 
56031>>>                    Write   channel 7   '"'
56033>>>                    Write   channel 7   MIORDH.DEOP_DATE
56035>>>                    Write   channel 7   '"'
56037>>>                    Write   channel 7   sDeli // End of Excel Column N  Ийочк Азц
56039>>>                    Write   channel 7   '"'
56041>>>                    Write   channel 7   MIORDH.DEOP_LHXH
56043>>>                    Write   channel 7   '"'
56045>>>                    Write   channel 7   sDeli // End of Excel Column O  Ийочк ырк
56047>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
56047>>>                    Write   channel 7   '"'
56049>>>                    Write   channel 7   (Trim(MIORDH.AA_DEOP))    // End of Excel Column P  AA DEOP
56051>>>                    Write   channel 7   '"'
56053>>>                    //Write   Channel 7   sDeli
56053>>>                    //---
56053>>>                    Writeln channel 7
56055>>>                    
56055>>>                End
56055>>>>
56055>>>                Else If ((MIORDD.ITEM_TI_EINAI=2) and (MIORDD.VPAGIAXRM3=0)) Begin
56058>>>                    // Edo spane epishs se 2 merh, aytes me pagia xreosh 
56058>>>                    // kai aytes me kanonikh, grafoume 2 arxeia Periptosh b) & c) apo pano 
56058>>>                    // // (UPPERCASE(Left(MIORDD.VITEM,1))="P")
56058>>>                    // Periptosh c) apo pano 
56058>>>                    Write   channel 7   '"'
56060>>>                    Write   channel 7   'YPMF'
56062>>>                    Write   channel 7   '"'
56064>>>                    Write   channel 7   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк  
56066>>>                    Write   channel 7   '"'
56068>>>                    Write   channel 7   'GR02' 
56070>>>                    Write   channel 7   '"'
56072>>>                    Write   channel 7   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
56074>>>                    Write   channel 7   '"'
56076>>>                    Write   channel 7   "03"
56078>>>                    Write   channel 7   '"'
56080>>>                    Write   channel 7   sDeli // End of Excel Column D  ЙШдсва ГаШджгук 
56082>>>                    Write   channel 7   '"'
56084>>>                    Write   channel 7   "04"
56086>>>                    Write   channel 7   '"'
56088>>>                    Write   channel 7   sDeli // End of Excel Column E  ТгугШ (Segment)
56090>>>                    Write   channel 7   '"'
56092>>>                    Write   channel 7   (Trim(MIORDH.CLIENT_ID))
56094>>>                    Write   channel 7   '"'
56096>>>                    Write   channel 7   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
56098>>>                    Write   channel 7   '"'
56100>>>                    Write   channel 7   (Trim(MIORDH.CN_CODE))
56102>>>                    Write   channel 7   '"'
56104>>>                    Write   channel 7   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ 
56106>>>                    Write   channel 7   '"'
56108>>>                    Write   channel 7   (Trim(MIORDD.VITEM))
56110>>>                    Write   channel 7   '"'
56112>>>                    Write   channel 7   sDeli // End of Excel Column H  Тчзжк АдлвхШк
56114>>>                    Write   channel 7   '"'
56116>>>                    Write   channel 7   MIORDD.VUNITPRICE  // SOS Yannis ??? Ti einai, h timh monados h timh monados x posothta ???
56118>>>                    Write   channel 7   '"'
56120>>>                    Write   channel 7   sDeli // End of Excel Column I  Пжйц ШдШ m3
56122>>>                    Write   channel 7   '"'
56124>>>                    Write   channel 7   'EUR' 
56126>>>                    Write   channel 7   '"'
56128>>>                    Write   channel 7   sDeli // End of Excel Column J  МцгайгШ
56130>>>                    Write   channel 7   '"'
56132>>>                    Write   channel 7   'm3' 
56134>>>                    Write   channel 7   '"'
56136>>>                    Write   channel 7   sDeli // End of Excel Column K  ЛждсЫШ ЛтлиЮйЮк 
56138>>>                    Write   channel 7   '"'
56140>>>                    Write   channel 7   MIORDD.VPAGIAXRM3
56142>>>                    Write   channel 7   '"'
56144>>>                    Write   channel 7   sDeli // End of Excel Column L  ПжйжлЮлШ Шзж лЮд жзжаШ айомЬа Ю оиЬрйЮ ШдШ m3
56146>>>                    Write   channel 7   '"'
56148>>>                    Write   channel 7   'm3' 
56150>>>                    Write   channel 7   '"'
56152>>>                    Write   channel 7   sDeli // End of Excel Column M  ЛждсЫШ ЛтлиЮйЮк 
56154>>>                    Write   channel 7   '"'
56156>>>                    Write   channel 7   MIORDH.DEOP_DATE
56158>>>                    Write   channel 7   '"'
56160>>>                    Write   channel 7   sDeli // End of Excel Column N  Ийочк Азц
56162>>>                    Write   channel 7   '"'
56164>>>                    Write   channel 7   MIORDH.DEOP_LHXH
56166>>>                    Write   channel 7   '"'
56168>>>                    Write   channel 7   sDeli // End of Excel Column O  Ийочк ырк
56170>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
56170>>>                    Write   channel 7   '"'
56172>>>                    Write   channel 7   (Trim(MIORDH.AA_DEOP))    // End of Excel Column P  AA DEOP
56174>>>                    Write   channel 7   '"'
56176>>>                    //Write   Channel 7   sDeli
56176>>>                    //---
56176>>>                    Writeln channel 7
56178>>>                End
56178>>>>
56178>>>                
56178>>>                If (MIORDD.ITEM_TI_EINAI=3) Begin
56180>>>                    // Periptosh d) apo pano 
56180>>>                    //If           (Left(MIORDD.VITEM,1) ="К") Move 3 to MIORDD.ITEM_TI_EINAI
56180>>>                    //If           (Left(MIORDD.VITEM,1) ="в") Move 3 to MIORDD.ITEM_TI_EINAI
56180>>>                    Write   channel 8   '"'
56182>>>                    Write   channel 8   'YPRD'
56184>>>                    Write   channel 8   '"'
56186>>>                    Write   channel 8   sDeli // End of Excel Column B  Тчзжк СмдЯубЮк  
56188>>>                    Write   channel 8   '"'
56190>>>                    Write   channel 8   'GR02' 
56192>>>                    Write   channel 8   '"'
56194>>>                    Write   channel 8   sDeli // End of Excel Column C  ОиЪШдайгцк ПрвуйЬрд
56196>>>                    Write   channel 8   '"'
56198>>>                    Write   channel 8   "03" 
56200>>>                    Write   channel 8   '"'
56202>>>                    Write   channel 8   sDeli // End of Excel Column D  ЙШдсва ГаШджгук 
56204>>>                    Write   channel 8   '"'
56206>>>                    Write   channel 8   "04"
56208>>>                    Write   channel 8   '"'
56210>>>                    Write   channel 8   sDeli // End of Excel Column E  ТгугШ (Segment)
56212>>>                    Write   channel 8   '"'
56214>>>                    Write   channel 8   (Trim(MIORDH.CLIENT_ID))
56216>>>                    Write   channel 8   '"'
56218>>>                    Write   channel 8   sDeli // End of Excel Column F  ПШвШацк бчиажк брЫабцк зЬвслЮ
56220>>>                    Write   channel 8   '"'
56222>>>                    Write   channel 8   (Trim(MIORDH.CN_CODE))
56224>>>                    Write   channel 8   '"'
56226>>>                    Write   channel 8   sDeli // End of Excel Column G  ПШвШацк бчиажк брЫабцк зШиШвузлЮ 
56228>>>                    Write   channel 8   '"'
56230>>>                    Write   channel 8   ''
56232>>>                    Write   channel 8   '"'
56234>>>                    Write   channel 8   sDeli // End of Excel Column H  Дчижк ЙШЯмйлтиЮйЮк
56236>>>                    Write   channel 8   '"'
56238>>>                    Write   channel 8   ''    
56240>>>                    Write   channel 8   '"'
56242>>>                    Write   channel 8   sDeli // End of Excel Column I  Пжйц fixed
56244>>>                    Write   channel 8   '"'
56246>>>                    Write   channel 8   'EUR' 
56248>>>                    Write   channel 8   '"'
56250>>>                    Write   channel 8   sDeli // End of Excel Column J  МцгайгШ
56252>>>                    Write   channel 8   '"'
56254>>>                    Write   channel 8   MIORDH.DEOP_DATE
56256>>>                    Write   channel 8   '"'
56258>>>                    Write   channel 8   sDeli // End of Excel Column K  Ийочк Азц
56260>>>                    Write   channel 8   '"'
56262>>>                    Write   channel 8   MIORDH.DEOP_LHXH
56264>>>                    Write   channel 8   '"'
56266>>>                    Write   channel 8   sDeli // End of Excel Column L  Ийочк ырк
56268>>>                    // ПижйЯЬлжмгЬ ЬгЬак лж АА ГДОП 
56268>>>                    Write   channel 8   '"'
56270>>>                    Write   channel 8   (Trim(MIORDH.AA_DEOP))    // End of Excel Column M  AA DEOP
56272>>>                    Write   channel 8   '"'
56274>>>                    Write   channel 8   sDeli
56276>>>                    Write   channel 8   '"'
56278>>>                    Write   channel 8   (Trim(MIORDD.VITEM))
56280>>>                    Write   channel 8   '"'
56282>>>                    Write   channel 8   sDeli // End of Excel Column N  ЙрЫабжк ДаЫжмк
56284>>>                    Write   channel 8   '"'
56286>>>                    Write   channel 8   (Trim(MIORDD.VITEM_DESCR)) 
56288>>>                    Write   channel 8   '"'
56290>>>                    Write   channel 8   sDeli // End of Excel Column O  ПЬиаЪиШнЮ ДаЫжмк
56292>>>                    Write   channel 8   '"'
56294>>>                    Write   channel 8   MIORDD.VQTY
56296>>>                    Write   channel 8   '"'
56298>>>                    Write   channel 8   sDeli // End of Excel Column P  ПжйцлЮлШ
56300>>>                    Write   channel 8   '"'
56302>>>                    Write   channel 8   MIORDD.VUNITPRICE
56304>>>                    Write   channel 8   '"' // End of Excel Column Q  Тагу ЛждсЫжк
56306>>>                    //Write   channel 8   sDeli 
56306>>>                    //---
56306>>>                    Writeln channel 8
56308>>>                End
56308>>>>
56308>>>                //========================================================
56308>>>                //========================================================
56308>>>                Find GT MIORDD by Index.1
56309>>>>
56309>>>            Loop
56310>>>>
56310>>>        End_Procedure        
56311>>>        
56311>>>        //AB-StoreEnd
56311>>>
56311>>>    End_Object    // Button5
56312>>>    Object TextBox10 is a TextBox
56314>>>        Set Label to "юджгШ ШиоЬхжм"
56315>>>        Set Auto_Size_State to False
56316>>>        Set Location to 34 53
56317>>>        Set Size to 10 55
56318>>>        Set TypeFace to "MS Sans Serif"
56319>>>        Set Color to 14024703
56320>>>    End_Object    // TextBox10
56321>>>
56321>>>    Object SaveAsDialog1 is a SaveAsDialog
56323>>>        Set Location to 292 33
56324>>>
56324>>>        //AB-StoreStart
56324>>>        //Show_Dialog is a predefined function method in the SaveAsDialog class
56324>>>        //get Show_Dialog to an integer variable to call the SaveAsDialog
56324>>>        //
56324>>>        //DoCallSaveAsDialog is NOT a predefined method in the SaveAsDialog class
56324>>>        //DoCallSaveAsDialog it is just used an example
56324>>>        //you can send DoCallSaveAsDialog from another object, such as a button
56324>>>        //
56324>>>        //Procedure DoCallSaveAsDialog
56324>>>        //    integer iVoid
56324>>>        //    get Show_Dialog of SaveAsDialog1 to iVoid
56324>>>        //End_Procedure  // DoCallSaveAsDialog
56324>>>        //AB-StoreEnd
56324>>>
56324>>>    End_Object    // SaveAsDialog1
56325>>>
56325>>>End_Object
56326>        //Use ExportFromSMSMI2DEOP.vw
56326>
56326>        //------
56326>        Procedure Activate_About
56329>            Send DoAbout "" "" "" "" ""
56330>        End_Procedure
56331>
56331>    End_Object
56332>    
56332>End_Object
56333>
56333>
56333>//Send Activate_ExportFromSMSMI2 of (oClientArea(oMain))
56333>Start_UI
56334>
Summary
Memory Available: 833785856
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 30805
Total Resources: 0
Total Commands : 56333
Total Windows  : 1
Total Pages    : 1
Static Data    : 366156
Message area   : 333722
Total Blocks   : 19875
