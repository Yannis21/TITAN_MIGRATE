//AB/ Project MazEisp
//AB/     Object prj is a Report_Project
//AB/         Set ProjectName to "MazEisp"
//AB/         Set ProjectFileName to "MazEisp.RV"
//AB/         Set GenerateFileName to "NONAME"

// Project Object Structure
//   MazEisp is a ReportView
//     Btypkin_DD1 is a Btypkin_DataDictionary
//     Btypkin_DD is a DataDictionary
//     GroupSub1 is a GroupSub
//       cust_from is a Form
//       F_CODE_APO is a FormSub
//       TextBoxSub1 is a TextBoxSub
//       Textbox6 is a Textbox
//       FormSub3 is a FormSub
//       FormSub5 is a FormSub
//     GroupSub4 is a GroupSub
//       F_HME_APO is a FormSub
//       F_HME_EOS is a FormSub
//       Textbox3 is a Textbox
//       Textbox4 is a Textbox
//     DestRadio is a RadioGroup
//       WindowRadio is a Radio
//       PrinterRadio is a Radio
//       FileRadio is a Radio
//     FileTypeGroup is a Group
//       FileNameForm is a Form
//         New_dialog is a SaveAsdialog
//       TypeCombo is a ComboForm
//       ApplyExtCheckBox is a CheckBox
//       TextBoxSub23 is a TextBoxSub
//       TextBoxSub24 is a TextBoxSub
//     ButtonSub1 is a Button
//     ButtonSub2 is a ButtonSub
//     TextBoxSub1 is a TextBoxSub
//     btnSelect is a ButtonSub
//     Btypkin_Grid is a dbListSub
//     TextBoxSub2 is a TextBoxSub
//     frmCount is a FormSub
//     pmoves3WQLReport is a CrystalReportSubSQL

// Register all objects
Register_Object ApplyExtCheckBox
Register_Object Btypkin_DD
Register_Object Btypkin_DD1
Register_Object Btypkin_Grid
Register_Object ButtonSub1
Register_Object ButtonSub2
Register_Object btnSelect
Register_Object cust_from
Register_Object DestRadio
Register_Object F_CODE_APO
Register_Object F_HME_APO
Register_Object F_HME_EOS
Register_Object FileNameForm
Register_Object FileRadio
Register_Object FileTypeGroup
Register_Object FormSub3
Register_Object FormSub5
Register_Object frmCount
Register_Object GroupSub1
Register_Object GroupSub4
Register_Object MazEisp
Register_Object New_dialog
Register_Object PrinterRadio
Register_Object pmoves3WQLReport
Register_Object TextBoxSub1
Register_Object TextBoxSub2
Register_Object TextBoxSub23
Register_Object TextBoxSub24
Register_Object Textbox3
Register_Object Textbox4
Register_Object Textbox6
Register_Object TypeCombo
Register_Object WindowRadio


//AB/     Report View


    //AB-StoreTopStart

    Use dfallrpt
    Use Btypkin.dd
    Use pmoves.dd
    Use syscurxr.dd
    use clients.dd

    use sl002.sl
    use sl100.sl

    //AB-StoreTopEnd

    //AB-IgnoreStart

    Use DFAllEnt.pkg
    Use Group.Sub
    Use Form.Sub
    Use Txtbox.Sub
    Use Button.Sub
    Use dbList.Sub

    Use BTYPKIN.DD

    //AB-IgnoreEnd

    DEFERRED_VIEW Activate_MazEisp FOR ;
    ;
    Object MazEisp is a ReportView

        //AB-StoreTopStart

        Property String     psModule    Public ''
        property integer    epil        public  0

        Object Btypkin_DD1 is a Btypkin_DataDictionary
        End_Object

        //AB-StoreTopEnd

        Set Label to "ãòù†°‚™ ú†©ß®·•ú†™ ò§ò ßú¢·´û"
        Set Size to 292 513
        Set Location to 1 5

        //AB-DDOStart

        Object Btypkin_DD is a Btypkin_DataDictionary

            //AB-StoreStart

            //            Begin_Constraints
            //                Constrain Btypkin.Btypkin_Module Eq (psModule(Self))
            //            End_Constraints

            //AB-StoreEnd

        End_Object    // Btypkin_DD


        //AB-DDOEnd

        Object GroupSub1 is a GroupSub
            Set Label to "èú¢·´û™"
            Set Size to 57 283
            Set Location to 1 7
            Object cust_from is a Form
                Set Size to 13 74
                Set Location to 20 61
                Set Label_Justification_Mode to jMode_Right
                Set Form_DataType to ascii_window
                Set Prompt_Button_Mode to pb_PromptOn

                //AB-StoreStart

                Set Prompt_Object to (sl100(Self))

                Procedure Prompt_Callback integer hPrompt
                    set Export_Column   of hPrompt to 0
                    Set Initial_Column  of hPrompt to 0
                end_procedure

                procedure onchange
                    string sclient
                    get value item 0 to sclient
                    Move (fsclient(Self,sclient)) to sclient
                    set value of (formsub3(self)) to sclient
                end_procedure

                procedure prompt
                    Set psModule Of (sl100(Self)) to (psModule(Self))
                    Forward Send Prompt
                end_procedure




                //AB-StoreEnd

            End_Object    // cust_from

            Object F_CODE_APO is a FormSub

                //AB-StoreTopStart

                //AB-StoreTopEnd

                Set Size to 13 74
                Set Location to 37 61
                Set Label_Col_Offset to 2
                Set Label_Justification_Mode to jMode_Right
                Set Prompt_Button_Mode to pb_PromptOn

                //AB-StoreStart

                Set Prompt_Object to (SL002(Self))

                Function fsBranch String asCompany String asBranch Returns String
                    String rVal
                    Clear Branch
                    Move asCompany  to Branch.Company_Code
                    Move asBranch   to Branch.Branch_Code
                    Find Eq Branch by Index.1
                    If (Found) Move Branch.Branch_Name to rVal
                    Else Move '' to rVal
                    Function_Return rVal
                End_Function

                Procedure Prompt_Callback integer hPrompt
                    set Export_Column   of hPrompt to 0
                    Set Initial_Column  of hPrompt to 0
                end_procedure

                procedure onchange
                    String sCompany sBranch sdescr
                    Get Value item 0 to sBranch
                    Get fsBranch Syscurxr.Company_Code sBranch to sdescr
                    set value of (formsub5(self)) to sdescr
                end_procedure

































                //AB-StoreEnd

            End_Object    // F_CODE_APO

            Object TextBoxSub1 is a TextBoxSub
                Set Label to "ìß¶°ò´/£ò"
                Set Auto_Size_State to FALSE
                Set FontSize to 4 0
                Set Location to 38 13
                Set Size to 10 41
                Set Enabled_State to TRUE
            End_Object    // TextBoxSub1

            Object Textbox6 is a Textbox
                Set Label to "î¶®‚ò™  ÄßÊ"
                Set Location to 20 12
                Set Size to 10 46
            End_Object    // Textbox6

            Object FormSub3 is a FormSub
                Set Size to 13 142
                Set Location to 20 137
                Set Label_Col_Offset to 2

                //AB-StoreStart
                set enabled_state to false
                //AB-StoreEnd

            End_Object    // FormSub3

            Object FormSub5 is a FormSub
                Set Size to 13 142
                Set Location to 37 137
                Set Label_Col_Offset to 2

                //AB-StoreStart
                set enabled_state to false
                //AB-StoreEnd

            End_Object    // FormSub5


            //AB-StoreStart

            Function Startcust Returns string
                Function_return (Value(cust_from(Current_object), 0))
            End_function

            Function StartBranch Returns string
                Function_return (Value(f_code_apo(Current_object), 0))
            End_function










            //AB-StoreEnd

        End_Object    // GroupSub1

        Object GroupSub4 is a GroupSub
            Set Label to "â†§„©ú†™"
            Set Size to 49 283
            Set Location to 64 7
            Object F_HME_APO is a FormSub
                Set Size to 13 66
                Set Location to 14 60
                Set Label_Col_Offset to 2
                Set Label_Justification_Mode to jMode_Right
                Set Form_Datatype Item 0 to Mask_Date_Window
                Set Prompt_Button_Mode to pb_PromptOn
                Set Form_Mask Item 0 to "d/M/yyyy"

                //AB-StoreStart
                set prompt_object to (ocalendar(self))





                //AB-StoreEnd

            End_Object    // F_HME_APO

            Object F_HME_EOS is a FormSub
                Set Size to 13 66
                Set Location to 30 60
                Set Label_Col_Offset to 2
                Set Label_Justification_Mode to jMode_Right
                Set Form_Datatype Item 0 to Mask_Date_Window
                Set Prompt_Button_Mode to pb_PromptOn
                Set Form_Mask Item 0 to "d/M/yyyy"

                //AB-StoreStart
                set prompt_object to (ocalendar(self))





                //AB-StoreEnd

            End_Object    // F_HME_EOS

            Object Textbox3 is a Textbox
                Set Label to "ÄßÊ Ü£/§Âò :"
                Set Location to 16 13
                Set Size to 10 43
            End_Object    // Textbox3

            Object Textbox4 is a Textbox
                Set Label to "Ñ‡™ Ü£§Âò  :"
                Set Location to 30 12
                Set Size to 12 41
            End_Object    // Textbox4


            //AB-StoreStart
            Function Starthme Returns string
                Function_return (Value(f_hme_apo(Current_object), 0))
            End_function

            Function Endhme Returns string
                Function_return (Value(f_hme_eos(Current_object), 0))
            End_function











            //AB-StoreEnd

        End_Object    // GroupSub4

        Object DestRadio is a RadioGroup

            //AB-StoreTopStart

            //AB-StoreTopEnd

            Set Label to "Ñ°´Á&ß‡©û"
            Set Size to 60 49
            Set Location to 125 7
            Object WindowRadio is a Radio
                Set Size to 13 30
                Set Location to 12 12
                Set Bitmap to "screen4.bmp"
            End_Object    // WindowRadio

            Object PrinterRadio is a Radio
                Set Size to 10 31
                Set Location to 30 12
                Set Bitmap to "PRINT_M1.BMP"
            End_Object    // PrinterRadio

            Object FileRadio is a Radio
                Set Size to 10 29
                Set Location to 47 12
                Set Bitmap to "FILE16.BMP"
            End_Object    // FileRadio


            //AB-StoreStart

            //***
            //*** Procedure: Notify_Select_state
            //*** Purpose  : Augemented to setup the output destination of the WinQL
            //***            report. The procedure is sent when the user changes the
            //***            selection.
            //***

            Procedure Notify_Select_State  Integer iNewItem  Integer iOldItem
                Forward Send Notify_Select_State  iNewItem  iOldItem
                If iNewItem Eq 0 ;
                    Set Output_Device_Mode To WQL_PRINT_TO_WINDOW
                Else If iNewItem Eq 1;
                    Set Output_Device_Mode To WQL_PRINT_TO_PRINTER
                Else If iNewItem Eq 2 ;
                    Set Output_Device_Mode To WQL_PRINT_TO_FILE


                Send AdjustFileTypeShadow (iNewItem < 2)
            End_Procedure


            //AB-StoreEnd

        End_Object    // DestRadio

        Object FileTypeGroup is a Group

            //AB-StoreTopStart

            //AB-StoreTopEnd

            Set Label to "Ä§ò≠¶®· Ä®ÆúÂ¶¨"
            Set Size to 61 195
            Set Location to 125 61
            Object FileNameForm is a Form

                //AB-StoreTopStart

                //AB-StoreTopEnd

                Set Size to 13 155
                Set Location to 10 33
                Set Label_Col_Offset to 2
                Set Label_Justification_Mode to jMode_Right
                Set Prompt_Button_Mode to pb_PromptOn

                //AB-StoreStart
                //*** Default item value
                Set Value item 0 to "pmoves.doc"

                Procedure Prompt
                    Local String  SelectedFile
                    Local String  Extension
                    Local String  Filter
                    Local Integer Type
                    Local Integer Selected

                    //*** Setup initial file name
                    Get Value Item 0 To SelectedFile
                    If SelectedFile Eq "" Begin
                        Get WQLFileExt To Extension
                        Move ("pmoves" + Extension) To SelectedFile
                    End

                    //*** Create a filter for the save as dialog
                    Move "" To Filter
                    Get WQLFileTYpe To Type
                    If Type Eq WQL_WordWinType ;
                        Append Filter "Word for Windows (*.doc)|*.doc"
                    If ((Type Eq WQL_Xls2Type) Or (Type Eq WQL_Xls3Type) Or (Type Eq WQL_Xls4Type) Or (Type Eq WQL_Xls5Type)) ;
                        Append Filter "Excel (*.xls)|*.xls"
                    If Type Eq WQL_RichTextFormatType ;
                        Append Filter "Rich Text (*.rtf)|*.rtf"
                    If Type Eq WQL_TextType ;
                        Append Filter "Text (*.txt)|*.txt"
                    If Type Eq WQL_RecordType ;
                        Append Filter "Record Style (*.rec)|*.rec"
                    If Type Eq WQL_CommaSeparatedType ;
                        Append Filter "Comma Separated Values (*.csv)|*.csv"
                    If Type Eq WQL_DIFType ;
                        Append Filter "Data Interchange Format (*.dif)|*.dif"
                    Append Filter "|All Files|*.*"

                    //*** Create a save as dialog
                    Object New_dialog Is A SaveAsdialog
                        //*** Setup title
                        Set Dialog_Caption        To "Item report export to disk, give file name"
                        Set Filter_String         To Filter
                        Set Hidereadonly_State    To True
                        Set Overwriteprompt_State To True
                        Set Showfiletitle_State   To True
                        Set File_Title            To SelectedFile
                    End_object // New_dialog

                    //*** Start the save as dialog
                    Get Show_Dialog Of (New_dialog(Current_object)) To Selected
                    If Selected Begin
                        Get File_Name Of (New_Dialog(Current_object)) To SelectedFile
                        Set Value Item 0 To SelectedFile
                    End

                    //*** Destroy the save as dialog
                    Send Request_Destroy_object To (New_dialog(Current_object))
                End_procedure // Start_Prompt

                //***
                //*** Function: FileName
                //*** Purpose : Returns the name of the file to export to
                //***

                Function FileName Returns String
                    Local String  SelectedFile

                    //*** Get file name
                    Get Value Item 0 To SelectedFile
                    If SelectedFile Eq "" ;
                        Move "pmoves.doc" To SelectedFile

                    Function_return SelectedFile
                End_function // FileName












                //AB-StoreEnd

            End_Object    // FileNameForm

            Object TypeCombo is a ComboForm

                //AB-StoreTopStart

                //AB-StoreTopEnd

                Set Size to 13 155
                Set Location to 29 33
                Set Label_Col_Offset to 2
                Set Label_Justification_Mode to jMode_Right

                //AB-StoreStart
                //*** Make sure the user picks a list item and cannot enter information
                Set Entry_state Item 0 To False

                //*** Show list unsorted. This must be done because we raly on the order of the
                //*** list to determine the type of the file. (See FileType function)
                Set Combo_Sort_State To False

                //***
                //*** Procedure: Combo_Fill_list
                //*** Purpose  : Augemebnted to fill the list with export file types.
                //***

                Procedure Combo_Fill_List
                    Send Combo_Add_item "Word for Windows"
                    Send Combo_Add_Item "Excel 2.1"
                    Send Combo_Add_Item "Excel 3.0"
                    Send Combo_Add_Item "Excel 4.0"
                    Send Combo_Add_Item "Excel 5.0"
                    Send Combo_Add_Item "Rich Text"
                    Send Combo_Add_Item "Text"
                    Send Combo_Add_Item "Record Style"
                    Send Combo_Add_Item "Comma Separated"
                    Send Combo_Add_Item "Data Interchage Format (DIF)"
                End_procedure // Combo_Fill_List


                //***
                //*** Function: FileType
                //*** Purpose : Type to export to
                //***

                Function FileType Returns Integer
                    Local String  FileTypeName
                    Local Integer FileTypeValue
                    Local Integer SelectedItem

                    Get Value Item 0 To FileTypeName
                    Get Combo_Item_Matching FileTypeName To SelectedItem
                    Move WQL_TextType To FileTypeValue
                    If SelectedItem Ne -1 Begin
                        If SelectedItem Eq 0 Move WQL_WordWinType        To FileTypeValue
                        If SelectedItem Eq 1 Move WQL_Xls2Type           To FileTypeValue
                        If SelectedItem Eq 2 Move WQL_Xls3Type           To FileTypeValue
                        If SelectedItem Eq 3 Move WQL_Xls4Type           To FileTypeValue
                        If SelectedItem Eq 4 Move WQL_Xls5Type           To FileTypeValue
                        If SelectedItem Eq 5 Move WQL_RichTextFormatType To FileTypeValue
                        If SelectedItem Eq 6 Move WQL_TextType           To FileTypeValue
                        If SelectedItem Eq 7 Move WQL_RecordType         To FileTypeValue
                        If SelectedItem Eq 8 Move WQL_CommaSeparatedType To FileTypeValue
                        If SelectedItem Eq 9 Move WQL_DIFType            To FileTypeValue
                    End

                    Function_return FileTypeValue
                End_function // FileType


                //***
                //*** Function: FileExt
                //*** Purpose : Extension for the type to export to
                //***

                Function FileExt Returns String
                    Local String  FileTypeExt
                    Local Integer FileTypeValue

                    Get FileType To FileTypeValue
                    If FileTypeValue Eq WQL_WordWinType        Move ".doc" To FileTypeExt
                    If FileTypeValue Eq WQL_Xls2Type           Move ".xls" To FileTypeExt
                    If FileTypeValue Eq WQL_Xls3Type           Move ".xls" To FileTypeExt
                    If FileTypeValue Eq WQL_Xls4Type           Move ".xls" To FileTypeExt
                    If FileTypeValue Eq WQL_Xls5Type           Move ".xls" To FileTypeExt
                    If FileTypeValue Eq WQL_RichTextFormatType Move ".rtf" To FileTypeExt
                    If FileTypeValue Eq WQL_TextType           Move ".txt" To FileTypeExt
                    If FileTypeValue Eq WQL_RecordType         Move ".rec" To FileTypeExt
                    If FileTypeValue Eq WQL_CommaSeparatedType Move ".csv" To FileTypeExt
                    If FileTypeValue Eq WQL_DIFType            Move ".dif" To FileTypeExt

                    Function_return FileTypeExt
                End_function // FileExt



                //***
                //*** Procedure: OnCloseUp
                //*** Purpose  : Augemented to auto,matically change the extension of the
                //***            filename
                //***

                Procedure OnChange
                    Local String  OldName
                    Local String  Extension
                    Local Integer ChangeExt

                    Get ChangeExtension To ChangeExt
                    If ChangeExt Begin
                        Get WQLFileName To OldName
                        Get FileExt To Extension
                        Set WQLFileName To (Left(OldName, (Pos(".", Oldname) - 1)) + Extension)
                    End
                End_procedure // OnChange

                //AB-StoreEnd

            End_Object    // TypeCombo

            Object ApplyExtCheckBox is a CheckBox

                //AB-StoreTopStart

                //AB-StoreTopEnd

                Set Label to "Apply combo extension"
                Set Size to 10 89
                Set Location to 47 33

                //AB-StoreStart
                //*** Apply extensions by default
                Set Select_state Item 0 To True
                //AB-StoreEnd

            End_Object    // ApplyExtCheckBox

            Object TextBoxSub23 is a TextBoxSub
                Set Label to "é§¶£ò"
                Set FontSize to 4 0
                Set Location to 10 6
                Set Size to 10 25
                Set Enabled_State to TRUE
            End_Object    // TextBoxSub23

            Object TextBoxSub24 is a TextBoxSub
                Set Label to "íÁß¶™"
                Set FontSize to 4 0
                Set Location to 30 5
                Set Size to 10 23
                Set Enabled_State to TRUE
            End_Object    // TextBoxSub24


            //AB-StoreStart




            Function WQLFileName Returns String
                Function_return (FileName(FileNameForm(Current_object)))
            End_function // WQLFIleName

            Procedure Set WQLFileName String NewName
                Set Value Of (FileNameForm(Current_object)) Item 0 To NewName
            End_procedure // Set WQLFIleName


            //***
            //*** Function: WQLFIleType
            //*** Purpose : The extension type of the file to export to
            //***

            Function WQLFileType Returns Integer
                Function_return (FileType(TypeCombo(Current_object)))
            End_function // WQLFIleType


            //***
            //*** Function: WQLFIleExt
            //*** Purpose : The extension type of the file to export to
            //***

            Function WQLFileExt Returns Integer
                Function_return (FileExt(TypeCombo(Current_object)))
            End_function // WQLFIleExt



            //***
            //*** Function: ChangeExtension
            //*** Purpose : Must extension be dynamically updated?
            //***

            Function ChangeExtension Returns Integer
                Function_return (Select_state(ApplyExtCheckBox(Current_object), 0))
            End_function // ChangeExtension


            //AB-StoreEnd

        End_Object    // FileTypeGroup

        Object ButtonSub1 is a Button

            //AB-StoreTopStart

            //AB-StoreTopEnd

            Set Bitmap to "RUNPROG.BMP"
            Set Size to 18 28
            Set Location to 128 262

            //AB-StoreStart
            Procedure OnClick
               string dateapo dateeos datehh datemm dateyy msgstr
               integer listatus

                Integer iInt iCount iRec
                String  sBitmap sLabel

                Zerofile TmpPmv

                Get Label   to sLabel
                Get Bitmap  to sBitmap
                Set Bitmap  to ''
                Set Label   to ''
                Set Enabled_State to False

                Get Select_Count of (Btypkin_Grid(Self)) to iInt
                If (iInt>0) Begin
                    Lock
                    For iCount from 0 to (iInt-1)
                        Get array_value of (Selected_Items(Btypkin_Grid(self))) Item iCount to iRec
                        Clear Btypkin
                        Move iRec to Btypkin.Recnum
                        Find Eq Btypkin.Recnum
                        Clear TmpPmv
                        Move Btypkin.Btypkin_Code to TmpPmv.Ctypkin_Code
                        //Move iRec to TmpPmv.Pmoves_Recnum
                        Find Eq TmpPmv By Index.1
                        Saverecord TmpPmv
                        Set Label to iRec
                    Loop
                    Unlock
                End

                Set Label   to (Trim(sLabel))
                Set Bitmap  to (Trim(sBitmap))
                Set Enabled_State to True

               Get Starthme To dateapo
               Get Endhme   To dateeos
                if dateeos eq "" begin
                 move 31 to datehh
                 move 12 to datemm
                 move syscurxr.year_year to dateyy
                 Append dateeos datehh
                 append dateeos datemm
                 append dateeos dateyy
                end

                if dateapo eq "" begin
                  move 01 to datehh
                  move 01 to datemm
                  move syscurxr.year_year to dateyy
                  append dateapo datehh
                  append dateapo "/"
                  append dateapo datemm
                  append dateapo "/"
                  append dateapo dateyy

               end

                move 0 to listatus
                     if (dateapo ne "") begin
                       if ((dateapo < syscurxr.year_xrhshfrom) or (dateapo > syscurxr.year_xrhshto)) begin
                          move "" to msgstr
                          move 1 to listatus
                          move "Ü£/§Âú™ Ñß†¢¶ö„™ Ñ°´Ê™ é®Â‡§ ï®„©û™" to msgstr
                          error 999 msgstr

                       end
                     end

                      if (dateeos ne "") begin
                       if ((dateeos < syscurxr.year_xrhshfrom) or (dateeos > syscurxr.year_xrhshto)) begin
                          move "" to msgstr
                           move 1 to listatus
                          move "Ü£/§Âú™ Ñß†¢¶ö„™ Ñ°´Ê™ é®Â‡§ ï®„©û™" to msgstr
                          error 999 msgstr
                       end
                      end
               if (listatus = 0) begin
                   Send Runpmoves3Report To (pmoves3WQLReport(Current_Object))
               end



            End_Procedure


































































            //AB-StoreEnd

        End_Object    // ButtonSub1

        Object ButtonSub2 is a ButtonSub

            //AB-StoreTopStart

            //AB-StoreTopEnd

            Set Bitmap to "CANCEL.BMP"
            Set Size to 18 28
            Set Location to 168 262

            //AB-StoreStart
            Procedure OnClick
                Send Request_Cancel
            End_Procedure




            //AB-StoreEnd

        End_Object    // ButtonSub2

        Object TextBoxSub1 is a TextBoxSub
            Set Label to "â†§„©ú†™ Ä•†¶ö®·≠‡§"
            Set Auto_Size_State to FALSE
            Set FontSize to 4 0
            Set Location to -1 296
            Set Size to 13 123
            Set FontWeight to 600
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub1

        Object btnSelect is a ButtonSub

            //AB-StoreTopStart

            //AB-StoreTopEnd

            Set Label to "ãò®°·®†©£ò Ê¢‡§ ´‡§ úöö®ò≠È§"
            Set Size to 13 208
            Set Location to 13 296
            Set Focus_Mode to Pointer_Only

            //AB-StoreStart

            Procedure Mark_All
                Integer iInt
                Send Find to (Btypkin_dd1(self)) First_Record 0
                While (Found=1)
                    Set Array_Value of (Selected_Items(Btypkin_Grid(self))) Item iInt to Btypkin.Recnum
                    Add 1 to iInt
                    Send Find to (Btypkin_dd1(self)) Next_Record 0
                Loop
            End_Procedure

            Procedure Unmark_All
                Send Delete_Data to (Selected_Items(Btypkin_Grid(self)))
            End_Procedure

            Procedure Onclick
                Set Enabled_State of btnSelect to False
                If (Select_Count(Btypkin_Grid(Self)) Gt 0);
                     Begin
                        Send Unmark_All
                        Set Label Of (btnSelect(Self)) To 'ãò®°·®†©£ò Ê¢‡§ ´‡§ úöö®ò≠È§'
                     End
                Else Begin
                        Send Mark_All
                        Set label of (btnSelect(self)) to 'Ä§òÂ®ú©û £ò®°ò®Â©£ò´¶™ úöö®ò≠È§'
                     End
                Send Beginning_Of_Data    to (Btypkin_Grid(self))
                Set Dynamic_Update_State  Of (Btypkin_Grid(Self))  To True
                Set Value of (frmCount(self)) item 0 to (Select_Count(Btypkin_Grid(Self)))
                Set Enabled_State of btnSelect to True
            End_Procedure








            //AB-StoreEnd

        End_Object    // btnSelect

        Object Btypkin_Grid is a dbListSub

            //AB-StoreTopStart


            //AB-StoreTopEnd

            Set Main_File to Btypkin.File_Number
            Set Server to (Btypkin_DD(self))
            Set Size to 230 207
            Set Location to 26 296
            Set Select_Mode to Multi_Select

            Begin_Row
                Entry_Item ('')
                Entry_Item Btypkin.Btypkin_code
                Entry_Item Btypkin.Btypkin_descr
            End_Row

            Set Form_Width    item 0 to 19
            Set Header_Label  item 0 to ""

            Set Form_Width    item 1 to 50
            Set Header_Label  item 1 to "â‡õ†°Ê™"

            Set Form_Width    item 2 to 130
            Set Header_Label  item 2 to "èú®†ö®ò≠„"


            //AB-StoreStart

            Set Select_Mode                     to Multi_Select
            Set Column_Option           item 0  to Noenter False
            Set Column_checkBox_state   item 0  to true
            Set Auto_Shadow_State               to False
            Set Auto_Index_State                to False
            Set Popup_Search_State              to True
            Set Find_Search_State               to False

            Set Color                           to 15263976
            Set TextColor                       to clWindowText
            Set CurrentRowColor                 to 14205112
            Set Highlight_row_color             to 14205112
            Set CurrentRowTextColor             to clWindowText
            Set CurrentCellColor                to 14205112
            Set CurrentCellTextColor            to clBtnText


            Procedure Toggle_Select
                Local integer iBase iOffset iCol
                Move 0 to iOffset
                Set Enabled_State of ButtonSub1 to False
                Get Base_Item to iBase
                Get Current_Col to iCol
                Forward Send Toggle_Select
                Send DoDisplayCheckBox (iBase+iOffset) (Select_State(self,iBase))
                Set Dynamic_Update_State to true
                If (Select_Count(Btypkin_Grid(Self)) Gt 0)  Set Label of (buttonSub1(self)) to "Ä§òÂ®ú©û £ò®°ò®Â©£ò´¶™ ´‡§ úöö®ò≠È§"
                else                                        Set Label of (buttonSub1(self)) to "ãò®°·®†©£ò Ê¢‡§ ´‡§ úöö®ò≠È§"
                Set value of (frmCount(self)) item 0 to (Select_Count(Btypkin_Grid(Self)))
                Set Dynamic_Update_State to true
                Set Enabled_State of ButtonSub1 to True
            End_Procedure  //Toggle_Select

            Procedure Entry_Display Integer i1 Integer i2
                Local integer iBase iOffset iSelItemsID bState
                Get base_Item to iBase
                move 0 to iOffset
                move (Selected_Items(self)) to iSelItemsID
                Forward Send Entry_Display i1 i2
                Get find_element of iSelItemsID Btypkin.recnum to bState
                Send DoDisplayCheckBox (iBase+iOffset) (bState<>-1)
            End_Procedure // Entry_Display












            //AB-StoreEnd

        End_Object    // Btypkin_Grid

        Object TextBoxSub2 is a TextBoxSub
            Set Label to "Ñß†¢úö£‚§ú™ úöö®ò≠‚™ = "
            Set Auto_Size_State to FALSE
            Set FontSize to 4 0
            Set Location to 260 296
            Set Size to 13 87
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub2

        Object frmCount is a FormSub

            //AB-StoreTopStart

            //AB-StoreTopEnd

            Set Size to 13 23
            Set Location to 260 383
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right

            //AB-StoreStart
            Set Shadow_state to true
            //AB-StoreEnd

        End_Object    // frmCount


        //AB-StoreStart

        Procedure Activate_View Returns Integer
            String sStr sModule StrDisp
            Integer rVal

            set value of (f_hme_apo(groupsub4(current_object))) to syscurxr.year_xrhshfrom
            set value of (f_hme_eos(groupsub4(current_object))) to syscurxr.year_xrhshto

            Forward Get Msg_Activate_View to rVal

        //    Get psMenuModule  Of Main_Menu  to sModule
            Move '01' to sModule
            Set psModule                    to sModule

            // â‡õ†°ò™ ß¶¨ ò≠¶®ò ´¶ constrain ´‡§ ©´¶†Æú†‡§ ´¶¨ view ¶ß‡™ ßò®ò©´ò´†°·
            // û °†§„©ú†™ ß¶¨ èêÑèÑà §ò úÂ§ò† constrain ò§ò¢¶öò £ú ´¶ °Á°¢‡£ò òß¶
            // ´¶ ¶ß¶†¶ °ò¢úÂ´ò† ´¶ view. è.ï. ò§ °¢ûüúÂ òß¶ è‡¢„©ú†™/èú¢·´ú™ §ò £û§
            // ≠òÂ§¶§´ò† ©´ò ßò®ò©´ò´†°· ´ò Btypkin Äö¶®È§ °¢ß....

            Move (gsfCode_mast("MODULE",(psModule(Self)))) to    StrDisp
            Send Rebuild_Constraints to Btypkin_DD
            Send Beginning_Of_Data to Btypkin_Grid
        End_Procedure

        Object pmoves3WQLReport Is A CrystalReportSubSQL

            Property Integer ReportReady Public False
            Set Report_View_id To (Parent(Current_object))

            Procedure OnStartPrinting

                local string  lscatypes Startnumbern Endnumbern Startcustn Endcustn
                Local integer Starthmen Endhmen startantliaNumber
                Local String  Selection FileName startapotikhn flysh1 flysh2
                Local integer EndantliaNumber FileType Destination SortOrder NumSortFields
                Local Integer CurSortField SortDirection wdate fepil
                local number fstartposo
                date apo eos

                Move "" To Selection
                Append Selection (If(Selection <> "", " and ", ""))"{Barticl.Barticl_Ekleise} = " '"' (1) '"'
                Append Selection (If(Selection <> "", " and ", ""))"{Bmoves.company_code} = " '"' (Trim(syscurxr.company_code)) '"'

                If (psBranch(Self)<>'') Begin
                    Append Selection (If(Selection <> "", " and ", ""))"{Bmoves.branch_code} = " '"' (Trim(syscurxr.branch_code)) '"'
                End

                Get Startcust To Startcustn

                If (Trim(Startcustn)) ne "" ;
                  Append Selection (If(Selection <> "", " and ", "")) "TrimRight({Barticl.Barticl_Code1}) = " '"' (Trim(startcustn)) '"'

                 Get Starthme   To Starthmen
                 If (trim(Starthmen)) ne 0 ;
                      Append Selection (If(Selection <> "", " and ", "")) "{Bmove.Barticl_hmnia} >= " (winql_date(Starthmen))

                 Get Endhme   To Endhmen
                 If (trim(Endhmen)) ne 0 ;
                      Append Selection (If(Selection <> "", " and ", "")) "{Bmove.Barticl_hmnia} <= " (winql_date(Endhmen))

                 Set Formula "formula1" to (Winql_String(psModule(Self)))

        //         get  psModule to flysh1
        //         Append Selection (If(Selection <> "", " and ", "")) "{Bmove.Bmove_M_Code} = " '"' (Trim(flysh1)) '"'

                 Append Selection (If(Selection <> "", " and ", "")) "{Bmove.Btypkin_Code} = {TmpPmv.Ctypkin_Code}"

                 Set SelectionFormula To Selection

                 //*** Change the formula so the report reflects the selection. Remove
                //*** quotes from the formula.
                get epil to fepil

                Set Formula "fepil" to (winql_number(fepil))

                get starthme to apo
                get endhme   to eos

                Set Formula "fapo" To (winql_date(apo))
                Set Formula "feos" To (winql_date(eos))
                If Selection Eq "" ;
                       Set Formula "SelTxt" To ('"' + "NONE" + '"')
                Else ;
                Set Formula "SelTxt" To ('"' + (Replaces('"', Selection, "")) + '"')

                //*** Handle export to file
                Get Output_Destination To Destination
                If ((Destination Eq WQL_PRINT_TO_FILE) Or (Destination Eq WQL_PRINT_TO_MAPI)) Begin
                    Get WQLFileName To FileName
                    Get WQLFileType To FileType

                    Set ExportFileName   To FileName
                    Set ExportFormatType To FileType
                End
                //Else If Destination Eq WQL_PRINT_TO_PRINTER ;
                //    Send SelectAndSetPrinter

                //*** Setup the report if ready property
                If Destination EQ WQL_PRINT_TO_WINDOW ;
                    Set ReportReady To False
                Else ;
                    Set ReportReady To True
            End_procedure // OnStartPrinting


            //***
            //*** Procedure: RunCustReport
            //*** Purpose  : Run the customer report
            //***

            Procedure Runpmoves3Report
                //*** We will be busy, change the cursor
                Send Cursor_Wait To (Cursor_Control(Current_Object))

                Set Report_name  To "MazEisp.rpt"

                //*** Run the report
                Send Run_report

                //*** We are ready, change the cursor
                Send Cursor_Ready To (Cursor_Control(Current_Object))

                //*** Report you are finsihed for those seetings that do not use the
                //*** screen
                If (ReportReady(Current_object)) ;
                    Send Info_box "WinQL report ready."
            End_procedure // RunCustReport

        End_object // CustWQLReport


        Function Startcust Returns String
            Function_return (Startcust(groupSub1(Current_object)))
        End_function // StartCustomer

        Function StartBranch Returns string
            Function_return (StartBranch(groupSub1(Current_object)))
        End_function // StartNumber

        Function Starthme Returns integer
            Function_return (Starthme(groupSub4(Current_object)))
        End_function // StartNumber

        Function Endhme Returns integer
            Function_return (Endhme(groupSub4(Current_object)))
        End_function // StartNumber

        Procedure AdjustFileTypeShadow Integer NewState
            Set Object_Shadow_State Of (FileTypeGroup(Current_Object)) To NewState
        End_procedure // AdjustFileTypeShadow

        Procedure AdjustBoundaryShadow Integer GroupNum
            Set Object_Shadow_State Of (groupSub1(Current_object)) To (GroupNum <> 0)
            Set Object_Shadow_State Of (groupSub3(Current_object))   To (GroupNum = 0)
        End_procedure // AdjustBoundaryShadow

        Function WQLFileName Returns String
            Function_return (WQLFileName(FileTypeGroup(Current_object)))
        End_function // WQLFIleName

        Function WQLFileType Returns Integer
            Function_return (WQLFileType(FileTypeGroup(Current_object)))
        End_function // WQLFIleType

        //AB-StoreEnd

    CD_End_Object    // MazEisp


    //AB-StoreStart


    //AB-StoreEnd

//AB/     End_Object    // prj
