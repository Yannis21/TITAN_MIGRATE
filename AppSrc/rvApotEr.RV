//AB/ Project rvApotEr
//AB/ Object prj is a Report_Project
//AB/     Set ProjectName to "rvApotEr"
//AB/     Set ProjectFileName to "rvApotEr.RV"
//AB/     Set GenerateFileName to "NONAME"

// Project Object Structure
//   rvApotEr is a ReportViewSub
//     SortOrderGroup is a RadioGroup
//       NumberSortRadio is a Radio
//       NameSortRadio is a Radio
//       DescAscCheckBox is a CheckBox
//     GroupSub1 is a GroupSub
//       F_CODE_APO is a FormSub
//       F_CODE_EOS is a FormSub
//       TextBoxSub1 is a TextBoxSub
//       TextBoxSub2 is a TextBoxSub
//       FormSub3 is a FormSub
//       FormSub4 is a FormSub
//     GroupSub4 is a GroupSub
//       F_HME_APO is a FormSub
//       F_HME_EOS is a FormSub
//       Textbox3 is a Textbox
//       Textbox4 is a Textbox
//       Textbox7 is a Textbox
//       Form4 is a Form
//       Form5 is a Form
//     DestRadio is a RadioGroup
//       WindowRadio is a Radio
//       PrinterRadio is a Radio
//       FileRadio is a Radio
//     dbRadioGroupSub1 is a dbRadioGroupSub
//       Radio1 is a RadioSub
//       Radio2 is a RadioSub
//       Radio3 is a RadioSub
//     FileTypeGroup is a Group
//       FileNameForm is a Form
//         New_dialog is a SaveAsdialog
//       TypeCombo is a ComboForm
//       ApplyExtCheckBox is a CheckBox
//       TextBoxSub23 is a TextBoxSub
//       TextBoxSub24 is a TextBoxSub
//     ButtonSub1 is a Button
//     ButtonSub2 is a ButtonSub
//     GroupSub7 is a GroupSub
//       TextBoxSub27 is a TextBoxSub
//       FormSub5 is a FormSub
//       FormSub6 is a FormSub
//     Textbox5 is a Textbox
//     FormSub7 is a FormSub
//     Form1 is a Form
//     Textbox6 is a Textbox
//     Form2 is a Form
//     Form3 is a Form
//     ApotErgoWQLReport is a CrystalReportSubSQL

// Register all objects
Register_Object ApotErgoWQLReport
Register_Object ApplyExtCheckBox
Register_Object ButtonSub1
Register_Object ButtonSub2
Register_Object DescAscCheckBox
Register_Object DestRadio
Register_Object dbRadioGroupSub1
Register_Object F_CODE_APO
Register_Object F_CODE_EOS
Register_Object F_HME_APO
Register_Object F_HME_EOS
Register_Object FileNameForm
Register_Object FileRadio
Register_Object FileTypeGroup
Register_Object Form1
Register_Object Form2
Register_Object Form3
Register_Object Form4
Register_Object Form5
Register_Object FormSub3
Register_Object FormSub4
Register_Object FormSub5
Register_Object FormSub6
Register_Object FormSub7
Register_Object GroupSub1
Register_Object GroupSub4
Register_Object GroupSub7
Register_Object NameSortRadio
Register_Object New_dialog
Register_Object NumberSortRadio
Register_Object PrinterRadio
Register_Object Radio1
Register_Object Radio2
Register_Object Radio3
Register_Object rvApotEr
Register_Object SortOrderGroup
Register_Object TextBoxSub1
Register_Object TextBoxSub2
Register_Object TextBoxSub23
Register_Object TextBoxSub24
Register_Object TextBoxSub27
Register_Object Textbox3
Register_Object Textbox4
Register_Object Textbox5
Register_Object Textbox6
Register_Object Textbox7
Register_Object TypeCombo
Register_Object WindowRadio


//AB/ Report View


//AB-StoreTopStart
Use dfallrpt
Use syscurxr.dd
Use sl100.sl
open clients
use hmgio.sl
use slrep.sl
use sl002.sl
open sysrep
open branch
use sl041.sl
//AB-StoreTopEnd

//AB-IgnoreStart

Use DFAllEnt.pkg
Use Group.Sub
Use Form.Sub
Use Txtbox.Sub
Use dbRgroup.Sub
Use Radio.Sub
Use Button.Sub

//AB-IgnoreEnd

ACTIVATE_VIEW Activate_rvApotEr FOR rvApotEr

Object rvApotEr is a ReportViewSub

    //AB-StoreTopStart
    property integer epil       public 0
    Property String  psModule   public ""
    property integer iokey      public 0
    property integer piwhat     public 0
    property string psbranch    public ''
    property string psrep       public ''
    property string psclientid  public ''
    property string pscnid      public ''
    
    //AB-StoreTopEnd

    Set Label to "Äß¶´ú¢‚©£ò´ò 'Ñ®ö‡§"
    Set Size to 256 293
    Set Location to 2 5

    //AB-DDOStart


    //AB-DDOEnd

    Object SortOrderGroup is a RadioGroup

        //AB-StoreTopStart
                                                                            
        //AB-StoreTopEnd

        Set Label to "â®†´„®†¶ íò•†§Ê£û©û™"
        Set Size to 55 86
        Set Location to 82 1
        Object NumberSortRadio is a Radio
            Set Label to "âò´· â‡õ†°Ê"
            Set Size to 10 60
            Set Location to 12 10
        End_Object    // NumberSortRadio

        Object NameSortRadio is a Radio
            Set Label to "âò´· Ñß‡§¨£Âò"
            Set Size to 10 68
            Set Location to 24 10

            //AB-StoreStart
            set enabled_state to false
            
            
            //AB-StoreEnd

        End_Object    // NameSortRadio

        Object DescAscCheckBox is a CheckBox
            Set Label to "îüÂ§¶¨©ò"
            Set Size to 10 53
            Set Location to 37 11

            //AB-StoreStart
                                                                                                        
                                                                                                        
            //AB-StoreEnd

        End_Object    // DescAscCheckBox


        //AB-StoreStart
        //
        //***
        //*** Procedure: Notify_Select_state
        //*** Purpose  : Augemented to setup the output destination of the WinQL
        //***            report. The procedure is sent when the user changes the
        //***            selection.
        //***
        
        Procedure Notify_Select_State  Integer iNewItem  Integer iOldItem
            Forward Send Notify_Select_State  iNewItem  iOldItem
        
            //*** Dynamically shadow the boundary groups
            Send AdjustBoundaryShadow iNewItem
        End_Procedure
        
        
        //***
        //*** Function:ReportSort
        //*** Purpose : Returns the sort orde selected by the user
        //***
        
        Function ReportSort Returns Integer
            Local Integer SelOrder
        
            If (Select_state(NumberSortRadio(Current_object), 0)) ;
                Move 0 To SelOrder
            Else ;
                Move 1 To SelOrder
        
            Function_return SelOrder
        End_function // ReportSort
        
        
        //***
        //*** Function: DescAsc
        //*** Purpose : Returns if the sort order is descending or ascending
        //***
        
        Function DescAsc Returns Integer
            If (Select_state(DescAscCheckBox(Current_object), 0)) ;
                Function_return PE_SF_DESCENDING
            Else ;
                Function_return PE_SF_ASCENDING
        End_function // DescAsc
        
        
        
        
        
        
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // SortOrderGroup

    Object GroupSub1 is a GroupSub
        Set Label to "Ñß†¢¶ö„ èú¢ò´È§"
        Set Size to 42 283
        Set Location to 1 1
        Object F_CODE_APO is a FormSub

            //AB-StoreTopStart
                                                                                                        
            //AB-StoreTopEnd

            Set Size to 13 61
            Set Location to 10 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Prompt_Button_Mode to pb_PromptOn

            //AB-StoreStart
            Set Prompt_Object to (SL100(Current_object))
            
            procedure onchange
                string sclient
                get value item 0 to sclient
                set psclientid to sclient
                Move (fsclient(Self,sclient)) to sclient
                set value of (formsub3(self)) to sclient
            
            end_procedure
            
            
            procedure prompt
                Set psModule Of (sl100(Self)) to (psModule(Self))
                Forward Send Prompt
            end_procedure
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_CODE_APO

        Object F_CODE_EOS is a FormSub

            //AB-StoreTopStart
                                                                                                        
            //AB-StoreTopEnd

            Set Size to 13 61
            Set Location to 26 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Prompt_Button_Mode to pb_PromptOn

            //AB-StoreStart
            Set Prompt_Object to (SL100(Current_object))
            
            procedure onchange
                string sclient
                get value item 0 to sclient
                Move (fsclient(Self,sclient)) to sclient
                set value of (formsub4(self)) to sclient
            end_procedure
            
            
            procedure prompt
                Set psModule Of (sl100(Self)) to (psModule(Self))
                Forward Send Prompt
            end_procedure
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_CODE_EOS

        Object TextBoxSub1 is a TextBoxSub
            Set Label to "ÄßÊ â‡õ†°Ê :"
            Set Auto_Size_State to FALSE
            Set FontSize to 4 0
            Set Location to 11 5
            Set Size to 10 44
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub1

        Object TextBoxSub2 is a TextBoxSub
            Set Label to "Ñ‡™ â‡õ†°Ê :"
            Set Auto_Size_State to FALSE
            Set FontSize to 4 0
            Set Location to 26 5
            Set Size to 13 47
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub2

        Object FormSub3 is a FormSub
            Set Size to 13 155
            Set Location to 10 124
            Set Label_Col_Offset to 2

            //AB-StoreStart
            set enabled_state to false
            //AB-StoreEnd

        End_Object    // FormSub3

        Object FormSub4 is a FormSub
            Set Size to 13 155
            Set Location to 26 124
            Set Label_Col_Offset to 2

            //AB-StoreStart
            set enabled_state to false
            //AB-StoreEnd

        End_Object    // FormSub4


        //AB-StoreStart
        Function StartNumber Returns string
            Function_return (Value(f_code_apo(Current_object), 0))
        End_function
        
        Function EndNumber Returns string
            Function_return (Value(f_code_eos(Current_object), 0))
        End_function
        
        Set Visible_State to False
        Set Enabled_State to False
        
        
        
        
        //AB-StoreEnd

    End_Object    // GroupSub1

    Object GroupSub4 is a GroupSub
        Set Label to "Ñß†¢¶ö„ Ü£ú®/§Âò™ â†§„©ú‡§ - Ñ®ö¶¨"
        Set Size to 40 283
        Set Location to 7 1
        Object F_HME_APO is a FormSub
            Set Size to 13 69
            Set Location to 8 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Form_Datatype Item 0 to Mask_Date_Window
            Set Prompt_Button_Mode to pb_PromptOn
            Set Form_Mask Item 0 to "d/M/yyyy"

            //AB-StoreStart
            set prompt_object to (ocalendar(self))
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_HME_APO

        Object F_HME_EOS is a FormSub
            Set Size to 13 69
            Set Location to 24 60
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Form_Datatype Item 0 to Mask_Date_Window
            Set Prompt_Button_Mode to pb_PromptOn
            Set Form_Mask Item 0 to "d/M/yyyy"

            //AB-StoreStart
            set prompt_object to (ocalendar(self))
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // F_HME_EOS

        Object Textbox3 is a Textbox
            Set Label to "ÄßÊ Ü£/§Âò :"
            Set Location to 10 6
            Set Size to 10 47
        End_Object    // Textbox3

        Object Textbox4 is a Textbox
            Set Label to "Ñ‡™ Ü£§Âò  :"
            Set Location to 24 5
            Set Size to 12 45
        End_Object    // Textbox4

        Object Textbox7 is a Textbox
            Set Label to "Ñ®ö¶"
            Set Location to 7 134
            Set Size to 10 21
        End_Object    // Textbox7

        Object Form4 is a Form
            Set Size to 13 121
            Set Location to 7 157
            Set Prompt_Button_Mode to pb_PromptOn

            //AB-StoreStart
            Set Prompt_Object to (SL041(Current_object))
            Procedure Prompt
                Set FragmaClient_ID Of (sl041(self)) to (psClientID(Self))
                Forward Send Prompt
                Set FragmaClient_ID Of (sl041(self)) to ''
            end_Procedure
            
            procedure onchange
                string scode sdescr
                get value item 0 to scode
                set pscnid to scode
                move (fscndescr(self,scode)) to sdescr
                set value of form5 to sdescr
            end_procedure
            
            
            
            //AB-StoreEnd

        End_Object    // Form4

        Object Form5 is a Form
            Set Size to 13 143
            Set Location to 23 134

            //AB-StoreStart
            set enabled_state to false
            //AB-StoreEnd

        End_Object    // Form5


        //AB-StoreStart
        Function Starthme Returns string
            Function_return (Value(f_hme_apo(Current_object), 0))
        End_function
        
        Function Endhme Returns string
            Function_return (Value(f_hme_eos(Current_object), 0))
        End_function
        
        
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // GroupSub4

    Object DestRadio is a RadioGroup

        //AB-StoreTopStart
                                                                            
        //AB-StoreTopEnd

        Set Label to "Ñ°´Á&ß‡©û"
        Set Size to 60 49
        Set Location to 148 0
        Object WindowRadio is a Radio
            Set Size to 13 30
            Set Location to 12 12
            Set Bitmap to "screen4.bmp"
        End_Object    // WindowRadio

        Object PrinterRadio is a Radio
            Set Size to 10 31
            Set Location to 30 12
            Set Bitmap to "PRINT_M1.BMP"
        End_Object    // PrinterRadio

        Object FileRadio is a Radio
            Set Size to 10 29
            Set Location to 47 12
            Set Bitmap to "FILE16.BMP"
        End_Object    // FileRadio


        //AB-StoreStart
                                                                            
        //***
        //*** Procedure: Notify_Select_state
        //*** Purpose  : Augemented to setup the output destination of the WinQL
        //***            report. The procedure is sent when the user changes the
        //***            selection.
        //***
        
        Procedure Notify_Select_State  Integer iNewItem  Integer iOldItem
            Forward Send Notify_Select_State  iNewItem  iOldItem
            If iNewItem Eq 0 ;
                Set Output_Device_Mode To WQL_PRINT_TO_WINDOW
            Else If iNewItem Eq 1;
                Set Output_Device_Mode To WQL_PRINT_TO_PRINTER
            Else If iNewItem Eq 2 ;
                Set Output_Device_Mode To WQL_PRINT_TO_FILE
        
        
            Send AdjustFileTypeShadow (iNewItem < 2)
        End_Procedure
        
        
        //AB-StoreEnd

    End_Object    // DestRadio

    Object dbRadioGroupSub1 is a dbRadioGroupSub
        Set Size to 55 61
        Set Location to 82 93
        Object Radio1 is a RadioSub
            Set Label to "åÊ£†©£ò 1"
            Set Size to 10 46
            Set Location to 10 5

            //AB-StoreStart
            set label to syscurxr.c_code0
            //AB-StoreEnd

        End_Object    // Radio1

        Object Radio2 is a RadioSub
            Set Label to "åÊ£†©£ò 2"
            Set Size to 10 46
            Set Location to 25 5

            //AB-StoreStart
            set label to syscurxr.c_code00
            //AB-StoreEnd

        End_Object    // Radio2

        Object Radio3 is a RadioSub
            Set Label to "åÊ£†©£ò 3"
            Set Size to 10 46
            Set Location to 40 5

            //AB-StoreStart
            set label to syscurxr.c_coder
            //AB-StoreEnd

        End_Object    // Radio3


        //AB-StoreStart
                                
        Set Visible_State to False
        Set Enabled_State to False
        
        Procedure Notify_Select_State  Integer iNewItem  Integer iOldItem
            string snom1 snom2 snom3
            Clear Nomisma
            move syscurxr.c_code0 to nomisma.nomisma_code
            Find eq Nomisma By Index.1 // Nomisma:Index.1:Nomisma_Code
            move nomisma.dekadika to snom1
            Clear Nomisma
            move syscurxr.c_code00 to nomisma.nomisma_code
            Find eq Nomisma By Index.1 // Nomisma:Index.1:Nomisma_Code
            move nomisma.dekadika to snom2
            clear nomisma
            move syscurxr.c_coder to nomisma.nomisma_code
            Find eq Nomisma By Index.1 // Nomisma:Index.1:Nomisma_Code
            move nomisma.dekadika to snom3
            Forward Send Notify_Select_State  iNewItem  iOldItem
            If iNewItem Eq 0;
                Set epil to snom1
            Else If iNewItem Eq 1;
                Set epil to snom2
            Else If iNewItem Eq 2 ;
                Set epil to snom3
            If iNewItem Eq 0;
                Set piwhat to 1
            Else If iNewItem Eq 1;
                Set piwhat to 2
            Else If iNewItem Eq 2 ;
                Set piwhat to 3
        
        End_Procedure
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // dbRadioGroupSub1

    Object FileTypeGroup is a Group

        //AB-StoreTopStart
                                                                            
        //AB-StoreTopEnd

        Set Label to "Ä§ò≠¶®· Ä®ÆúÂ¶¨"
        Set Size to 61 169
        Set Location to 148 51
        Object FileNameForm is a Form

            //AB-StoreTopStart
                                                                                                        
            //AB-StoreTopEnd

            Set Size to 13 133
            Set Location to 10 33
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Prompt_Button_Mode to pb_PromptOn

            //AB-StoreStart
            //*** Default item value
            Set Value item 0 to "clients.doc"
            
            Procedure Prompt
                Local String  SelectedFile
                Local String  Extension
                Local String  Filter
                Local Integer Type
                Local Integer Selected
            
                //*** Setup initial file name
                Get Value Item 0 To SelectedFile
                If SelectedFile Eq "" Begin
                    Get WQLFileExt To Extension
                    Move ("clients" + Extension) To SelectedFile
                End
            
                //*** Create a filter for the save as dialog
                Move "" To Filter
                Get WQLFileTYpe To Type
                If Type Eq WQL_WordWinType ;
                    Append Filter "Word for Windows (*.doc)|*.doc"
                If ((Type Eq WQL_Xls2Type) Or (Type Eq WQL_Xls3Type) Or (Type Eq WQL_Xls4Type) Or (Type Eq WQL_Xls5Type)) ;
                    Append Filter "Excel (*.xls)|*.xls"
                If Type Eq WQL_RichTextFormatType ;
                    Append Filter "Rich Text (*.rtf)|*.rtf"
                If Type Eq WQL_TextType ;
                    Append Filter "Text (*.txt)|*.txt"
                If Type Eq WQL_RecordType ;
                    Append Filter "Record Style (*.rec)|*.rec"
                If Type Eq WQL_CommaSeparatedType ;
                    Append Filter "Comma Separated Values (*.csv)|*.csv"
                If Type Eq WQL_DIFType ;
                    Append Filter "Data Interchange Format (*.dif)|*.dif"
                Append Filter "|All Files|*.*"
            
                //*** Create a save as dialog
                Object New_dialog Is A SaveAsdialog
                    //*** Setup title
                    Set Dialog_Caption        To "Item report export to disk, give file name"
                    Set Filter_String         To Filter
                    Set Hidereadonly_State    To True
                    Set Overwriteprompt_State To True
                    Set Showfiletitle_State   To True
                    Set File_Title            To SelectedFile
                End_object // New_dialog
            
                //*** Start the save as dialog
                Get Show_Dialog Of (New_dialog(Current_object)) To Selected
                If Selected Begin
                    Get File_Name Of (New_Dialog(Current_object)) To SelectedFile
                    Set Value Item 0 To SelectedFile
                End
            
                //*** Destroy the save as dialog
                Send Request_Destroy_object To (New_dialog(Current_object))
            End_procedure // Start_Prompt
            
            //***
            //*** Function: FileName
            //*** Purpose : Returns the name of the file to export to
            //***
            
            Function FileName Returns String
                Local String  SelectedFile
            
                //*** Get file name
                Get Value Item 0 To SelectedFile
                If SelectedFile Eq "" ;
                    Move "clients.doc" To SelectedFile
            
                Function_return SelectedFile
            End_function // FileName
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // FileNameForm

        Object TypeCombo is a ComboForm

            //AB-StoreTopStart
                                                                                                        
            //AB-StoreTopEnd

            Set Size to 13 133
            Set Location to 29 33
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right

            //AB-StoreStart
            //*** Make sure the user picks a list item and cannot enter information
            Set Entry_state Item 0 To False
            
            //*** Show list unsorted. This must be done because we raly on the order of the
            //*** list to determine the type of the file. (See FileType function)
            Set Combo_Sort_State To False
            
            //***
            //*** Procedure: Combo_Fill_list
            //*** Purpose  : Augemebnted to fill the list with export file types.
            //***
            
            Procedure Combo_Fill_List
                Send Combo_Add_item "Word for Windows"
                Send Combo_Add_Item "Excel 2.1"
                Send Combo_Add_Item "Excel 3.0"
                Send Combo_Add_Item "Excel 4.0"
                Send Combo_Add_Item "Excel 5.0"
                Send Combo_Add_Item "Rich Text"
                Send Combo_Add_Item "Text"
                Send Combo_Add_Item "Record Style"
                Send Combo_Add_Item "Comma Separated"
                Send Combo_Add_Item "Data Interchage Format (DIF)"
            End_procedure // Combo_Fill_List
            
            
            //***
            //*** Function: FileType
            //*** Purpose : Type to export to
            //***
            
            Function FileType Returns Integer
                Local String  FileTypeName
                Local Integer FileTypeValue
                Local Integer SelectedItem
            
                Get Value Item 0 To FileTypeName
                Get Combo_Item_Matching FileTypeName To SelectedItem
                Move WQL_TextType To FileTypeValue
                If SelectedItem Ne -1 Begin
                    If SelectedItem Eq 0 Move WQL_WordWinType        To FileTypeValue
                    If SelectedItem Eq 1 Move WQL_Xls2Type           To FileTypeValue
                    If SelectedItem Eq 2 Move WQL_Xls3Type           To FileTypeValue
                    If SelectedItem Eq 3 Move WQL_Xls4Type           To FileTypeValue
                    If SelectedItem Eq 4 Move WQL_Xls5Type           To FileTypeValue
                    If SelectedItem Eq 5 Move WQL_RichTextFormatType To FileTypeValue
                    If SelectedItem Eq 6 Move WQL_TextType           To FileTypeValue
                    If SelectedItem Eq 7 Move WQL_RecordType         To FileTypeValue
                    If SelectedItem Eq 8 Move WQL_CommaSeparatedType To FileTypeValue
                    If SelectedItem Eq 9 Move WQL_DIFType            To FileTypeValue
                End
            
                Function_return FileTypeValue
            End_function // FileType
            
            
            //***
            //*** Function: FileExt
            //*** Purpose : Extension for the type to export to
            //***
            
            Function FileExt Returns String
                Local String  FileTypeExt
                Local Integer FileTypeValue
            
                Get FileType To FileTypeValue
                If FileTypeValue Eq WQL_WordWinType        Move ".doc" To FileTypeExt
                If FileTypeValue Eq WQL_Xls2Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_Xls3Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_Xls4Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_Xls5Type           Move ".xls" To FileTypeExt
                If FileTypeValue Eq WQL_RichTextFormatType Move ".rtf" To FileTypeExt
                If FileTypeValue Eq WQL_TextType           Move ".txt" To FileTypeExt
                If FileTypeValue Eq WQL_RecordType         Move ".rec" To FileTypeExt
                If FileTypeValue Eq WQL_CommaSeparatedType Move ".csv" To FileTypeExt
                If FileTypeValue Eq WQL_DIFType            Move ".dif" To FileTypeExt
            
                Function_return FileTypeExt
            End_function // FileExt
            
            
            
            //***
            //*** Procedure: OnCloseUp
            //*** Purpose  : Augemented to auto,matically change the extension of the
            //***            filename
            //***
            
            Procedure OnChange
                Local String  OldName
                Local String  Extension
                Local Integer ChangeExt
            
                Get ChangeExtension To ChangeExt
                If ChangeExt Begin
                    Get WQLFileName To OldName
                    Get FileExt To Extension
                    Set WQLFileName To (Left(OldName, (Pos(".", Oldname) - 1)) + Extension)
                End
            End_procedure // OnChange
            
            //AB-StoreEnd

        End_Object    // TypeCombo

        Object ApplyExtCheckBox is a CheckBox

            //AB-StoreTopStart
                                                                                                        
            //AB-StoreTopEnd

            Set Label to "Apply combo extension"
            Set Size to 10 89
            Set Location to 47 33

            //AB-StoreStart
            //*** Apply extensions by default
            Set Select_state Item 0 To True
            //AB-StoreEnd

        End_Object    // ApplyExtCheckBox

        Object TextBoxSub23 is a TextBoxSub
            Set Label to "é§¶£ò"
            Set FontSize to 4 0
            Set Location to 10 6
            Set Size to 10 25
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub23

        Object TextBoxSub24 is a TextBoxSub
            Set Label to "íÁß¶™"
            Set FontSize to 4 0
            Set Location to 30 5
            Set Size to 10 23
            Set Enabled_State to TRUE
        End_Object    // TextBoxSub24


        //AB-StoreStart
                                                                            
                                                                            
                                                                            
                                                                            
        Function WQLFileName Returns String
            Function_return (FileName(FileNameForm(Current_object)))
        End_function // WQLFIleName
        
        Procedure Set WQLFileName String NewName
            Set Value Of (FileNameForm(Current_object)) Item 0 To NewName
        End_procedure // Set WQLFIleName
        
        
        //***
        //*** Function: WQLFIleType
        //*** Purpose : The extension type of the file to export to
        //***
        
        Function WQLFileType Returns Integer
            Function_return (FileType(TypeCombo(Current_object)))
        End_function // WQLFIleType
        
        
        //***
        //*** Function: WQLFIleExt
        //*** Purpose : The extension type of the file to export to
        //***
        
        Function WQLFileExt Returns Integer
            Function_return (FileExt(TypeCombo(Current_object)))
        End_function // WQLFIleExt
        
        
        
        //***
        //*** Function: ChangeExtension
        //*** Purpose : Must extension be dynamically updated?
        //***
        
        Function ChangeExtension Returns Integer
            Function_return (Select_state(ApplyExtCheckBox(Current_object), 0))
        End_function // ChangeExtension
        
        
        //AB-StoreEnd

    End_Object    // FileTypeGroup

    Object ButtonSub1 is a Button

        //AB-StoreTopStart
                                            
        //AB-StoreTopEnd

        Set Bitmap to "RUNPROG.BMP"
        Set Size to 18 28
        Set Location to 156 233

        //AB-StoreStart
        Procedure OnClick
           string dateapo dateeos datehh datemm dateyy  msgstr
           integer listatus ihmgio
           Get value of (formsub5(GroupSub7(Self)))  item 0 to ihmgio
           if (ihmgio = 0) begin
              send info_box "É‚§ Ñß†¢‚•ò´ú Ü£ú®¶¢Êö†¶." "è¢û®¶≠¶®Âò"
              procedure_return
           end
        
           Get Starthme To dateapo
           Get Endhme   To dateeos
        
            if dateeos eq "" begin
             move 31 to datehh
             move 12 to datemm
             move syscurxr.year_year to dateyy
             Append dateeos datehh
             append dateeos datemm
             append dateeos dateyy
            end
        
            if dateapo eq "" begin
              move 01 to datehh
              move 01 to datemm
              move syscurxr.year_year to dateyy
              append dateapo datehh
              append dateapo "/"
              append dateapo datemm
              append dateapo "/"
              append dateapo dateyy
        
           end
            move 0 to listatus
                 if (dateapo ne "") begin
                   if ((dateapo < syscurxr.year_xrhshfrom) or (dateapo > syscurxr.year_xrhshto)) begin
                      move "" to msgstr
                      move 1 to listatus
                      move "Ü£/§Âú™ Ñß†¢¶ö„™ Ñ°´Ê™ é®Â‡§ ï®„©û™" to msgstr
                      error 999 msgstr
        
                   end
                 end
        
                  if (dateeos ne "") begin
                   if ((dateeos < syscurxr.year_xrhshfrom) or (dateeos > syscurxr.year_xrhshto)) begin
                      move "" to msgstr
                       move 1 to listatus
                      move "Ü£/§Âú™ Ñß†¢¶ö„™ Ñ°´Ê™ é®Â‡§ ï®„©û™" to msgstr
                      error 999 msgstr
                   end
                  end
           if (listatus = 0) begin
                Send RuncmovesReport To (ApotErgoWQLReport(Current_Object))
           end
        
        
        End_Procedure
        
        
        
        
        
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // ButtonSub1

    Object ButtonSub2 is a ButtonSub

        //AB-StoreTopStart
                                                                            
        //AB-StoreTopEnd

        Set Bitmap to "CANCEL.BMP"
        Set Size to 18 28
        Set Location to 181 232

        //AB-StoreStart
        Procedure OnClick
            Send Request_Cancel
        End_Procedure
        
        
        
        
        //AB-StoreEnd

    End_Object    // ButtonSub2

    Object GroupSub7 is a GroupSub
        Set Label to "Ñß†¢¶ö„ Ü£ú®¶¢¶öÂ¶¨"
        Set Size to 29 281
        Set Location to 51 1
        Object TextBoxSub27 is a TextBoxSub
            Set Label to "Ü£ú®¶¢Êö†¶"
            Set Location to 14 5
            Set Size to 10 44
        End_Object    // TextBoxSub27

        Object FormSub5 is a FormSub
            Set Size to 13 49
            Set Location to 12 60
            Set Label_Col_Offset to 2
            Set Prompt_Button_Mode to pb_PromptOn

            //AB-StoreStart
            Set Prompt_Object to (hmgio(Current_object))
            Set Numeric_Mask Item 0 to 2 0 '*, '
            Procedure Prompt_Callback integer hPrompt
                set Export_Column of hPrompt to 0
                Set Initial_Column of hPrompt to 0
            end_procedure
            
            procedure onchange
                string whmgio
                get value item 0 to whmgio
                move whmgio to hmgio.hmgio_code
                find eq hmgio by index.1
                if (found);
                    set value of (formsub6(self)) to hmgio.hmgio_descr
                else;
                    set value of (formsub6(self)) to ''
            end_procedure
            
            
            procedure prompt
                set psmodule of (hmgio(self)) to (psmodule(self))
                forward send prompt
            end_procedure
            
            
            
            
            //AB-StoreEnd

        End_Object    // FormSub5

        Object FormSub6 is a FormSub
            Set Size to 13 165
            Set Location to 12 111
            Set Label_Col_Offset to 2

            //AB-StoreStart
            set enabled_state to false
            //AB-StoreEnd

        End_Object    // FormSub6


        //AB-StoreStart
        Function Starttypkin Returns String
            Function_return (Value(formsub5(Current_object), 0))
        End_function
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // GroupSub7

    Object Textbox5 is a Textbox
        Set Label to "ìß¶°ò´·©´û£ò"
        Set Location to 87 165
        Set Size to 10 52
    End_Object    // Textbox5

    Object FormSub7 is a FormSub
        Set Size to 13 65
        Set Location to 103 159
        Set Label_Col_Offset to 2
        Set Prompt_Button_Mode to pb_PromptOn

        //AB-StoreStart
        Set Prompt_Object to (sl002(Current_object))
        Procedure Prompt_Callback integer hPrompt
            set Export_Column of hPrompt to 0
            Set Initial_Column of hPrompt to 0
        end_procedure
        procedure onchange
            string sbranch
            get value item 0 to sbranch
            clear branch
            move syscurxr.company_code to branch.company_code
            move sbranch               to branch.branch_code
            find eq branch by index.1
            if (found=1) set value of (form1(self)) to branch.branch_name
            else         set value of (form1(self)) to ''
            set psbranch to branch.branch_code
        end_procedure
        
        
        
        //AB-StoreEnd

    End_Object    // FormSub7

    Object Form1 is a Form
        Set Size to 13 120
        Set Location to 119 159

        //AB-StoreStart
        set enabled_state to false
        //AB-StoreEnd

    End_Object    // Form1

    Object Textbox6 is a Textbox
        Set Label to "Ñß†¢¶ö„ ú°´Áß‡©û™ "
        Set Location to 210 5
        Set Size to 10 69
    End_Object    // Textbox6

    Object Form2 is a Form
        Set Size to 13 65
        Set Location to 222 5
        Set Prompt_Button_Mode to pb_PromptOn

        //AB-StoreStart
                                                                            
        Set Prompt_Object to (SLrep(Current_object))
        procedure prompt
            Set pskathg Of (slrep(Self)) to 'rvApotEr.rv'
            Forward Send Prompt
        end_procedure
        
        procedure onchange
            string skathg
            get value item 0 to skathg
            clear sysrep
            move 'rvApotEr.rv' to sysrep.view
            move skathg to sysrep.name
            find eq sysrep by index.1
            set value of (form3(self)) to sysrep.descr
            set psrep to sysrep.name
        end_procedure
        
        
        
        
        
        
        
        
        //AB-StoreEnd

    End_Object    // Form2

    Object Form3 is a Form
        Set Size to 13 213
        Set Location to 222 72

        //AB-StoreStart
        set enabled_state to false
        //AB-StoreEnd

    End_Object    // Form3


    //AB-StoreStart
            
    Procedure Activate_View Returns Integer
        String sStr sModule StrDisp rval
        Get psMenuModule  Of Main_Menu  to sModule
        Set psModule                    to sModule
        set iokey to 0
        set value of (formsub7(self)) to syscurxr.branch_code
        set value of (f_hme_apo(groupsub4(current_object))) to syscurxr.year_xrhshfrom
        set value of (f_hme_eos(groupsub4(current_object))) to syscurxr.year_xrhshto
        Forward Get Msg_Activate_View to rVal
    
    End_Procedure
    
    Object ApotErgoWQLReport Is A CrystalReportSubSQL
    
        Property Integer ReportReady Public False
        Set Report_View_id To (Parent(Current_object))
    
        Procedure OnStartPrinting
    
            local string  lscatypes Startnumbern Endnumbern Startnamen Endnamen
            Local integer Starthmen Endhmen StartantliaNumber starttypkinn
            Local string  Selection FileName slabel scnid shmgio
            Local integer EndantliaNumber FileType Destination SortOrder;
                          NumSortFields CurSortField SortDirection wdate
            local integer fepil iOK   iwhat iepil
            string flysh1 sStr flysh2  module sbranch blank
            date   apo eos
            move '' to blank
            set iokey to 0
            get psbranch to sbranch
            //*** Setup the selection formula
            reread syscurxr
            unlock
    
            Append Selection (If(Selection <> "", " and ", ""))"{cmoves.company_code} = " '"' (Trim(syscurxr.company_code)) '"'
            if (sbranch<>'') Append Selection (If(Selection <> "", " and ", ""))"{cmoves.branch_code} = " '"' (Trim(sbranch)) '"'
            Append Selection (If(Selection <> "", " and ", "")) "{cmoves.year_year} = " '' (syscurxr.year_year) ''
            Append Selection (If(Selection <> "", " and ", ""))"{cmoves.client_id}<> " '"' (Trim(blank)) '"'
            Get ReportSort To SortOrder
            Get StartNumber To StartNumbern
            Get EndNumber   To Endnumbern
            If (Trim(StartNumbern)) ne "" ;
              Append Selection (If(Selection <> "", " and ", "")) "{cmoves.client_id} >= " '"' (Trim(startnumbern)) '"'
            If (Trim(EndNumbern)) ne "" ;
              Append Selection (If(Selection <> "", " and ", "")) "{cmoves.client_id} <= " '"' (Trim(Endnumbern)) '"'
    
            Get Starttypkin To Starttypkinn
            Get Starthme To starthmen
            Get Endhme   To Endhmen
            If (trim(starthmen)) ne 0 ;
                 Append Selection (If(Selection <> "", " and ", "")) "{cmoves.cmoves_hmnia} >= " (winql_date(starthmen))
            If (trim(Endhmen)) ne 0 ;
                 Append Selection (If(Selection <> "", " and ", "")) "{cmoves.cmoves_hmnia} <= " (winql_date(Endhmen))
            get pscnid to scnid
    
            If (Trim(scnid)) ne "" ;
                 Append Selection (If(Selection <> "", " and ", "")) "{cmoves.cn_code} = " '"' (Trim(scnid)) '"'
    
            Set Formula "fwhat" to (Winql_number(piwhat(Self)))
    
            Move '' to sStr
            clear hmctyp
            move starttypkinn to hmctyp.hmgio_code
            find gt hmctyp by index.1
            while  ((found) and (hmctyp.hmgio_code=starttypkinn))
                Move (Append(sStr,(trim(hmctyp.ctypkin_code)+' '))) to sStr
                find gt hmctyp by index.1
            loop
    
            Move (Trim(sStr)) to sStr
            Append Selection (If(Selection <> "", " and ", "")) "InStr('" sStr "',{cmoves.ctypkin_code})<>0"
            Set SelectionFormula To Selection
            get starthme to apo
            get endhme   to eos
            get psModule to module
            get epil to fepil
            clear branch
            move syscurxr.company_code to branch.company_code
            move sbranch               to branch.branch_code
            find eq branch by index.1
            get value of form3 to slabel
            get value of (formsub6(groupsub7(self))) to shmgio
            Set Formula "fhmgio" to  (Winql_String(shmgio))
            Set Formula "flabel" to  (Winql_String(slabel))
            Set Formula "fbranch" to (Winql_String(branch.branch_name))
            Set Formula "fepil" to (winql_number(fepil))  ////////To ('"' + (Replaces('"', fepil, "")) + '"')
            Set Formula "fapo" To (winql_date(apo))
            Set Formula "feos" To (winql_date(eos))
            Set Formula "fmodule" To  (winql_string(module))
            Set Formula "formula1" To  (winql_string(module))
            If Selection Eq "" ;
                Set Formula "SelTxt" To ('"' + "NONE" + '"')
            Else ;
                Set Formula "SelTxt" To ('"' + (Replaces('"', Selection, "")) + '"')
    
          //*** Setup new sort order
            Get NSortFields To NumSortFields
            For CurSortField From 0 To (NumSortFields - 1)
            Send DeleteNthSortField 0
            Loop
            Get DescAsc To SortDirection
            Send AddSortField "{cmoves.cmoves_hmnia}" SortDirection
    
    
            //*** Handle export to file
            Get Output_Destination To Destination
            If ((Destination Eq WQL_PRINT_TO_FILE) Or (Destination Eq WQL_PRINT_TO_MAPI)) Begin
                Get WQLFileName To FileName
                Get WQLFileType To FileType
    
                Set ExportFileName   To FileName
                Set ExportFormatType To FileType
            End
            If Destination EQ WQL_PRINT_TO_WINDOW ;
                Set ReportReady To False
            Else ;
                Set ReportReady To True
        End_procedure // OnStartPrinting
    
    
        Procedure RuncmovesReport
            Set Report_name  To (psrep(self))
            Send Run_report
            Send Cursor_Ready To (Cursor_Control(Current_Object))
            If (ReportReady(Current_object)) ;
                Send Info_box "WinQL report ready."
        End_procedure // RunCustReport
    
    End_object // CustWQLReport
    
    
    Function StartNumber Returns string
        Function_return (StartNumber(groupSub1(Current_object)))
    End_function // StartNumber
    
    Function EndNumber Returns string
        Function_return (EndNumber(groupSub1(Current_object)))
    End_function // StartNumber
    
    Function Starthme Returns integer
        Function_return (Starthme(groupSub4(Current_object)))
    End_function // StartNumber
    
    Function Endhme Returns integer
        Function_return (Endhme(groupSub4(Current_object)))
    End_function // StartNumber
    
    Function Starttypkin Returns string
        Function_return (Starttypkin(groupSub7(Current_object)))
    End_function // Starttypkin
    
    Function ReportSort Returns Integer
        Function_return (ReportSort(SortOrderGroup(Current_object)))
    End_function // ReportSort
    
    Function DescAsc Returns Integer
        Function_return (DescAsc(SortOrderGroup(Current_object)))
    End_function // DescAsc
    
    Procedure AdjustFileTypeShadow Integer NewState
        Set Object_Shadow_State Of (FileTypeGroup(Current_Object)) To NewState
    End_procedure // AdjustFileTypeShadow
    
    Procedure AdjustBoundaryShadow Integer GroupNum
        Set Object_Shadow_State Of (groupSub1(Current_object)) To (GroupNum <> 0)
    End_procedure // AdjustBoundaryShadow
    
    Function WQLFileName Returns String
        Function_return (WQLFileName(FileTypeGroup(Current_object)))
    End_function // WQLFIleName
    
    Function WQLFileType Returns Integer
        Function_return (WQLFileType(FileTypeGroup(Current_object)))
    End_function // WQLFIleType
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    //AB-StoreEnd

End_Object    // rvApotEr

//AB/ End_Object    // prj
