//AB/ Project Connect
//AB/     Object prj is a Dialog_Project
//AB/         Set ProjectName to "Connect"
//AB/         Set ProjectFileName to "Connect.dg"

// Project Object Structure
//   Connect is a BasicPanelSub
//     frmUser is a FormSub
//     frmKodikos is a FormSub
//     CheckBox1 is a CheckBoxSub
//     oOK_bn is a ButtonSub
//     oCancel_bn is a ButtonSub
//     Textbox5 is a TextBoxSub
//     ComboForm2 is a ComboFormSub
//     Textbox6 is a TextBoxSub
//     Form4 is a FormSub
//     Textbox7 is a TextBoxSub
//     Textbox8 is a TextBoxSub
//     BitmapContainerSub2 is a BitmapContainerSub

// Register all objects
Register_Object BitmapContainerSub2
Register_Object CheckBox1
Register_Object ComboForm2
Register_Object Connect
Register_Object Form4
Register_Object frmKodikos
Register_Object frmUser
Register_Object oCancel_bn
Register_Object oOK_bn
Register_Object Textbox5
Register_Object Textbox6
Register_Object Textbox7
Register_Object Textbox8



    //AB-StoreTopStart
                
    Use mertech.inc
    //Use FlexOle
    //Use ChilkatCrypt
    
    Open UsersH
    
    
    //AB-StoreTopEnd

    //AB-IgnoreStart

    Use Panel.Sub
    Use Form.Sub
    Use Chkbox.Sub
    Use Button.Sub
    Use Txtbox.Sub
    Use Cmbfrm.Sub
    Use Bitmap.Sub


    //AB-IgnoreEnd

    Object Connect is a BasicPanelSub

        //AB-StoreTopStart
        
        
        //AB-StoreTopEnd

        Set Sysmenu_Icon to FALSE
        Set Minimize_Icon to FALSE
        Set Label to "Ñß†ôúôòÂ‡©û ë´¶†ÆúÂ‡§ ï®„©´û"
        Set Size to 84 340
        Set Location to 17 12
        Set Color to 13688273

        //AB-DDOStart


        //AB-DDOEnd

        Object frmUser is a FormSub
            Set Size to 13 163
            Set Location to 12 118
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Form_TypeFace Item 0 to "MS Sans Serif"
        End_Object    // frmUser

        Object frmKodikos is a FormSub

            //AB-StoreTopStart
                                                                                                            
            //AB-StoreTopEnd

            Set Size to 13 163
            Set Location to 36 118
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
                                                                                                            
            Set Password_State Item 0 to True
            
            
            
            
            //AB-StoreEnd

        End_Object    // frmKodikos

        Object CheckBox1 is a CheckBoxSub

            //AB-StoreTopStart
                                    
            //AB-StoreTopEnd

            Set Label to "Äß¶ü„°ú¨©û â‡õ†°¶Á"
            Set Size to 10 88
            Set Location to 57 118
            Set Status_Help to "Remember The Password at Next Login"
            Set Color to 15395562

            //AB-StoreStart
                                    
            Set Checked_State to False
            Set Visible_State to False
            
            
            //AB-StoreEnd

        End_Object    // CheckBox1

        Object oOK_bn is a ButtonSub

            //AB-StoreTopStart
                                                                                                            
            //AB-StoreTopEnd

            Set Label to "Co&nnect"
            Set Default_State to TRUE
            Set Bitmap to "Login-233.bmp"
            Set Size to 26 28
            Set Location to 7 296
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
                                                                                                            
            Set tooltipvalue to "ÑàëéÉéë ëíÜå ÑîÄêãéÇÜ"
            
            
            Procedure OnClick
                Set LoginOk to True
                Send Stop_Modal_ui
            End_Procedure
            
            Set Status_Help to "ëÁ§õú©û / ÑÂ©¶õ¶™"
            
            
            //AB-StoreEnd

        End_Object    // oOK_bn

        Object oCancel_bn is a ButtonSub
            Set Label to "&Cancel"
            Set Bitmap to "Exit-233.bmp"
            Set Size to 26 28
            Set Location to 40 297
            Set Focus_Mode to Pointer_Only
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
                                                                                                            
            Set tooltipvalue to "ÑçéÉéë Äèé íÜå ÑîÄêãéÇÜ"
            
            ON_KEY KENTER SEND Exit_Application to (Connect(Current_Object))
            
            Procedure OnClick
                Set LoginOk to False
                Send Exit_Application to (Connect(Current_Object))
            End_Procedure
            
            Set Status_Help to "Ä°Á®‡©û / Ñ•¶õ¶™"
            
            
            
            
            //AB-StoreEnd

        End_Object    // oCancel_bn

        Object Textbox5 is a TextBoxSub
            Set Label to "éõûöÊ™"
            Set Color to 13688273
            Set FontSize to 4 0
            Set Location to 79 83
            Set Size to 10 44
            Set Justification_Mode to jMode_Left
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // Textbox5

        Object ComboForm2 is a ComboFormSub

            //AB-StoreTopStart
                                                                                                            
            Set CapsLock_State to True
            
            //AB-StoreTopEnd

            Set Size to 13 175
            Set Location to 79 136
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right

            //AB-StoreStart
                                                                                                            
            Set Enabled_State to False
            Set Visible_State to False
            
            Procedure Combo_Fill_List
                    Local String Availdrv## TempDrv##
                    Local Integer HowMany i p1## p2##
            
                    get_profile_string "WorkSpaces" "CurrentWorkspace" to AvailDrv##
                    If AvailDrv## eq "" Get WorkspaceName of (ProgramWorkspace(Self)) to AvailDrv##
                    insert "WorkSpaces\" in AvailDrv## at 1
                    get_profile_string AvailDrv## "AvailableDrivers" to AvailDrv##
            
                    Move Availdrv## to Tempdrv##
                    Repeat
                        Replace "|" in Tempdrv## With ""
                        [Found] Increment HowMany
                    Until [Finderr]
            
                    Send Combo_add_Item ""
            
                    If HowMany lt 1 Begin
                        If Availdrv## ne "" Send Combo_Add_Item (UpperCase(Availdrv##))
                    End
                    Else Begin
                        For i From 0 to HowMany
                            If i eq 0 Move 1 to p1##
                            Else Begin
                                Move ((Pos("|",Availdrv##))+1) to p1##
                                Replace "|" in Availdrv## With ","
                            End
                            Move ((Pos("|",Availdrv##))) to p2##
                            Send Combo_Add_Item (UpperCase(Mid(Availdrv##,(p2##-p1##),p1##)))
                        Loop
                    End
            End_Procedure
            
            Set Allow_Blank_state to True
            
            
            
            
            
            //AB-StoreEnd

        End_Object    // ComboForm2

        Object Textbox6 is a TextBoxSub
            Set Label to "É†ò°¶£†©´„™"
            Set Color to 13688273
            Set FontSize to 4 0
            Set Location to 66 -21787
            Set Size to 10 44
            Set Justification_Mode to jMode_Left
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // Textbox6

        Object Form4 is a FormSub

            //AB-StoreTopStart
                                                                                                            
            //AB-StoreTopEnd

            Set Size to 13 175
            Set Location to 71 116
            Set Label_Col_Offset to 2
            Set Label_Justification_Mode to jMode_Right
            Set Form_TypeFace Item 0 to "MS Sans Serif"

            //AB-StoreStart
                                                                                                            
                                                                                                            
            Set Enabled_State to False
            Set Visible_State to False
            
            
            //AB-StoreEnd

        End_Object    // Form4

        Object Textbox7 is a TextBoxSub
            Set Label to "ï®„©´û™"
            Set Color to 13688273
            Set FontSize to 4 0
            Set Location to 14 81
            Set Size to 10 33
            Set Justification_Mode to jMode_Left
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // Textbox7

        Object Textbox8 is a TextBoxSub
            Set Label to "â‡õ†°Ê™"
            Set Color to 13688273
            Set FontSize to 4 0
            Set Location to 37 81
            Set Size to 10 33
            Set Justification_Mode to jMode_Left
            Set TypeFace to "MS Sans Serif"
            Set Enabled_State to TRUE
        End_Object    // Textbox8

        Object BitmapContainerSub2 is a BitmapContainerSub
            Set Size to 60 71
            Set Location to 6 4
            Set Bitmap to "Protem-233.bmp"
            Set Border_Style to Border_None
            Set Bitmap_Style to Bitmap_Stretch
        End_Object    // BitmapContainerSub2


        //AB-StoreStart
        
        Set Modal_State to True
        
        ON_KEY KENTER SEND OnClick to (oOk_bn(Current_Object))
        ON_KEY KSAVE_RECORD SEND OK
        ON_KEY KCANCEL SEND EXIT_APPLICATION
        ON_KEY KCLOSE_PANEL SEND EXIT_APPLICATION
        
        Set Locate_Mode to Center_On_Screen
        Set Exit_Application_Local_State to False
        Set Exit_MSG to Exit
        Set Description_State to True
        
        Property Integer LoginOk public false
        
        External_Function32 WNetGetUser "WNetGetUserA" MPR.DLL ;
            Pointer lpName Pointer lpUser_Name Pointer lpLength Returns DWord
        
        Function Network_User_Name Returns String
            Local String sName sLength
            Local Pointer lpName_Addr lpLength_Addr
            Local Integer iRetval
        
            Movestr (Repeat (Character (0), 255)) To sName
            GetAddress Of sName To lpName_Addr
            Movestr (DwordToBytes (255)) To sLength
            GetAddress Of sLength To lpLength_Addr
        
            Moveint (WNetGetUser (0, lpName_Addr, lpLength_Addr)) To iRetval
        
            If iRetval Eq 0 Function_Return (CString (sName))
            Else Function_Return "User Unknown"
        End_Function // Network_User_Name
        
        
        //Object oCrypt is a dbOLEChilkatCrypt2
        //End_Object
        
        //Function fsEncryptOrDecryptMyString Integer aiEncryptOrDecrypt String asText Returns String
        //    String password sReturnText
        //    Move "" to sReturnText
        
        //    //------------------------------------------------------------------------
        //    // Ñ´¶†£ò©ú ´†™ ßò®ò£ú´®¶¨™ ö†ò ´¶ encryption / decryption
        //    //------------------------------------------------------------------------
        //    SET ChilkatCrypt2CryptAlgorithm Of oCrypt to "ARC4" //"aes"
        //    SET ChilkatCrypt2CipherMode     Of oCrypt to "cbc"
        //    SET ChilkatCrypt2KeyLength      Of oCrypt to  16
        //    Move "YannisSecretPhrase"                 to password
        //    //  Generate a binary secret key from a password string
        //    //  of any length.  For 128-bit encryption, GenEncodedSecretKey
        //    //  generates the MD5 hash of the password and returns it
        //    //  in the encoded form requested.  The 2nd param can be
        //    //  "hex", "base64", "url", "quoted-printable", etc.
        //    String hexKey
        //    Get ChilkatCrypt2GenEncodedSecretKey    Of oCrypt password "hex" to hexKey
        //    Send ChilkatCrypt2SetEncodedKey         Of oCrypt hexKey   "hex"
        //    SET ChilkatCrypt2EncodingMode           Of oCrypt                to "base32"
        //    //------------------------------------------------------------------------
        //    // Ñ´¶†£ò©ú ´†™ ßò®ò£ú´®¶¨™ ö†ò ´¶ encryption / decryption
        //    //------------------------------------------------------------------------
        
        //    If (aiEncryptOrDecrypt=1) Begin
        //        // Encrypt a string and return the binary encrypted data
        //        //  in a base-64 encoded string.
        //        Get ChilkatCrypt2EncryptStringENC Of oCrypt asText to sReturnText
        //    End
        //    Else If (aiEncryptOrDecrypt=2) Begin
        //        //  Decrypt and show the original string:
        //        Get ChilkatCrypt2DecryptStringENC Of oCrypt asText to sReturnText
        //    End
        //    Function_Return sReturnText
        //End_Function
        
        
        Procedure Activating
            Local String LoginDriver## LoginServer## LoginUserid## LoginPassword##
            Local String LastLogin## LoginSeq##
            Local Integer SavePassword##
        
            Forward Send Activating
        
            Set Value of frmUser    Item 0 to ""
            Set Value of frmKodikos Item 0 to ""
        
        //---------------
        // REM 14/11/2011
        //    get_profile_string "WorkSpaces" "CurrentWorkspace" to LastLogin##
        //    If LastLogin## eq "" Get WorkspaceName of (ProgramWorkspace(Self)) to LastLogin##
        //    insert "WorkSpaces\" in LastLogin## at 1
        //    Append LastLogin## "\" (Module_Name(Self)) "\LastLogin"
        //    get_profile_string LastLogin## "LoginDriver" to LoginSeq##
        
            Move "DATAFLEX|SQL_DRV.DLL|DATAFLEX"    to LoginSeq##
            Move ""                                 to LoginServer##
        
            If "|" in LoginSeq## move (left(LoginSeq##,(pos("|",LoginSeq##) -1)))   to LoginDriver##
            Else Move LoginSeq##                                                    to LoginDriver##
        
        //    get_profile_string LastLogin## "LoginServer"  to LoginServer##
        //    get_profile_string LastLogin## "LoginUserId"  to LoginUserId##
        //    get_profile_string LastLogin## "SavePassword" to SavePassword##
        
        //    If LoginUserId## eq "" Move (Network_User_Name(Current_Object)) to LoginUserId##
        
            If (((UpperCase(LoginDriver##)) eq "DATAFLEX") or (LoginDriver## eq "")) Begin
                    Set Value of (ComboForm2(Current_Object)) Item 0 to ""
                    Set Value of (Form4(Current_Object))      Item 0 to ""
            End
            Else Begin
                Set Value of (ComboForm2(Current_Object)) Item 0 to LoginDriver##
                Set Value of (Form4(Current_Object))      Item 0 to LoginServer##
            End
        
        //    Set Value of (frmUser(Current_Object))          Item 0 to LoginUserID##
        //    Set Select_State of (CheckBox1(Current_Object)) Item 0 to SavePassword##
        
        //    If (SavePassword##) Begin
        //        Set_Registry_Root TO HKEY_CURRENT_USER "Software"
        //        get_foreign_profile_string ("SubNet Hellas\"+(WorkspaceName(ProgramWorkspace(Self)))+"\"+(Module_Name(Self))) LoginUserID## "Access" to LoginPassword##
        
        //        // 28/07/2011
        //        //Set Value of (frmKodikos(Self)) Item 0 to LoginPassword##
        
        //        Clear Users
        //        Move LoginUserId## to Users.Login_ID
        //        Find Eq Users by Index.1
        //        If (Trim(Users.Password)<>"") Set Value of (frmKodikos(Self)) Item 0 to (fsCryptoNew(Self,"Decrypt",LoginPassword##))
        //        Else                          Set Value of (frmKodikos(Self)) Item 0 to ""
        
        //        // 28/07/2011 REM until we finish the securities
        //        //Set Value of (frmKodikos(Self)) Item 0 to (fsCrypto(Self,"Backward",LoginPassword##))
        //                                                  //(fsEncryptOrDecryptMyString(Self,2,LoginPassword##))
        
        //        SET_REGISTRY_ROOT to HKEY_LOCAL_MACHINE "SOFTWARE"
        //    End
        End_Procedure
        
        Function LoginUser Returns Integer
            Integer SavePassword## Size## PasswordOk success
            String LoginDriver## LoginServer## LoginUserid## LoginPassword## LoginSeq## LastLogin##
            String lsLoginDate lsHH lsMM lsSS sDepartment
            Integer liOpenCursors
            String sUsrP
            //String sDeCryptoPassw
        
            Send Popup_Modal
        
            // Trexei thn Activating kai meta epanerxetai edo
        
            //Send Activate Of oCrypt
            //Get ChilkatCrypt2UnlockComponent Of oCrypt "Crypt12345678_4CC88148VHXA" to success
        
            //Get Checked_State Of CheckBox1 to SavePassword##
        
            //If (SavePassword##) Begin
            //    Set_Registry_Root TO HKEY_CURRENT_USER "Software"
            //    get_foreign_profile_string ("SubNet Hellas\"+(WorkspaceName(ProgramWorkspace(Self)))+"\"+(Module_Name(Self))) LoginUserID## "Access" to LoginPassword##
            //    Set Value of (frmKodikos(Current_Object)) Item 0 to (fsEncryptOrDecryptMyString(Self,2,LoginPassword##))
            //    SET_REGISTRY_ROOT to HKEY_LOCAL_MACHINE "SOFTWARE"
            //End
        
            Get Value of (ComboForm2(Current_Object))       Item 0 to LoginDriver##
            Get Value of (Form4(Current_Object))            Item 0 to LoginServer##
        
            Get Value of (frmUser(Current_Object))          Item 0 to LoginUserID##
            Get Value of (frmKodikos(Current_Object))       Item 0 to LoginPassword##
        
            Get Select_State of (CheckBox1(Current_Object)) Item 0 to SavePassword##
        
            //---------------
            // REM 14/11/2011
            //Set Value of (frmKodikos(Current_Object))       Item 0 to ""
                get_profile_string "WorkSpaces" "CurrentWorkspace" to LastLogin##
                If LastLogin## eq "" Get WorkspaceName of (ProgramWorkspace(Self)) to LastLogin##
                insert "WorkSpaces\" in LastLogin## at 1
                Append LastLogin## "\" (Module_Name(Self))
                Append LastLogin## "\LastLogin"
                set_profile_string LastLogin## "LoginUserId" to LoginUserId##
            //---------------
            // REM 14/11/2011
        
        
            If ((LoginDriver## <> "") and (UpperCase(LoginDriver##)<>"DATAFLEX"))  begin
                Set LoginOk to True
            End
            Else Begin
                Set LoginOk to True
                Open "Users" as Users
                Move "DATAFLEX" To LoginDriver##
                Move "" to LoginServer##
                File_Size Users to Size##
                If Size## ne 0 Begin
                     Clear Users
                     Move LoginUSerId##   to Users.Login_Id
                     Find eq Users by Index.1
                     [Finderr] Begin
                        Error 9001 "é Æ®„©´û™ úÂ§ò† ·ö§‡©´¶™"
                        Set LoginOk to False
                        Get LoginOk to PasswordOk
                        Function_Return PasswordOk
                     End
        
                     [Found] Begin
        
        
                        //// Yannis 09/03/2017
                        //If (Users.Admin_Rights=1) Begin
                        //    Move 1 to iHasAPassword
                        //    Move Users.Departm_Code  to sDepartment
                        //    Move (Trim(sDepartment)) to sDepartment
                        //    Goto NowOK
                        //End
        
        
                        If (Users.Anenergos="1") Begin
                            Move 1 to iAnenergos
                            Error 9669 "é Æ®„©´û™ úÂ§ò† ò§ú§ú®öÊ™"
                            Move 1 to iHasAPassword
                            Set LoginOk to False
                            Get LoginOk to PasswordOk
                            Function_Return PasswordOk
                        End
        
                        Move (Trim(Users.Password)) to sUsrP
        
                        // 28/07/2011 REM until we finish the securities
                        Move (fsCryptoNew(Self,"Decrypt",sUsrP))  to sUsrP
        
                        //If ((LoginPassword## <> sUsrP) And (Trim(sUsrP)<>"")) Begin
                        If (LoginPassword## <> sUsrP) Begin
                            Error 9002 "é °‡õ†°Ê™ úÂ§ò† ¢ò§üò©£‚§¶™"
                            Move 1 to iHasAPassword
                            Set LoginOk to False
                            Get LoginOk to PasswordOk
                            Function_Return PasswordOk
                        End
        //                Else If ((LoginPassword## <> sUsrP) And (Trim(LoginPassword##)<>"") And (Trim(sUsrP)<>"")) Begin
        //                    Error 9002 "é °‡õ†°Ê™ úÂ§ò† ¢ò§üò©£‚§¶™"
        //                    Move 1 to iHasAPassword
        //                    Set LoginOk to False
        //                    Get LoginOk to PasswordOk
        //                    Function_Return PasswordOk
        //                End
                        Else Begin
                            //If (LoginPassword## = sUsrP) Begin
                            //And (Trim(LoginPassword##)<>"")) OR ;
                            //      ((LoginPassword##=sUsrP) And (Trim(LoginPassword##) ="")) Begin
                            Date dShmera
                            String sHH sMM sSS sTime
                            Sysdate dShmera sHH sMM sSS
                            Move (Trim(sHH)) to sHH
                            Move (Trim(sMM)) to sMM
                            Move (Trim(sSS)) to sSS
                            If (Length(sHH)=1) Insert '0' in sHH at 1
                            If (Length(sMM)=1) Insert '0' in sMM at 1
                            If (Length(sSS)=1) Insert '0' in sSS at 1
                            Move (sHH+":"+sMM+"."+sSS) to sTime
        
                            Reread Users
        
                            If (Users.Next_Change<>"") Begin
                                Reread Sysrec
                                Unlock
                                Move (Users.Next_Change<dShmera) to iMustResetPass
                            End
        
                            Move dShmera                    to Users.Last_Login_Date
                            Move sTime                      to Users.Last_Login_Time
        
                            If ((iMustResetPass) Or (Trim(sUsrP)="")) Begin
        
                                If (Trim(Users.Password)<>"") ;
                                    Move Users.Password to Users.Last_Password
        
                                //Move ""                 to Users.Password
                                Move ""                 to sUsrP
        
                                Send Info_Box "é õ†·®°ú†ò ´¶¨ ß®¶ûö¶Á£ú§¶¨ °‡õ†°¶Á ßò®„¢üú\nè®‚ßú† §ò °ò´òÆ‡®„©ú´ú §ú¶ °‡õ†°Ê ú†©Êõ¶¨" "è¢û®¶≠¶®Âò"
        
        
                                Saverecord Users
                                Unlock
        
                                Move 0 to iHasAPassword
                                Set LoginOk to False
                                Get LoginOk to PasswordOk
                                Function_Return PasswordOk
        
                            End
                            Saverecord Users
                            Unlock
                            //End
                        End
                        Move (Trim(sUsrP)<>"")   to iHasAPassword
                        Move Users.Departm_Code  to sDepartment
                        Move (Trim(sDepartment)) to sDepartment
        
                        NowOK:
                     End
                End
                Close Users
            End
        
            Open Users
            File_Size Users to Size##
            If Size## ne 0 Begin
                Clear Users
                Move LoginUSerId##   to Users.Login_Id
                Find eq Users by Index.1
                [Finderr] Begin
                    Error 9003 "é Æ®„©´û™ úÂ§ò† ·ö§‡©´¶™"
                    Set LoginOk to False
                    Get LoginOk to PasswordOk
                    Function_Return PasswordOk
                 End
                 [Found] Begin
        
                        //// Yannis 09/03/2017
                        //If (Users.Admin_Rights=1) Begin
                        //    Goto NowOK2
                        //    Move 1 to iHasAPassword
                        //    Move Users.Departm_Code  to sDepartment
                        //    Move (Trim(sDepartment)) to sDepartment
                        //    //Function_Return PasswordOk
                        //End
        
                    Move (Trim(Users.Password)) to sUsrP
        
                    // 28/07/2011 REM until we finish the securities
                    Move (fsCryptoNew(Self,"Decrypt",sUsrP))  to sUsrP
        
                    If ((LoginPassword## <> sUsrP) And (Trim(LoginPassword##)<>"")) Begin
                        Error 9002 "é °‡õ†°Ê™ úÂ§ò† ¢ò§üò©£‚§¶™"
                        Move 1 to iHasAPassword
                        Set LoginOk to False
                        Get LoginOk to PasswordOk
                        Function_Return PasswordOk
                    End
                    Else Begin
                        If ((LoginPassword## = sUsrP) And (Trim(LoginPassword##)<>"")) Begin
                                Sysdate dShmera sHH sMM sSS
                                Move (Trim(sHH)) to sHH
                                Move (Trim(sMM)) to sMM
                                Move (Trim(sSS)) to sSS
                                If (Length(sHH)=1) Insert '0' in sHH at 1
                                If (Length(sMM)=1) Insert '0' in sMM at 1
                                If (Length(sSS)=1) Insert '0' in sSS at 1
                                Move (sHH+":"+sMM+"."+sSS) to sTime
        
                                Reread Users
        
                                If (Users.Next_Change<>"") Begin
                                    Reread Sysrec
                                    Unlock
                                    Move (Users.Next_Change<dShmera) to iMustResetPass
                                End
        
                                Move dShmera                    to Users.Last_Login_Date
                                Move sTime                      to Users.Last_Login_Time
        
                                If (iMustResetPass) Begin
        
                                    If (Trim(Users.Password)<>"") ;
                                        Move Users.Password to Users.Last_Password
        
                                    Move ""                 to Users.Password
                                    Move ""                 to sUsrP
                                End
        
                                Saverecord Users
                                Unlock
        
                        End
                    End
                    Move (Trim(sUsrP)<>"")   to iHasAPassword
                    Move Users.Departm_Code  to sDepartment
                    Move (Trim(sDepartment)) to sDepartment
        
                    NowOK2:
                End
            End
            Close Users
        
            Get LoginOk to PasswordOk
            Sysdate lsLoginDate lsHH lsMM lsSS
            get_profile_string "WorkSpaces" "CurrentWorkspace" to LastLogin##
            If LastLogin## eq "" Get WorkspaceName of (ProgramWorkspace(Self)) to LastLogin##
            insert "WorkSpaces\" in LastLogin## at 1
            get_profile_string LastLogin## "AvailableDrivers" to LoginSeq##
            If ((LoginDriver## ne "") and ((UpperCase(LoginDriver##)) ne "DATAFLEX")) Begin
               If Not LoginDriver## in LoginSeq## Begin
                     If LoginSeq## eq "" Move LoginDriver## to LoginSeq##
                     Else Move (LoginSeq##+"|"+LoginDriver##) to LoginSeq##
                     set_profile_string LastLogin## "AvailableDrivers" to LoginSeq##
               End
            End
            Append LastLogin## "\" (Module_Name(Self))
            Append LastLogin## "\LastLogin"
            get_profile_string LastLogin## "LoginDriver" to LoginSeq##
        
            If "|" in LoginSeq## Begin
                If ((left(LoginSeq##,(pos("|",LoginSeq##) -1))) ne LoginDriver##) Insert (LoginDriver##+"|") in LoginSeq## at 1
            End
            Else Begin
                If LoginSeq## eq "" Move LoginDriver## to LoginSeq##
                Else If LoginSeq## ne LoginDriver## Insert (LoginDriver##+"|") in LoginSeq## at 1
            End
            Left LoginSeq## to LoginSeq## 250
            set_profile_string LastLogin## "LoginDriver" to (UpperCase(LoginSeq##))
            set_profile_string LastLogin## "LoginServer" to LoginServer##
            set_profile_string LastLogin## "LoginUserId" to LoginUserId##
            set_profile_string LastLogin## "SavePassword" to SavePassword##
            If lsHH lt 10 Insert 0 in lsHH at 1
            If lsMM lt 10 Insert 0 in lsMM at 1
            If lsSS lt 10 Insert 0 in lsSS at 1
            Append lsLoginDate " - " lsHH ":" lsMM ":" lsSS
            set_profile_string LastLogin## "LoginTime" to lsLoginDate
            If (SavePassword##) Begin
                Set_Registry_Root TO HKEY_CURRENT_USER "Software"
        
                // 28/07/2011 REM until we finish the securities and cryptography
                //set_foreign_profile_string ("SubNet Hellas\"+(WorkspaceName(ProgramWorkspace(Self)))+"\"+(Module_Name(Self))) LoginUserID## "Access" to LoginPassword##
                set_foreign_profile_string ("SubNet Hellas\"+(WorkspaceName(ProgramWorkspace(Self)))+"\"+(Module_Name(Self))) LoginUserID## "Access" to (fsCryptoNew(Self,"Encrypt",LoginPassword##))
        
                SET_REGISTRY_ROOT to HKEY_LOCAL_MACHINE "SOFTWARE"
            End
            Else Begin
                Set_Registry_Root TO HKEY_CURRENT_USER "Software"
                set_foreign_profile_string ("SubNet Hellas\"+(WorkspaceName(ProgramWorkspace(Self)))+"\"+(Module_Name(Self))) LoginUserID## "Access" to ""
                SET_REGISTRY_ROOT to HKEY_LOCAL_MACHINE "SOFTWARE"
            End
        
            Function_Return PasswordOk
        End_Function
        
        
        Procedure Login For Desktop
            Local Integer LoginPassword##
        
            Add 1 to iMetrhthsProsp
        
            Get LoginUser of (Connect(Current_Object)) to LoginPassword##
        
            If Not LoginPassword## Move 99 to iApotel // 30-08-2011  Send Exit_Application
        End_Procedure
        
        Function CheckLogin For Desktop Returns Integer
            Local Integer LoginPassword##
            Get LoginUser of (Connect(Current_Object)) to LoginPassword##
            Function_Return LoginPassword##
        End_Function
        
        
        
        
        //AB-StoreEnd

    End_Object    // Connect


    //AB-StoreStart
                
                
                
                
                
                
                
    //AB-StoreEnd

//AB/     End_Object    // prj
