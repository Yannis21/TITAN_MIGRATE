        Use clients.dd
        Use clorder.dd
        Use clorderd.dd
        Use v94_1.vw
        use areas.dd
        use country.dd
        use towns.dd
        use cities.dd
        use payresp.dd

      Object oDoektel is A BusinessProcessSub
        set Status_panel_state to false
        set Display_Error_state to true

        property string psclid
        property string psrecr
        property integer piTxtID public 0
        property integer piLathos public 0

        Object Areas_DD is a Areas_DataDictionary
        End_Object    // Areas_DD


        Object Country_DD is a Country_DataDictionary
        End_Object    // Country_DD

        Object Towns_DD is a Towns_DataDictionary
           Set DDO_Server to (Country_DD(self))
        End_Object    // Towns_DD

        Object Cities_DD is a Cities_DataDictionary
           Set DDO_Server to (Towns_DD(self))
        End_Object    // Cities_DD

        Object Payresp_DD is a Payresp_DataDictionary
        End_Object    // Payresp_DD


        Object Clients_DD is a Clients_DataDictionary
           Set DDO_Server to (Cities_DD(self))
           Set DDO_Server to (Payresp_DD(self))
           Set DDO_Server to (Areas_DD(self))
        End_Object  // Clients_DD


       Object Clorder_DD is a Clorder_DataDictionary
          Set DDO_Server to (Clients_DD(self))
          Set Constrain_File to Clients.File_Number
       End_Object  // Clorder_DD

       Object Clorderd_DD is a Clorderd_DataDictionary
        Set DDO_Server to (Clorder_DD(self))
        begin_constraints
             string wrecr
             get psrecr to wrecr
             Constrain clorderd.clorder_recr eq wrecr
             Constrain clorderd.akyrh eq 0
        End_Constraints
       End_Object  // Clorderd_DD




PROCEDURE beg_upektel string wrecr string clid
          set psrecr to wrecr
          set psclid to clid
          SEND DOPROCESS
END_PROCEDURE

Procedure upektel_rec
    Local Integer liclientsddo## liclorderDdo## liclorderdDdo##  liyear##  akyrh##
    local string  lscompany## lsbranch## lsaapar##  wrecr##  lsrecr## sclid itemcode
    Integer iColumn iFieldNumber iFileNumber extrastatus## iFromPCT iDecimals iYear iColfrom iColTo
    Number nQty nTimhMon nQtyTimhMon nPctEkpt nPosoEkpt preis## nqtykinhsh  lnqty##
    Number nPosoNet nPctFpa nPosoFpa nPosoSynolo nFpa nextra
    String sNameFrom sNameTo sRecr rval## ritem## rprom##  name##  wname## sitem## msgstr##
    local integer rval icol iBase_item


        Move (clients_DD(self))   to liClientsDDo##
        Move (clorder_DD(self))   to liclorderDDo##
        Move (clorderd_DD(self))  to liclorderdDDo##

        send clear to liclientsddo##
        send clear to liclorderddo##
        send clear to liclorderdddo##
        get psrecr to wrecr##
        get psclid  to sclid
        move sclid to clients.client_id
        send find to liclientsddo## eq 6
        if (found = 1) begin
           move wrecr## to clorder.recr
           Send Find  to liclorderDDo## eq  2
           if (found = 1) begin
              send Rebuild_constraints to liclorderdDDo##
              Send Find  to liclorderddDo## first_record 3 // js 10/10/2001 Allagh apo Index 1
              While (found eq 1)
                get field_current_value of liclorderdDdo## field clorderd.item_code to itemcode
                get field_current_value of liclorderdDdo## field clorderd.ypol_qty to lnqty##
                if (lnqty## > 0) begin
                  set field_changed_value of liclorderdDdo## field clorderd.kinish_posothta to lnqty##
                end
                get Field_Current_Value Of liclorderdDdo## Field clorderd.unitprice   To nTimhMon
                move lnqty## To nqtykinhsh
                If ((lnQty##>0) And (nTimhMon<>0)) Begin
                   Move (round_number((nQtykinhsh*nTimhMon),2)) to nQtyTimhMon
                   Get Field_Current_Value Of liclorderdDdo## Field clorderd.pcdisc   To nPctEkpt
                   Move  (Round_number(((nQtyTimhMon*nPctEkpt/100)),2))                          to nPosoEkpt
                   Move (nQtyTimhMon-nPosoEkpt)                                       To nPosoNet
                   Get Field_Current_Value Of liclorderdDdo## Field clorderd.pcfpa    To nPctFpa
                   Move  (Round_number(((nPosoNet*nPctFpa/100)),2))                              to nPosoFpa
                   Get Field_Current_Value Of liclorderdddo## Field clorderd.posoextra To nextra
                   Move (nPosoNet+nPosoFpa+nextra)                                    to npososynolo
                   Set Field_Changed_Value Of liclorderdDDo## Field clorderd.kinhsh_poso To nPosoSynolo
                End
             send request_save to liclorderdDdo##
             Send UpdateWait to (piTxtID(Self))  ('Ñ°´‚¢ú©û èò®òööú¢Âò™ ÑÂõ¶¨™ '+(String(itemcode)))
             Send Find  to liclorderdDdo## next_record 3
             loop
          end
        end
End_Procedure

Procedure OnProcess
       send upektel_rec
End_Procedure

Procedure Start_Process
         Set piTxtID                         to (Wait(Self))
         Set Button_State    of (Wait(Self)) to False
         Set BarVisibleState of (Wait(Self)) to '' False
         Send Popup                          to (Wait(Self))
         Set piLathos                        to 0
         Forward Send Start_Process
End_Procedure

    Procedure OnError integer error_info string errMsg
       If (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
    End_Procedure


    Procedure End_Process
       Forward Send End_Process
       If (piTxtID(Self)<>0) Send Deactivate to (piTxtID(Self))
    End_Procedure


End_Object


